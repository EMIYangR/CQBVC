[{"章节":"第七章","题目类型":"单选题","题干":"对于下列代码的出错原因,描述正确的是( )\r\nclass Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n\t\t    //创建Appliance对象时报错\r\n            Appliance apl = new Appliance();\r\n            Appliance mlp = new MobilePhone();\r\n        }\r\n    }\r\n\r\n    abstract class Appliance\r\n    {\r\n        public abstract void Charge();\r\n    }\r\n\t\r\n    class MobilePhone : Appliance\r\n    {\r\n        public void Call()\r\n        {\r\n            Console.WriteLine(\"手机可以打电话。\");\r\n        }\r\n\r\n        public override void Charge()\r\n        {\r\n            Console.WriteLine(\"手机使用110V电压充电。\");\r\n        }\r\n    }","分值":2,"题目难度":"中","题目维度":"代码纠错","答案":"B","A":"Appliance类在实例化的时候书写的位置不正确，导致报错。","B":"Appliance是一个抽象类，不允许直接实例化,只能够实例化非抽象的子类MobilePhone。","C":"定义Appliance类的时候在Charge方法中没有任何方法体，所以创建其对象没有任何意义，所以系统报出错误。","D":"代码关系没有理解错误，应该写为:MobilePhone pm = new Appliance()。","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第七章","题目类型":"单选题","题干":"    下列代码报错的原因是（）\r\n public interface IAnimal \r\n    {\r\n\t    //Eat方法报错\r\n        void Eat() \r\n        {\r\n            Console.WriteLine(\"动物需要吃饭。\");\r\n        }\r\n    }","分值":2,"题目难度":"易","题目维度":"代码纠错","答案":"C","A":"study()方法没有加访问修饰符public,导致报错。","B":"接口IStudent没有添加修饰符public,导致报错。","C":"Study()方法是属于接口IStudent的成员方法，不能够有具体实现。导致报错。","D":"方法体输出语句有问题，导致报错。","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第二章","题目类型":"单选题","题干":"（）在属性的set 块实现内，用于访问传递给该属性的内置参数。","分值":2,"题目难度":"易","题目维度":"概念理解","答案":"B","A":" This ","B":"Value","C":"Args","D":"property","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第三章节","题目类型":"单选题","题干":"ArrayList中存储的元素超出容量时，会出现下列哪种状态（）","分值":2,"题目难度":"易","题目维度":"特性分析","答案":"D","A":"其容量变为之前的一半","B":"程序会报错","C":"其容量不变","D":"其容量自动增长一倍","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第五章","题目类型":"单选题","题干":"A类被B类继承，B类被C类继承，那么C类具有了A类的特征，这表现了类的（）","分值":2,"题目难度":"易","题目维度":"概念理解","答案":"B","A":"封装性","B":"传递性","C":"单根性","D":"规律性","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第五章","题目类型":"多选题","题干":"c#程序中使用继承的优点有哪些（）","分值":2,"题目难度":"易","题目维度":"概念理解","答案":"ABC","A":"提高部分模块代码的复用性","B":"提高部分模块代码的扩展性","C":"提高软件的开发效率","D":"提高代码的运行速度","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第一章","题目类型":"单选题","题干":"C# 类中内部成员，不包括（）","分值":2,"题目难度":"易","题目维度":"概念理解","答案":"D","A":"方法","B":"字段","C":"属性","D":"抽象","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第三章","题目类型":"单选题","题干":"C# 中的集合被定义在（）命名空间中。","分值":2,"题目难度":"易","题目维度":"概念理解","答案":"C","A":"System.Collections.Generic","B":"System.IO","C":"System.Collections","D":"System.Reflection","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第三章","题目类型":"多选题","题干":"C# 中的集合的特点有下列哪些（）","分值":2,"题目难度":"中","题目维度":"特性分析","答案":"ABC","A":"动态的改变大小","B":"可存储任意类型的对象","C":"提供一系列操作集合中对象的方法","D":"有固定的大小","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第二章","题目类型":"单选题","题干":"C#面向对象中，例如：客户去银行取现金，不可能直接从保险柜中随意拿取现金，只能通过ATM或业务办理窗口取出存在银行的现金，那么现金就就可以看作银行对象的（），ATM机业务办理窗口看作（），即可体现面向对象中封装的特性。","分值":2,"题目难度":"难","题目维度":"概念理解","答案":"B","A":"属性；字段","B":"字段；属性","C":"字段；方法","D":"属性；方法","E":"null","日期":"NaN-NaN-NaN"},{"章节":"综合","题目类型":"多选题","题干":"C#中的多态可以通过（）实现","分值":2,"题目难度":"中","题目维度":"概念理解","答案":"BCD","A":"密封类","B":"方法重载","C":"抽象类","D":"虚方法","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第二章","题目类型":"单选题","题干":"C#中的方法重载主要包括参数不同类型的重载和参数数量不同的重载，下列选项中的两\r\n个方法不属于重载方法的是（ ）","分值":2,"题目难度":"中","题目维度":"概念理解","答案":"B","A":"public int Hello(int int1){// 省略方法体}\r\npublic int Hello(String str1){// 省略方法体}","B":"public int Hello(){// 省略方法体}\r\npublic String Hello(){// 省略方法体}","C":"public int Hello(){// 省略方法体}\r\npublic int Hello (String str1){// 省略方法体}","D":"public String Hello(String str1, String str2){// 省略方法体}\r\npublic String Hello(String str){// 省略方法体}","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第二章","题目类型":"单选题","题干":"C#中的属性主要体现了面向对象编程的（）特性。","分值":2,"题目难度":"易","题目维度":"概念理解","答案":"A","A":"封装","B":"继承","C":"多态","D":"抽象","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第五章","题目类型":"单选题","题干":"C#中若要某方法只能在当前类或当前类的派生类中访问，可以使用（）访问修饰符","分值":2,"题目难度":"易","题目维度":"概念理解","答案":"C","A":"public","B":"private","C":"protected","D":"internal","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第五章","题目类型":"单选题","题干":"C#中若要某方法只能在当前类中访问，可以使用（）访问修饰符","分值":2,"题目难度":"易","题目维度":"概念理解","答案":"B","A":"public","B":"private","C":"protected","D":"internal","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第七章","题目类型":"单选题","题干":"C#中使用(  )关键字定义接口。","分值":2,"题目难度":"易","题目维度":"特性分析","答案":"A","A":"interface","B":"abstruct","C":"struct","D":"virtual","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第六章","题目类型":"单选题","题干":"C#中使用overried重写父类的同名方法，可以体现出面向对象编程的（）特性。","分值":2,"题目难度":"易","题目维度":"概念理解","答案":"C","A":"封装","B":"继承","C":"多态","D":"抽象","E":"null","日期":"NaN-NaN-NaN"},{"章节":"综合","题目类型":"单选题","题干":"C#中下列代码运行结果是（）\r\npublic abstract class A\r\n    {\r\n        public A()\r\n        {\r\n            Console.Write(\"A\");\r\n        }\r\n        public virtual void Fun()\r\n        {\r\n            Console.WriteLine(\"C\");\r\n        }\r\n    }\r\n    public class B : A\r\n    {\r\n        public B()\r\n        {\r\n            Console.Write(\"B\");\r\n        }\r\n        public new void Fun()\r\n        {\r\n            Console.WriteLine(\"D\");\r\n        }\r\n    }\r\n    class Program\r\n    {\r\n       \r\n        static void Main(string[] args)\r\n        {\r\n            A a = new B();\r\n        }\r\n    }","分值":2,"题目难度":"难","题目维度":"特性分析","答案":"C","A":"ABCD","B":"BDAC","C":"AB","D":"BA","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第六章","题目类型":"单选题","题干":"C#中下列代码运行结果是（）\r\npublic class Student\r\n    {\r\n        public virtual void Exam()\r\n        {\r\n            Console.WriteLine(\"学生都要考试\");\r\n        }\r\n    }\r\n    public class Undergraduate : Student\r\n    {\r\n        public new void Exam()\r\n        {\r\n            Console.WriteLine(\"大学生有选择考试科目的权利\");\r\n        }\r\n    }\r\nclass Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            Student stu = new Undergraduate();\r\n            stu.Exam();\r\n        }\r\n    }","分值":2,"题目难度":"难","题目维度":"结果判断","答案":"A","A":"学生都要考试","B":"大学生有选择考试科目的权利","C":"学生都要考试    \r\n大学生有选择考试科目的权利","D":"学生都要考试\r\n学生都要考试","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第三章节","题目类型":"多选题","题干":"foreach 循环在处理集合和数组相对于 for 循环的优势有哪些（）","分值":2,"题目难度":"中","题目维度":"特性分析","答案":"ABCD","A":"语句简洁","B":"效率更加高","C":"不需要知道循环次数","D":"不用关心数组的起始索引","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第九章","题目类型":"单选题","题干":"FileMode 的枚举值Create描述正确的是（）","分值":2,"题目难度":"易","题目维度":"概念理解","答案":"B","A":"创建新文件，如果文件已存在，则引发异常","B":"创建新文件，如果文件已存在，则覆盖","C":"打开文件，如果文件不存在，则引发异常","D":"打开文件，如果文件不存在，则创建新文件","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第三章","题目类型":"单选题","题干":"Hashtable的常用方法不包括（）","分值":2,"题目难度":"易","题目维度":"概念理解","答案":"D","A":"Add","B":"Remove","C":"Clear","D":"Insert","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第八章","题目类型":"单选题","题干":"OpenFileDialog 的CheckFileExists属性的作用是（）","分值":2,"题目难度":"易","题目维度":"概念理解","答案":"A","A":"在用户指定不存在的文件时是否显示警告","B":"对话框的初始目录","C":"文件筛选器，按“显示名称 | 类型”格式编写","D":"在对话框中选择的文件筛选器的索引","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第八章","题目类型":"单选题","题干":"OpenFileDialog 的Filter属性设置正确的是（）","分值":2,"题目难度":"易","题目维度":"概念理解","答案":"C","A":"文本文件~*.txt","B":"文本文件\\*.txt","C":"文本文件|*.txt","D":"文本文件&*.txt","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第八章","题目类型":"单选题","题干":"OpenFileDialog的DefaultExt可以用来设置（）","分值":2,"题目难度":"中","题目维度":"概念理解","答案":"A","A":"默认扩展名","B":"对话框的初始目录","C":"是否自动添加默认扩展名","D":"将显示在对话框标题栏中的字符","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第八章","题目类型":"单选题","题干":"OpenFileDialog对话框可以设置初始目录的属性是（）","分值":2,"题目难度":"难","题目维度":"概念理解","答案":"A","A":"InitialDirectory","B":"FilterIndex  ","C":"Title  ","D":"AddExtension ","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第八章","题目类型":"单选题","题干":"OpenFileDialog对话框可以设置对话框中标题栏的文字的属性是（）","分值":2,"题目难度":"难","题目维度":"概念理解","答案":"A","A":"Title  ","B":"FilterIndex  ","C":"InitialDirectory","D":"AddExtension ","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第八章","题目类型":"单选题","题干":"OpenFileDialog用来设置自动添加默认扩展名的属性是（）","分值":2,"题目难度":"难","题目维度":"概念理解","答案":"C","A":"CheckPathExists","B":"CheckFileExists","C":"AddExtension","D":"DefaultExt","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第九章","题目类型":"单选题","题干":"StreamReader 用于读取一行数据的方法是（）","分值":2,"题目难度":"易","题目维度":"概念理解","答案":"A","A":"ReadLine()","B":"Read()","C":"ReadToEnd()","D":"Close()","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第九章","题目类型":"单选题","题干":"标记对象可以被序列化的特性是（）","分值":2,"题目难度":"中","题目维度":"概念理解","答案":"A","A":"Serializable","B":"Runtime","C":"Formatters","D":"Windows","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第七章","题目类型":"单选题","题干":"抽象类中，子类通过关键字(  )实现抽象方法。","分值":2,"题目难度":"中","题目维度":"特性分析","答案":"D","A":"abstract","B":"interface   ","C":"virtual   ","D":"override","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第八章","题目类型":"多选题","题干":"对文件对话框控件描述正确的是（）","分值":2,"题目难度":"易","题目维度":"概念理解","答案":"ABC","A":"OpenFileDialog是打开文件的对话框","B":"SaveFileDialog是保存文件的对话框","C":"FolderBroswerDialog是打开文件夹的对话框","D":"OpenDialog是打开文件的对话框","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第五章","题目类型":"单选题","题干":"对于C#程序中的访问修饰符描述正确的是（）","分值":2,"题目难度":"易","题目维度":"概念理解","答案":"D","A":"public是完全公开的","B":"private私有的，只能在当前类中进行访问","C":"protected受保护的，只能在当前类或当前类的派生类中访问","D":"以上说法都正确","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第六章","题目类型":"多选题","题干":"对于抽象类的规则以下描述正确的是（）","分值":2,"题目难度":"易","题目维度":"概念理解","答案":"ABCD","A":"不能创建抽象类的实例","B":"不能在抽象类外定义抽象方法","C":"不能把抽象类声明为sealed","D":"抽象类的抽象成员在派生类中必须全部实现","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第六章","题目类型":"单选题","题干":"对于抽象类的意义以下说法正确的是（）","分值":2,"题目难度":"中","题目维度":"概念理解","答案":"D","A":"包含公共的属性和行为，被子类所共享–代码重用","B":"为所有子类提供一种统一的类型–向上造型","C":"包含抽象方法，为子类提供一个统一的入口，子类有不同的实现","D":"以上说法全部正确","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第二章","题目类型":"单选题","题干":"对于方法重载的特点，描述错误的是（）","分值":2,"题目难度":"易","题目维度":"概念理解","答案":"C","A":"方法名称必须相同","B":"方法的参数必须不相同","C":"返回值类型必须相同","D":"可以减轻命名负担","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第二章","题目类型":"单选题","题干":"对于方法重载的作用描述错误的是（）","分值":2,"题目难度":"易","题目维度":"概念理解","答案":"D","A":"可以减轻命名负担","B":"方便自适应调用","C":"代码更灵活","D":"提高了运行效率","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第二章","题目类型":"单选题","题干":"对于构造函数，描述错误的是（）","分值":2,"题目难度":"易","题目维度":"概念理解","答案":"D","A":"构造函数名必须与类名相同","B":"构造函数没有返回值类型","C":"构造函数可以没有参数","D":"一个类只能有一个构造函数","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第八章","题目类型":"多选题","题干":"对于文件操作的Move() 方法说法错误的是（）","分值":2,"题目难度":"中","题目维度":"概念理解","答案":"ABD","A":"可以复制文件","B":"可以检测文件是否存在","C":"移动文件到新的位置","D":"不能移动文件的位置","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第七章","题目类型":"单选题","题干":"对于下列代码的出错描述正确的是（）\r\n\r\n\r\nabstract class Cat\r\n    {\r\n        public void Eat() \r\n        {\r\n            Console.WriteLine(\"小猫喜欢吃鱼!\");\r\n        }\r\n    }\r\n\r\nclass Dog \r\n    {\r\n\t    //Sleep方法报错\r\n        public abstract void Sleep() ;\r\n    }\r\n","分值":2,"题目难度":"中","题目维度":"代码纠错","答案":"A","A":"抽象类可以不包含抽象方法，但是含有抽象方法的类必须定义为抽象类。","B":"抽象方法不允许有方法体。","C":"子类继承于抽象类的时候必要重写抽象类中所有的抽象方法，除非子类也是抽象类。","D":"抽象类不允许实例化，只能够实例化其非抽象子类对象。","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第七章","题目类型":"单选题","题干":"对于下列代码的出错原因,描述正确的是（）\r\n\r\nabstract class Animal\r\n    {\r\n\t    //Eat()方法报错\r\n        public abstract void Eat() \r\n        {\r\n            Console.WriteLine(\"动物需要吃东西!\");\r\n        }\r\n    }","分值":2,"题目难度":"中","题目维度":"代码纠错","答案":"B","A":"单词的拼写出现错误，导致代码出错。","B":"抽象方法不允许有方法体，导致代码出错。","C":"抽象方法的命名不够规范，导致代码出错。","D":"与之相关的代码出错，导致代码出错。","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第七章","题目类型":"单选题","题干":"对于下列代码的出错原因,描述正确的是（）\r\nabstract class Appliance\r\n    {\r\n        public abstract void Charge();\r\n    }\r\n    //MobilePhone位置报错\r\n    class MobilePhone : Appliance\r\n    {\r\n        public void Call()\r\n        {\r\n            Console.WriteLine(\"手机可以打电话。\");\r\n        }\r\n    }","分值":2,"题目难度":"中","题目维度":"代码纠错","答案":"C","A":"电器类Appliance中有隐藏错误，导致MobilePhone类在继承的时候出现错误。 ","B":"MobilePhone单词拼写错误。","C":"子类MobilePhone继承于抽象类Appliance的时候必须要重写抽象类Appliance中所有的抽象方法，除非子类也是抽象类。","D":"其他关联错误。","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第四章","题目类型":"单选题","题干":"泛型方法的类型参数表用什么分割（）","分值":2,"题目难度":"易","题目维度":"特性分析","答案":"A","A":"用<>分隔","B":"用,分隔","C":"用\"\"分隔","D":"用\\分隔","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第四章节","题目类型":"多选题","题干":"泛型方法的类型参数指定了方法的什么内容（）","分值":2,"题目难度":"中","题目维度":"特性分析","答案":"AB","A":"实参的类型","B":"返回类型","C":"形参的类型","D":"什么都没指定","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第四章","题目类型":"单选题","题干":"泛型集合所在的命名空间是（）","分值":2,"题目难度":"易","题目维度":"概念理解","答案":"A","A":"System.Collections.Generic","B":"System.Collections","C":"System.Generic","D":"以上都不对","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第二章","题目类型":"单选题","题干":"根据以下代码，描述正确的是（） \r\npublic class Student\r\n    {\r\n        public string name;\r\n        public string Name\r\n        {\r\n            get { return name; }\r\n        }\r\n    }","分值":2,"题目难度":"易","题目维度":"概念理解","答案":"B","A":"Name具有写入权限","B":"Name具有读取权限","C":"Name具有读取，也有写入权限","D":"Name无读取，也无写入权限","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第七章","题目类型":"单选题","题干":"关于C#中抽象类的说法，错误的是（）","分值":2,"题目难度":"易","题目维度":"概念理解","答案":"C","A":"抽象类可以不包含抽象方法，但是含有抽象方法的类必须定义为抽象类。","B":"抽象方法不允许有方法体。","C":"子类继承于抽象类的时候没有必要重写抽象类中所有的抽象方法，即便子类不是抽象类。","D":"抽象类不允许实例化，只能够实例化其非抽象子类对象。","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第四章","题目类型":"单选题","题干":"关于Dictionary<k,v>，描述错误的是（）","分值":2,"题目难度":"易","题目维度":"概念理解","答案":"A","A":"可以通过下标获取值","B":"可以通过键获取值","C":"描述的是键值对","D":"Keys属性表示键集合","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第四章","题目类型":"单选题","题干":"关于List<T>，描述错误的是（）","分值":2,"题目难度":"易","题目维度":"概念理解","答案":"B","A":"是ArrayList的泛型版","B":"可以通过键获取值","C":"可以通过下标获取值","D":"可以调用Insert方法将元素添加到指定位置","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第七章","题目类型":"单选题","题干":"关于抽象方法和虚方法的区别说法不正确的是（）","分值":2,"题目难度":"中","题目维度":"概念理解","答案":"D","A":"抽象方法和虚方法都是为了实现多态的功能。","B":"抽象方法只提供一个功能名称，要求子类必须实现该功能。","C":"虚方法使用关键字virtual修饰。","D":"虚方法虽然不止提供了功能名称还提供了默认的实现方式，但是子类还是必须重新实现该功能。","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第一章","题目类型":"多选题","题干":"关于对象的概念，下列说法正确的有（）","分值":2,"题目难度":"难","题目维度":"概念理解","答案":"ABD","A":"对象是类的实例","B":"独一无二存在的个体","C":"对象是虚拟的","D":"客观存在的","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第一章","题目类型":"单选题","题干":"关于对象的使用，下列说法正确的是（）","分值":2,"题目难度":"易","题目维度":"概念理解","答案":"B","A":"声明后就可以使用","B":"声明并且使用new关键字创建对象后才能使用","C":"创建类之后就可以使用对象","D":"声明后可以调用方法，使用new关键字创建对象后才能调用字段","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第六章","题目类型":"单选题","题干":"关于多态的实现方式以下不正确的是（）","分值":2,"题目难度":"易","题目维度":"概念理解","答案":"C","A":"使用new关键字隐藏父类的方法","B":"使用override关键字重写父类的方法","C":"使用public完全公开父类的方法","D":"使用virtual关键字定义父类方法为虚方法","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第四章","题目类型":"单选题","题干":"关于泛型的特点，描述错误的是（）","分值":2,"题目难度":"易","题目维度":"概念理解","答案":"C","A":"泛型是C#2.0新增加的功能","B":"不会强行对值类型装箱和拆箱","C":"数据类型默认为Object","D":"提高运行的性能","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第二章","题目类型":"多选题","题干":"关于构造函数，下列说法正确的有（）","分值":2,"题目难度":"中","题目维度":"概念理解","答案":"ABC","A":"每个类都会默认的无参构造函数","B":"构造函数也可以重载","C":"构造函数是在使用new关键字创建对象时系统自动调用的","D":"在类中添加了一个有参的构造函数后，依然还可以使用无参的构造函数创建对象","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第一章","题目类型":"多选题","题干":"关于类与对象的关系，下列说法正确的有（）","分值":2,"题目难度":"易","题目维度":"概念理解","答案":"ABCD","A":"类是抽象的","B":"对象是具体的","C":"对象是类的实例","D":"类是对象的抽象","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第六章","题目类型":"单选题","题干":"关于以下C#代码的说法正确的是（）\r\npublic abstract class Animal\r\n    {\r\n        public abstract void Eat();\r\n    }\r\n    public class Tiger : Animal\r\n    {\r\n        public override void Eat()\r\n        {\r\n            Console.WriteLine(\"老虎吃动物\");\r\n        }\r\n    }\r\nclass Program: Tiger\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            Tiger tiger = new Tiger();\r\n            tiger.Eat();\r\n        }\r\n    }","分值":2,"题目难度":"难","题目维度":"结果判断","答案":"B","A":"代码正确,但没有输出","B":"代码正确,并且输出为\"老虎吃动物\";","C":"代码错误,因为Program类没有实现抽象基类Animal中的抽象方法","D":"代码错误,因为抽象基类Animal的Eat方法没有实现","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第三章","题目类型":"单选题","题干":"观察下列代码，给出对应的结果（）：        ArrayList list = new ArrayList() { };\r\n        Customer teng = new Customer(\" 马腾 \", 32, \" 汕头市 \");\r\n        Customer yun = new Customer(\" 马云 \", 33, \" 汕头市 \");             list.Add(teng);\r\nlist.Add(yun);                     Console.WriteLine((list[2] as Customer).Name);","分值":2,"题目难度":"难","题目维度":"结果判断","答案":"C","A":"程序编译不通过，不能运行","B":"马云","C":"程序运行报错","D":"空字符串","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第三章","题目类型":"单选题","题干":"观察下列代码，判断最后输出的结果：        Customer jun = new Customer(\" 李军 \",32,\" 广州 \"); \r\n        Customer yun = new Customer(\" 王云 \", 28, \" 杭州 \"); \r\n        Customer si = new Customer(\" 雷斯 \", 43, \" 美国 \"); \r\n        ArrayList list = new ArrayList(2);\r\n        list.Add(jun);\r\n        list.Add(yun);\r\n        list.Add(si);\r\n        Customer cust = list[1] as Customer;\r\n        Console.WriteLine(\"2 号客户：{0}\", cust.Name);","分值":2,"题目难度":"中","题目维度":"结果判断","答案":"C","A":"程序出错","B":"2号客户：李军","C":"2号客户：王云","D":"2号客户：雷斯","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第三章","题目类型":"单选题","题干":"观察下列代码，找出错误的行，并修改正确的选项是（）               ArrayList list = new ArrayList() { };\r\n        Customer teng = new Customer(\" 马腾 \", 32, \" 汕头市 \");\r\n        Customer yun = new Customer(\" 王云 \", 28, \" 杭州市 \");\r\n        Customer si= new Customer(\" 李军 \", 25, \" 仙桃市 \");\r\n        list.Add(teng);\r\n        list.Add(yun);\r\n        list.Add(si);\r\n        Console.WriteLine(\" 排队等待的客户有：\");\r\n        for (int i = 0; i < list.Length; i++)\r\n        {-----(1)\r\n\tConsole.WriteLine(\"{0} 号：{1}\", i+1, (list[i] as Customer).Name);\r\n        }","分值":2,"题目难度":"难","题目维度":"代码纠错","答案":"B","A":"没有错","B":"（1）List.Length改成List.Count","C":"（1）List.Length改成List.Count()","D":"（1）List.Length改成List.Length()","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第三章节","题目类型":"单选题","题干":"观察下列代码得出,选出正确的结果（）        ArrayList list = new ArrayList(2);\r\nlist.Add(jun);\r\nlist.Add(yun);\r\nlist.Add(si);\r\nlist.RemoveAt(0);","分值":2,"题目难度":"中","题目维度":"结果判断","答案":"A","A":"集合里还有2个对象","B":"程序出错","C":"集合里没有对象了","D":"集合里还有1个对象","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第三章","题目类型":"单选题","题干":"观察下列代码给出最后的结果：                Customer jun = new Customer(\" 李军 \",32,\" 广州 \"); // 创建客户 1\r\n        Customer yun = new Customer(\" 王云 \", 28, \" 杭州 \"); // 创建客户 2\r\n        Customer si = new Customer(\" 雷斯 \", 43, \" 美国 \"); // 创建客户 3\r\n        ArrayList list = new ArrayList(2); list.Add(jun);\r\n        Console.WriteLine(\" 集合可存储元素数：{0}\", list.Capacity);\r\n        Console.WriteLine(\" 集合实际元素数：{0}\", list.Count);","分值":2,"题目难度":"中","题目维度":"结果判断","答案":"A","A":"集合可存储元素数：2集合实际元素数：1","B":"集合可存储元素数：1集合实际元素数：1","C":"集合可存储元素数：2集合实际元素数：2","D":"集合可存储元素数：1集合实际元素数：2","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第三章","题目类型":"单选题","题干":"观察下列代码给出最后的结果：        ArrayList list = new ArrayList(2); \r\n        Console.WriteLine(\" 集合可存储元素数：{0}\", list.Capacity);\r\n        Console.WriteLine(\" 集合实际元素数：{0}\", list.Count);","分值":2,"题目难度":"中","题目维度":"结果判断","答案":"C","A":"集合可存储元素数：0集合实际元素数：0","B":"集合可存储元素数：0集合实际元素数：2","C":"集合可存储元素数：2集合实际元素数：0","D":"集合可存储元素数：0集合实际元素数：1","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第三章","题目类型":"单选题","题干":"观察下列代码给出最后的结果：        Customer jun = new Customer(\" 李军 \",32,\" 广州 \"); // 创建客户 1\r\n        Customer yun = new Customer(\" 王云 \", 28, \" 杭州 \"); // 创建客户 2\r\n        Customer si = new Customer(\" 雷斯 \", 43, \" 美国 \"); // 创建客户 3\r\n        ArrayList list = new ArrayList(2); \r\n          list.Add(jun);\r\n           list.Add(yun);\r\n        list.Add(si);\r\n        Console.WriteLine(\" 集合可存储元素数：{0}\", list.Capacity);\r\n        Console.WriteLine(\" 集合实际元素数：{0}\", list.Count);\r\n}","分值":2,"题目难度":"难","题目维度":"结果判断","答案":"D","A":"集合可存储元素数：2集合实际元素数：2","B":"集合可存储元素数：2集合实际元素数：1","C":"集合可存储元素数：3集合实际元素数：3","D":"集合可存储元素数：4集合实际元素数：3","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第六章","题目类型":"单选题","题干":"含有一个或多个抽象方法的类称为（）","分值":2,"题目难度":"易","题目维度":"概念理解","答案":"A","A":"抽象类","B":"具体类","C":"虚基类","D":"派生类","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第一章","题目类型":"多选题","题干":"类的成员可以包含（）","分值":2,"题目难度":"易","题目维度":"概念理解","答案":"ABC","A":"字段","B":"属性","C":"方法","D":"条件","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第一章","题目类型":"单选题","题干":"类的定义必须使用（）关键字。","分值":2,"题目难度":"易","题目维度":"概念理解","答案":"B","A":"public","B":"class","C":"static","D":"namespace","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第一章","题目类型":"单选题","题干":"类的特征使用（）来描述。","分值":2,"题目难度":"易","题目维度":"概念理解","答案":"B","A":"条件","B":"属性","C":"方法","D":"事件","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第一章","题目类型":"单选题","题干":"类的行为使用（ ）来描述。","分值":2,"题目难度":"易","题目维度":"概念理解","答案":"C","A":"字段","B":"属性","C":"方法","D":"事件","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第一章","题目类型":"多选题","题干":"类是具有共同（）和（）的一类事物的统称。","分值":2,"题目难度":"易","题目维度":"概念理解","答案":"AC","A":"特征","B":"抽象","C":"行为","D":"实例","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第五章","题目类型":"单选题","题干":"类最多只能有一个父类这表现了类的（）","分值":2,"题目难度":"易","题目维度":"概念理解","答案":"C","A":"封装性","B":"传递性","C":"单根性","D":"规律性","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第六章","题目类型":"单选题","题干":"面向对象程序设计中，把对象的属性和行为组织在同一个模块内的机制叫做（）","分值":2,"题目难度":"易","题目维度":"概念理解","答案":"C","A":"抽象","B":"继承","C":"封装","D":"多态","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第一章","题目类型":"多选题","题干":"面向对象是一种对现实世界理解和抽象的方法，其优点有（）","分值":2,"题目难度":"中","题目维度":"概念理解","答案":"ABCD","A":"易维护","B":"可重用","C":"易扩展","D":"灵活性好","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第一章","题目类型":"单选题","题干":"面向对象中，实例化的对象可以通过（）的方式调用类中方法。","分值":2,"题目难度":"易","题目维度":"概念理解","答案":"B","A":"类名.方法()","B":"对象.方法()","C":"类名.字段","D":"对象.字段","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第一章","题目类型":"单选题","题干":"面向对象中，实例化后的对象可以通过（）的方式修改或访问对象的属性值。","分值":2,"题目难度":"易","题目维度":"概念理解","答案":"A","A":"对象.属性","B":"对象.方法()","C":"类名.字段","D":"类名.方法()","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第一章","题目类型":"单选题","题干":"面向对象中，以下可以理解为 对象的有（）","分值":2,"题目难度":"易","题目维度":"概念理解","答案":"D","A":"动物","B":"鲜花","C":"学校","D":"NBA中的姚明","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第一章","题目类型":"单选题","题干":"面向对象中，以下可以理解为 类的是（）","分值":2,"题目难度":"中","题目维度":"概念理解","答案":"C","A":"车牌号为云A 86688的96路公共汽车","B":"北京故宫","C":"同学","D":"小红家名叫“旺财”的狗狗","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第三章","题目类型":"单选题","题干":"能将元素添加到 ArrayList 结尾处的方法是（）","分值":2,"题目难度":"易","题目维度":"概念理解","答案":"A","A":"Add","B":"Remove","C":"Insert","D":"InsertAfter","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第三章","题目类型":"多选题","题干":"能移除ArrayList 里的元素的方法有哪些（）","分值":2,"题目难度":"易","题目维度":"概念理解","答案":"AD","A":"Remove","B":"Reverse","C":"Delete","D":"RemoveAt","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第九章","题目类型":"单选题","题干":"实现文件的读写操作，需要引入的命名空间是（）","分值":2,"题目难度":"易","题目维度":"概念理解","答案":"B","A":"using System","B":"using System.IO","C":"using System.file","D":"using System.data","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第六章","题目类型":"单选题","题干":"使用()关键字修饰的类不允许被继承（）","分值":2,"题目难度":"易","题目维度":"概念理解","答案":"A","A":"sealed","B":"override","C":"delegate","D":"private","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第二章","题目类型":"单选题","题干":"属性与字段的对应关系是（）","分值":2,"题目难度":"易","题目维度":"概念理解","答案":"B","A":"多个字段对应一个属性","B":"1个字段对应一个属性","C":"多个属性对应一个字段","D":"以上都不对","E":"null","日期":"NaN-NaN-NaN"},{"章节":"综合","题目类型":"单选题","题干":"通过类的（）特性，可以重复使用已有代码和数据。","分值":2,"题目难度":"中","题目维度":"概念理解","答案":"A","A":"继承","B":"封装","C":"抽象","D":"多态","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第七章","题目类型":"单选题","题干":"下列代码报错的原因是(  )\r\n  public interface IAnimal \r\n    {\r\n\t    //Eat()方法报错\r\n        public void Eat();\r\n    }\r\n","分值":2,"题目难度":"易","题目维度":"代码纠错","答案":"B","A":"Eat()方法没有添加方法体，导致报错。","B":"Eat()方法作为IAnimal接口的成员方法，不允许添加任何访问修饰符，加了Public修饰，导致报错。","C":"IAnimal作为接口，前面加了Public访问修饰符修饰，导致报错。","D":"Eat()方法命名不规范，导致报错。","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第二章","题目类型":"单选题","题干":"下列代码描述正确的是：（） \r\nclass UserInfo\r\n    {\r\n        private string userNo;\r\n        private string userPwd;\r\n        public string UserNo\r\n        {\r\n            get;\r\n            set;\r\n        }\r\n        public string UserPwd\r\n        {\r\n            get;\r\n            set;\r\n        }\r\n\r\n        public UserInfo()\r\n        {\r\n            this.UserNo = \"zhangsan\";\r\n            this.userPwd = \"123\";\r\n        }\r\n    }\r\n static void Main(string[] args)\r\n        {\r\n            UserInfo us = new UserInfo();\r\n        }","分值":2,"题目难度":"难","题目维度":"概念理解","答案":"B","A":"us.UserNo的值为null","B":"us.UserPwd的值为\"123\"","C":"us.UserNo的值为\"\"","D":"us.UserPwd的值为0","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第七章","题目类型":"单选题","题干":"下列代码需要输出”小狗喜欢吃骨头”，“小猫蹲着睡”，则需要在Main()方法中添加的代码是（）\r\n class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n           //在这一个位置写入代码\r\n        }\r\n    }\r\n\r\n    abstract class Animal\r\n    {\r\n        public abstract void Eat();\r\n    }\r\n    \r\n    class Dog : Animal\r\n    {\r\n        public override void Eat()\r\n        {\r\n            Console.WriteLine(\"小狗喜欢吃骨头。\");\r\n        }\r\n\r\n        public  void Sleep()\r\n        {\r\n            Console.WriteLine(\"小狗趴着睡。\");\r\n        }\r\n    }\r\n\r\n    class Cat : Animal\r\n    {\r\n        public override void Eat()\r\n        {\r\n            Console.WriteLine(\"小猫喜欢吃鱼。\");\r\n        }\r\n\r\n        public void Sleep()\r\n        {\r\n            Console.WriteLine(\"小猫蹲着睡。\");\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n","分值":2,"题目难度":"难","题目维度":"结果判断","答案":"C","A":"Animal dog = new Dog();\r\n    dog.Eat();\r\n    Animal cat = new Cat();\r\ncat.Eat();","B":"Animal dog = new Dog();\r\n     dog.Eat();\r\n     Animal cat = new Cat();\r\n     cat.Sleep();","C":" Animal dog = new Dog();\r\n    dog.Eat();\r\n    Cat cat = new Cat();\r\ncat.Sleep();","D":"Dog dog = new Dog();\r\n    dog.Sleep();\r\n    Cat cat = new Cat();\r\ncat.Eat();","E":"null","日期":"NaN-NaN-NaN"},{"章节":"综合","题目类型":"单选题","题干":"下列代码运行的结果是（）\r\nclass One { public virtual void Show() { \r\n            Console.Write(\"One\"); \r\n }   }\r\n    class Two : One{public override void Show(){\r\n            Console.Write(\"Two\");\r\n      }}\r\nclass Program {static void Main(string[] args) {\r\n            One obj = new Two();\r\n            obj.Show();\r\n   } }","分值":2,"题目难度":"易","题目维度":"概念理解","答案":"C","A":"One","B":"One Two","C":"Two","D":"Two  One","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第三章","题目类型":"单选题","题干":"下列对ArrayList的常用方法描述错误的是（）","分值":2,"题目难度":"易","题目维度":"概念理解","答案":"C","A":"Clear()清除所有元素","B":"Insert()将元素添加到指定位置","C":"Add()将元素添加到 ArrayList 开头处    ","D":"Reverse()将 ArrayList 中的元素顺序反转","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第三章","题目类型":"单选题","题干":"下列对ArrayList的常用方法描述正确的是（）","分值":2,"题目难度":"易","题目维度":"概念理解","答案":"A","A":"Sort()对 ArrayList 中的元素排序","B":"Reverse()将 ArrayList 中的元素排序","C":"TrimToSize()将 ArrayList 容量数设置为初始值","D":"Remove()  清除所有元素","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第四章","题目类型":"单选题","题干":"下列关于 List<T> 的常用方法说法正确的是（）","分值":2,"题目难度":"易","题目维度":"概念理解","答案":"C","A":"Sort()将 List<T> 中的元素顺序反转","B":"Reverse()对 List<T> 中的元素排序","C":"Remove()移除 List<T> 中指定的元素","D":"RemoveAt()移除 List<T> 中所有元素","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第七章","题目类型":"单选题","题干":"下列关于抽象方法说法错误的是（）","分值":2,"题目难度":"易","题目维度":"概念理解","答案":"C","A":"使用abstract关键字修饰。","B":"只能够定义在抽象类中。","C":"可以写方法体在抽象方法中。","D":"子类必须重写抽象方法。","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第七章","题目类型":"单选题","题干":"下列关于抽象类和接口的说法错误的是（）","分值":2,"题目难度":"易","题目维度":"特性分析","答案":"A","A":"抽象类是一种特殊的类，既然是类，所以它就可以实例化。","B":"抽象类侧重于有继承关系的一组对象。","C":"接口侧重于定义一组行为规则。","D":"接口用于多个不同种类的对象具有相同的行为或功能的场合。","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第五章","题目类型":"单选题","题干":"下列关于对虚方法的描述正确的有（）","分值":2,"题目难度":"中","题目维度":"概念理解","答案":"B","A":"不可以在派生类中以override覆盖此方法","B":"在派生类中的虚方法若在子类不覆盖也可由对象调用","C":"虚方法可以有方法的实现，也可以不实现","D":"以上说法都正确","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第四章","题目类型":"单选题","题干":"下列关于泛型集合创建正确的是（）","分值":2,"题目难度":"易","题目维度":"概念理解","答案":"A","A":"        List<Customer> list = new List<Customer>();","B":"        List<Customer>() list = new List<Customer>();","C":"        List<Customer> () list = new List<Customer>(5);","D":"        List<Customer> (5) list = new List<Customer>();","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第四章","题目类型":"多选题","题干":"下列关于泛型描述正确的是（）","分值":2,"题目难度":"易","题目维度":"特性分析","答案":"ABCD","A":"增加了极大的效率和灵活性","B":"可重用性","C":"高效性","D":"类型安全性","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第二章","题目类型":"单选题","题干":"下列关于构造函数的说法，错误的是（）","分值":2,"题目难度":"中","题目维度":"概念理解","答案":"D","A":"构造函数的函数名和类名相同","B":"构造函数可以重载","C":"构造函数可以带有参数","D":"可以指定构造函数的返回值","E":"null","日期":"NaN-NaN-NaN"},{"章节":"综合","题目类型":"单选题","题干":"下列关于集合的创建，正确的是（）","分值":2,"题目难度":"易","题目维度":"概念理解","答案":"B","A":"List<int>  list = new List();","B":"List<int>  list = new List<int>();","C":"ArrayList<int> list = new ArrayList();","D":"ArrayList<int> list = new ArrayList<int>();","E":"null","日期":"NaN-NaN-NaN"},{"章节":"综合","题目类型":"单选题","题干":"下列关于集合的说法，正确的是（）","分值":2,"题目难度":"易","题目维度":"概念理解","答案":"A","A":"Count属性可以获取集合中实际存储的元素个数","B":"Capacity属性可以获取集合中实际存储的元素个数","C":"Hashtable存储的元素是按添加的先后顺序排列的","D":"ArrayList可以通过键来访问对应值","E":"null","日期":"NaN-NaN-NaN"},{"章节":"综合","题目类型":"单选题","题干":"下列关于继承和接口的说法，正确的是（）","分值":2,"题目难度":"中","题目维度":"概念理解","答案":"B","A":"C#不允许实现多个接口，但可以有多个父类","B":"C#允许实现多个接口，但不能有多个父类","C":"C#不允许实现多个接口，也不允许有多个父类","D":"C#允许实现多个接口，也允许有多个父类","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第七章","题目类型":"单选题","题干":"下列关于接口的说法正确的是（）","分值":2,"题目难度":"易","题目维度":"特性分析","答案":"D","A":"使用关键字abstract关键字。","B":"可以包含字段和已实现成员。","C":"子类通过override实现抽象方法。","D":"子类直接实现所有成员。","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第七章","题目类型":"多选题","题干":"下列关于接口定义时需要注意的事项说法错误的是( )","分值":2,"题目难度":"中","题目维度":"特性分析","答案":"CD","A":"接口名一般使用大写的字母”I”开头，表明它是接口类型。","B":"接口可以包含方法、属性、事件和索引器，但是不能够包含字段。","C":"接口中定义的成员可以有具体的实现，方便子类使用。","D":"接口中的成员方法允许添加访问修饰符。","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第七章","题目类型":"多选题","题干":"下列关于接口和抽象类的说法错误的是（）","分值":2,"题目难度":"易","题目维度":"特性分析","答案":"CD","A":"抽象类使用abstract关键字定义。","B":"接口使用interface关键字定义。","C":"抽象类不可以包含字段和已实现成员。","D":"接口可以有字段，也可以包含所有的成员。 ","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第二章","题目类型":"单选题","题干":"下列关于属性中的访问器的说法，正确的是（）","分值":2,"题目难度":"易","题目维度":"概念理解","答案":"B","A":"属性中可以不包含任何访问器","B":"属性中可以只有get访问器，也可以只有set访问器","C":"属性中只能有get访问器或set访问器，不能同时包含","D":"属性中必须同时包含get访问器和set访问器","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第六章","题目类型":"多选题","题干":"下列关于虚方法的说法，正确的有（）","分值":2,"题目难度":"中","题目维度":"概念理解","答案":"ABC","A":"使用virtual关键字修饰虚方法","B":"父类中的虚方法可以被其子类重写","C":"虚方法必须有自己的方法体","D":"虚方法一般定义在sealed修饰的类中","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第六章","题目类型":"单选题","题干":"下列关于虚函数的描述中，错误的是（）","分值":2,"题目难度":"中","题目维度":"概念理解","答案":"C","A":"虚函数是一个成员函数","B":"虚函数具有继承性","C":"静态成员函数可以说明为虚函数","D":"在类的继承的层次结构中，虚函数可被用来重写","E":"null","日期":"NaN-NaN-NaN"},{"章节":"综合","题目类型":"单选题","题干":"下列描述错误的是（）","分值":2,"题目难度":"易","题目维度":"概念理解","答案":"D","A":"类不可以多继承而接口可以","B":"抽象类自身可以定义成员而接口不可以","C":"抽象类和接口都不能被实例化","D":"一个类可以有多个基类","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第七章","题目类型":"单选题","题干":"下列描述的对象中，能够作为抽象类的是（）","分值":2,"题目难度":"易","题目维度":"概念理解","答案":"B","A":"小狗","B":"动物","C":"小猪","D":"小猫","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第二章","题目类型":"单选题","题干":"下列描述中，()不是方法重载。","分值":2,"题目难度":"中","题目维度":"概念理解","答案":"B","A":"void Show(){}和void Show(string name){}","B":"string Show(string name){}和void Show(string name){}","C":"string Show(int age){}和void Show(string name){}","D":"void Show(int age){}和void Show(int age,string name){}","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第六章","题目类型":"单选题","题干":"下列描述中，错误的是（）","分值":2,"题目难度":"中","题目维度":"概念理解","答案":"D","A":"基类的protected成员在public派生类中仍然是protected成员","B":"基类的private成员在public派生类中是不可访问的","C":"基类public成员在private派生类中是private成员","D":"基类public成员在protected派生类中仍是public成员","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第七章","题目类型":"单选题","题干":"下列描述中，正确定义抽象类语法是（）","分值":2,"题目难度":"易","题目维度":"概念理解","答案":"B","A":"访问修饰符 enum 名称{内容…} ","B":"abstract class 名称{内容…}","C":"[访问修饰符] interface 名称{内容…}","D":"访问修饰符 struct 名称{内容…}","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第三章","题目类型":"单选题","题干":"下列哪个属于 获取ArrayList 实际包含的元素个数的属性（）","分值":2,"题目难度":"易","题目维度":"概念理解","答案":"B","A":"Length","B":"Count","C":"Size","D":"Capacity ","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第三章","题目类型":"单选题","题干":"下列那个方法可以去掉HashTable里的所有元素（）","分值":2,"题目难度":"易","题目维度":"结果判断","答案":"D","A":"Remove","B":"ContainsKey","C":"Delete","D":"Clear","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第四章","题目类型":"单选题","题干":"下列说法关于Dictionary<K,V> 的常用方法说法错误的是（）","分值":2,"题目难度":"易","题目维度":"概念理解","答案":"D","A":"Remove() 从 Dictionary<K,V>中移除带有指定键的元素","B":"Add()将带有指定键和值的元素添加到 Dictionary<K,V>中","C":"ContainsKey()   确定 Dictionary<K,V>中是否包含指定键","D":"AddAt()将带有指定键和值的元素添加到 Dictionary<K,V>中","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第四章","题目类型":"单选题","题干":"下列说法关于Dictionary<K,V> 的常用方法说法正确的是（）","分值":2,"题目难度":"易","题目维度":"概念理解","答案":"C","A":"Remove() 从 Dictionary<K,V>中移除全部的元素","B":"Delete()移除 Dictionary<K,V>中所有元素","C":"ContainsValue() 确定 Dictionary<K,V>中是否包含指定值","D":"AddAt(object key, object value)将带有指定键和值的元素添加到 Dictionary<K,V>中","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第三章","题目类型":"多选题","题干":"下列说法关于Hashtable 正确的是（）","分值":2,"题目难度":"中","题目维度":"特性分析","答案":"ABD","A":"可用于处理 key/value( 键 / 值 ) 对","B":"key 通常用于快速查找","C":"value 用于存储对应于 key 的值,key不区分大小写","D":"Hashtable 中键值均为 object 类型","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第六章","题目类型":"单选题","题干":"下列说法正确的是（）","分值":2,"题目难度":"易","题目维度":"概念理解","答案":"C","A":"虚方法不可以在派生类中重写","B":"sealed前可以使用abstract修饰","C":"声明密封方法时，sealed修饰符总是和override修饰符同时使用","D":"以上说法全部正确","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第六章","题目类型":"多选题","题干":"下列说法正确的有（）","分值":2,"题目难度":"易","题目维度":"概念理解","答案":"ABCD","A":"密封类不能作为基类被别的元素继承","B":"密封类可以继承非密封类或接口","C":"密封类中不能声明受保护成员","D":"密封类中不能声明虚方法","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第一章","题目类型":"单选题","题干":"现有Customer类，实例化类的写法正确的是（）","分值":2,"题目难度":"易","题目维度":"结果判断","答案":"B","A":"Customer() cm = new Customer();","B":"Customer cm = new Customer();","C":"Customer  = new Customer();","D":"Customer cm =Customer;","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第二章","题目类型":"单选题","题干":"现有Student类，构造函数对其属性Name进行赋值操作，（）处填充正确代码。\r\nclass Student\r\n        {\r\n            private string name;     \r\n            public String Name\r\n            {\r\n                get;\r\n                set;\r\n            }\r\n            public Student(string name)\r\n            {\r\n                （）\r\n            }\r\n        }","分值":2,"题目难度":"中","题目维度":"概念理解","答案":"C","A":"this.name=Name","B":"Name == name","C":"this.Name = name;","D":"name=Name","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第一章","题目类型":"单选题","题干":"现有华为Mate30手机信息：颜色-黑色，价格-5000元，功能-打电话；要求定义一个手机类，可以作为类中方法的是：","分值":2,"题目难度":"易","题目维度":"概念理解","答案":"C","A":"手机颜色","B":"手机价格","C":"手机功能","D":"都不可以","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第九章","题目类型":"单选题","题干":"序列化对象需要引入的命名空间是（）","分值":2,"题目难度":"中","题目维度":"概念理解","答案":"C","A":"using System","B":"using System.IO","C":"using System.Runtime.Serialization.Formatters.Binary;","D":"using System.data","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第八章","题目类型":"单选题","题干":"以下（   ）是判断用户是否点击对话框的确认按钮。","分值":2,"题目难度":"易","题目维度":"概念理解","答案":"A","A":"DialogResult.OK","B":"DialogResult.Abort","C":"DialogResult.Cancel","D":"DialogResult.None","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第九章","题目类型":"单选题","题干":"以下FileMode 的哪一项枚举值可以用来打开文件，如果文件不存在，则引发异常（）","分值":2,"题目难度":"易","题目维度":"概念理解","答案":"D","A":"CreateNew","B":"Create","C":"OpenOrCreate","D":"Open","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第二章","题目类型":"单选题","题干":"以下代码，输出结果为：（）\r\nclass Hero\r\n    {\r\n        private string name;\r\n        private int attack;\r\n        public string Name\r\n        {\r\n            get;\r\n            set;\r\n        }\r\n        public int Attack\r\n        {\r\n            get;\r\n            set;\r\n        }\r\n\r\n        public Hero(string name)\r\n        {\r\n            this.Name = name;\r\n            this.Attack = 180;\r\n        }\r\n    }\r\n\r\n        static void Main(string[] args)\r\n        {\r\n            Hero hero = new Hero(\"亚瑟\");\r\n            Console.WriteLine(\"姓名：{0},攻击：{1}\", hero.Name, hero.Attack);\r\n        }","分值":2,"题目难度":"中","题目维度":"概念理解","答案":"D","A":"姓名：\"\",攻击：0","B":"姓名：\"亚瑟\",攻击：0","C":"姓名：\"\",攻击：180","D":"姓名：亚瑟,攻击：180","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第一章","题目类型":"单选题","题干":"以下代码输出结果是：（）\r\nstatic void Main(string[] args)\r\n        {\r\nCommodity cake = new Commodity();\r\n            cake.name = \" 蛋糕 \";\r\n            cake.price = 18;\r\n            cake.productionDate = DateTime.Parse(\"2018-9-18\");\r\n            cake.factory = \" 武汉美食食品 \";\r\n            cake.expire = 90;\r\n            Console.WriteLine(cake.name);\r\n\r\n        }\r\n","分值":2,"题目难度":"易","题目维度":"结果判断","答案":"C","A":"cake.name = \" 蛋糕 \";","B":" 18","C":"蛋糕","D":"没有","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第二章","题目类型":"单选题","题干":"以下代码运行结果（）\r\npublic class Customer\r\n    {\r\n        public string name;\r\n        public int age;\r\n        public int Age\r\n        {\r\n            set { age = value; }\r\n        }\r\n    }\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            Customer liu = new Customer();\r\n            liu.Age = 300;\r\n            Console.WriteLine(liu.Age);\r\n        }\r\n    }","分值":2,"题目难度":"难","题目维度":"概念理解","答案":"D","A":"300","B":"100","C":"0","D":"代码出现错误","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第二章","题目类型":"单选题","题干":"以下代码运行结果依次为（）\r\nstatic void Show()\r\n        {\r\n            Console.WriteLine(\"大家好！\");\r\n        }\r\n\r\n        static void Show(string name)\r\n        {\r\n            Console.WriteLine(\"同学好！\");\r\n        }\r\n\r\n        static void Show(string name,int age)\r\n        {\r\n            Console.WriteLine(\"你们好！\");\r\n        }\r\n\r\n        static void Main(string[] args)\r\n        {\r\n            Show(\"刘备\", 20);\r\n            Show();\r\n            Show(\"张飞\");\r\n        }","分值":2,"题目难度":"易","题目维度":"概念理解","答案":"A","A":"你们好！大家好！同学好！","B":"同学好！你们好！大家好！","C":"你们好！同学好！大家好！","D":"大家好！你们好！同学好！","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第九章","题目类型":"多选题","题干":"以下对序列化说法正确的是（）","分值":2,"题目难度":"中","题目维度":"概念理解","答案":"BC","A":"将文件中的数据转化为对象","B":"指将对象实例的状态存储到存储媒体中的过程","C":"需要引入命名空间","D":"不能保存文字","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第六章","题目类型":"单选题","题干":"以下对于C#程序中密封类的关键字正确的是（）","分值":2,"题目难度":"易","题目维度":"概念理解","答案":"D","A":"private","B":"static","C":"abstract","D":"sealed","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第九章","题目类型":"多选题","题干":"以下对于序列化说法错误的是（）","分值":2,"题目难度":"中","题目维度":"概念理解","答案":"AD","A":"不可以序列化图片","B":"可以序列化图片","C":"可以序列化对象","D":"不可以序列化对象","E":"null","日期":"NaN-NaN-NaN"},{"章节":"综合","题目类型":"多选题","题干":"以下关于C#编程的说法，正确的是（）","分值":2,"题目难度":"难","题目维度":"概念理解","答案":"AC","A":"使用sealed 关键字修饰的类，可避免类被继承","B":"在C#编程中，访问修饰符控制程序对类访问，如果不写访问修饰符，类的默认访问类型public","C":"在C#中，base关键字用于子类调用父类的构造方法","D":"在C#中，this关键字用于子类调用父类的构造函数","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第六章","题目类型":"单选题","题干":"以下关于C#代码的说法正确的是（）？Public abstract Animal  \r\n{ \r\n Public abstract void Eat();  \r\n Public void Sleep() { }  \r\n}","分值":2,"题目难度":"难","题目维度":"代码纠错","答案":"A","A":"该段代码正确","B":"代码错误，因为类中存在非抽象方法","C":"代码错误，因为类中的方法没有实现","D":"通过代码“Animal an = new Animal();”可以创建一个Animal对象","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第五章","题目类型":"多选题","题干":"以下那两项属于继承的两大特性（）","分值":2,"题目难度":"易","题目维度":"概念理解","答案":"BC","A":"持久性","B":"单根性","C":"传递性","D":"安全性","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第八章","题目类型":"单选题","题干":"以下属性可以设置OpenFileDialog文件筛选器索引的是（）","分值":2,"题目难度":"易","题目维度":"概念理解","答案":"D","A":"Filter","B":"CheckFileExists","C":"Title","D":"FilterIndex ","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第九章","题目类型":"多选题","题干":"以下属于读取文件的流程的是（）","分值":2,"题目难度":"易","题目维度":"概念理解","答案":"ABD","A":"创建文件流","B":"创建读取器","C":"关闭写入器","D":"关闭文件流","E":"null","日期":"NaN-NaN-NaN"},{"章节":"综合","题目类型":"多选题","题干":"以下属于面向对象特性的是（）","分值":2,"题目难度":"易","题目维度":"概念理解","答案":"ABD","A":"继承","B":"多态","C":"抽象","D":"封装","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第八章","题目类型":"多选题","题干":"以下属于文件对话框的是（）","分值":2,"题目难度":"易","题目维度":"概念理解","答案":"ACD","A":"OpenFileDialog","B":"OpenDialog","C":"SaveFileDialog","D":"FolderBroswerDialog","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第五章","题目类型":"单选题","题干":"以下说法错误的是（）","分值":2,"题目难度":"中","题目维度":"概念理解","答案":"C","A":"继承是指子类可以沿用父类的某些行为和特征","B":"通过继承，子类将自动拥有父类可被继承的字段、属性、方法等","C":"一个类可以有多个父类","D":"一个类可以有多个子类","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第八章","题目类型":"单选题","题干":"以下文件操作方法，（   ）可以用来删除文件。","分值":2,"题目难度":"中","题目维度":"概念理解","答案":"B","A":"Move()","B":"Delete()","C":"Copy()","D":"Exists()","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第八章","题目类型":"单选题","题干":"以下文件对话框，可以用来打开文件的是（）","分值":2,"题目难度":"易","题目维度":"概念理解","答案":"A","A":"OpenFileDialog","B":"SaveFileDialog","C":"FolderBroswerDialog","D":"OpenDialog","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第八章","题目类型":"单选题","题干":"以下文件夹操作方法，（  ）可以用来删除非空文件夹。","分值":2,"题目难度":"中","题目维度":"概念理解","答案":"A","A":"Delete(string, bool) ","B":"Delete(string) ","C":"Move()","D":"CreateDirectory() ","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第五章","题目类型":"单选题","题干":"在A类中定义protected的属性Name，下列说法正确的（）","分值":2,"题目难度":"中","题目维度":"概念理解","答案":"A","A":"定义B类继承A类，则B类也具有Name属性","B":"在B类中创建A类对象，可以通过“对象.成员”访问Name","C":"无论B类是否继承A类，Name只能在A类中使用","D":"Name可以在任何地方使用","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第二章","题目类型":"单选题","题干":"在c#中，可以通过( )实现方法重载。","分值":2,"题目难度":"中","题目维度":"概念理解","答案":"A","A":"方法名相同，不同的参数个数","B":"方法名相同，不同的参数名称","C":"不同的方法名称，相同的参数个数","D":"相同的方法名称和参数个数，不同的返回值","E":"null","日期":"NaN-NaN-NaN"},{"章节":"综合","题目类型":"多选题","题干":"在C #编程中，下列说法正确的有（）","分值":2,"题目难度":"中","题目维度":"概念理解","答案":"CD","A":"在C#中，一个类只能被一个子类继承","B":"在C#中，接口中的方法可以具体实现","C":"在C#中，可以实现多个接口，但只能继承一个父类","D":"在C#编程中，如果不写访问修饰符，类成员的默认访问类型是private","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第五章","题目类型":"单选题","题干":"在C#程序中，方法的默认访问修饰符是以下哪一项（）","分值":2,"题目难度":"易","题目维度":"概念理解","答案":"B","A":"public","B":"private","C":"protected","D":"internal","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第六章","题目类型":"单选题","题干":"在C#程序中,关于抽象类描述错误的是（）","分值":2,"题目难度":"易","题目维度":"概念理解","答案":"A","A":"抽象类不可以被继承","B":"抽象类中可以定义字段、属性","C":"抽象类中可以定义虚方法","D":"抽象类可以定义抽象方法","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第六章","题目类型":"多选题","题干":"在C#程序中，关于密封方法描述正确的是（）","分值":2,"题目难度":"易","题目维度":"概念理解","答案":"AC","A":"密封方法可以不定义在密封类中","B":"所有的方法都可以进行密封","C":"使用override重写后的方法可以被密封","D":"以上说法都正确","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第五章","题目类型":"单选题","题干":"在C#程序中，类的默认访问修饰符是以下哪一项（）","分值":2,"题目难度":"易","题目维度":"概念理解","答案":"D","A":"public","B":"private","C":"protected","D":"internal","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第六章","题目类型":"单选题","题干":"在C#程序中,实现抽象类的关键字是（）","分值":2,"题目难度":"易","题目维度":"概念理解","答案":"A","A":"abstract","B":"overried","C":"new","D":"sealed","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第六章","题目类型":"单选题","题干":"在C#程序中,实现方法重写时使用的关键字是（）","分值":2,"题目难度":"易","题目维度":"概念理解","答案":"A","A":"override","B":"new","C":"abstract","D":"sealed","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第六章","题目类型":"多选题","题干":"在C#程序中，下列说法正确的是（）","分值":2,"题目难度":"中","题目维度":"概念理解","答案":"AC","A":"new 关键字可以显式隐藏从基类继承的成员","B":"new 关键字不可以显式隐藏从基类继承的成员","C":"子类中藏父类成员时若省略new关键字，程序不会报错,但会发出警告","D":"子类中藏父类成员时若省略new关键字，程序不会报错且不会发出警告","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第五章","题目类型":"单选题","题干":"在C#程序中，以下哪一项不属于访问修饰符（）","分值":2,"题目难度":"易","题目维度":"概念理解","答案":"A","A":"static","B":"public","C":"private","D":"protected","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第六章","题目类型":"单选题","题干":"在C#程序中，以下说法错误的是（）","分值":2,"题目难度":"中","题目维度":"概念理解","答案":"D","A":"不管是重写还是覆盖都不会影响父类自身的功能","B":"重写基方法必须具有与override方法相同的签名","C":"override声明不能更改virtual方法的可访问性，且override方法与virtual方法必须具有相同级别访问修饰符","D":"可以使用new、static、virtual修饰符修改override方法","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第六章","题目类型":"单选题","题干":"在C#程序中，以下说法错误的是（）","分值":2,"题目难度":"中","题目维度":"概念理解","答案":"C","A":"重写属性声明必须指定与继承的属性完全相同的访问修饰符、类型和名称","B":"重写的属性必须是virtual、abstract或override","C":"静态方法可以被重写","D":"抽象方法可以被重写","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第六章","题目类型":"单选题","题干":"在C#程序中，以下说法错误的是（）","分值":2,"题目难度":"中","题目维度":"概念理解","答案":"B","A":"父类中有abstract，那么子类同名方法必定有override","B":"父类中有abstract，子类同名方法不一定定有override","C":"override必定有父子类关系","D":"override重写用于扩展或修改继承的方法、属性、索引器或事件的抽象或虚拟实现","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第六章","题目类型":"单选题","题干":"在C#程序中，子类需隐藏父类同名方法可以使用（）关键字。","分值":2,"题目难度":"易","题目维度":"概念理解","答案":"A","A":"new","B":"as","C":"abstract","D":"override","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第六章","题目类型":"单选题","题干":"在C#程序中关于抽象类的定义，以下描述有误的是（）","分值":2,"题目难度":"中","题目维度":"概念理解","答案":"B","A":"public abstract class A{}","B":"public  class  abstract A{}","C":"abstract public  class A{}","D":"abstract class A{}","E":"null","日期":"NaN-NaN-NaN"},{"章节":"第五章","题目类型":"多选题","题干":"在C#当中B类继承A类，A类使用（）访问修饰符的成员在B类可以使用。","分值":2,"题目难度":"易","题目维度":"概念理解","答案":"ACD","A":"public","B":"private","C":"protected","D":"protected internal","E":"null","日期":"NaN-NaN-NaN"},{"章节":"综合","题目类型":"单选题","题干":"在C#中，关于 override与重载的说法正确的是（）","分值":2,"题目难度":"易","题目维度":"概念理解","答案":"B","A":"override是指在同一类中，存在多个具有相同方法名，而不同参数列表的方法","B":"重载是指在同一类中，存在多个具有相同方法名，而不同参数列表的方法","C":"重载要求父类与子类之间，方法名和参数类型、数量、顺序完全一致","D":"重载是对父类中方法的扩展,子类继承了父类,重载后,子类不但得到了父类的东西，而且还可以有自己的东西","E":"null","日期":"NaN-NaN-NaN"},{"章节":"综合","题目类型":"单选题","题干":"在C#中，关于ArrayList和List的说法正确的是（）","分值":2,"题目难度":"中","题目维度":"概念理解","答案":"C","A":"从ArrayList获取集合中某个元素时，不需要进行类型转换","B":"从List获取集合中某个元素时，需要进行类型转换","C":"从ArrayList获取集合中某个元素时，需要进行类型转换","D":"从ArrayList和List获取集合中某个元素时，都不需要进行类型转换","E":"null","日期":"NaN-NaN-NaN"}]