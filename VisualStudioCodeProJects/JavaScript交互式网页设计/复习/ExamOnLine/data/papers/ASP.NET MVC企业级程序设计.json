[{"contentType":"多选题","content":"关于ASP.NET MVC 目录结构下列说法正确的是（     ）【选三项】","answer":"ABC","a":"App_Data存储本地化的数据库文件或数据文件。","b":"App_Start 包含多个静态配置类，执行初始化任务。","c":"Models放置模型文件。","d":"Global.asax:应用程序配置文件。"},{"contentType":"单选题","content":"在ASP.NET MVC中，以下代码说法错误的是（     ）\nroutes.MapRoute(\n                name: \"Default\",\n                url: \"{controller}/{action}/{id}\",\n                defaults: new { controller = \"Home\", action = \"Index\", id = UrlParameter.Optional }\n            );","answer":"A","a":"访问首页时，完整路径为\"http://域名/Default/Index\"","b":"该配置所在文件路径为：/App_Start/RouteConfig.cs","c":"访问：http://域名/Home/Add时，调用的是Add方法","d":"id在url请求过程中可以省略。"},{"contentType":"多选题","content":"关于ASP.NET MVC 模板页面下列说法正确的是（     ）【选三项】","answer":"BCD","a":"Asp.NET MVC 模板页名称为Site.Master","b":"@RenderBody起到占位符作用，而且只能有一个。","c":"@RenderSection 是块占位符，可以有多个。","d":"母版页所在位置为/Views/Shared目录下，名称为_Layout.cshtml"},{"contentType":"单选题","content":"在ASP.NET MVC的控制器中，存在以下代码：\n    public ActionResult Index(){\n        ViewBag.Name = \"zhangsan\";\n        TempData[\"Age\"] = 20;\n        return View();\n    }\n则以下说法正确的是（     ）","answer":"D","a":"Index.cshtml页面无法获取到姓名Name信息。","b":"Abount.cshtml页面可以获取到姓名Name信息。","c":"Index.cshtml页面无法获取到年龄Age信息。","d":"Abount.cshtml页面可以获取到年龄Age信息。"},{"contentType":"单选题","content":"在ASP.NET MVC中，关于以下代码，说法错误的是（     ）\n[HttpPost]\npublic ActionResult Index(string uname,int uage){\n  return View();\n}","answer":"A","a":"通过点击超链接会访问该Action方法。","b":"该方法必须是Post请求才可以处理。","c":"页面中表单元素的name值需要和参数名称对应。","d":"int?参数表示可以为int类型，也可以为空类型。"},{"contentType":"多选题","content":"在ASP.NET MVC中，默认的模型绑定器获取绑定数据的途径有（     ）【选三项】","answer":"ABC","a":"Request.Form获取表单提交的值","b":"RouteData.Values获取路由的值。","c":"Request.QueryString获取URL的值。","d":"Request.Directory获取上传文件"},{"contentType":"多选题","content":"在ASP.NET MVC中，模型绑定可以获取（     ）基本类型的数据【选三项】","answer":"ABD","a":"int","b":"string","c":"request","d":"float"},{"contentType":"多选题","content":"在ASP.NET MVC中，下列关于Html辅助方法说法正确的是（     ）【选三项】","answer":"ABC","a":"Html辅助方法用于辅助产生Html的系统方法。","b":"HTML辅助方法能够帮助产生HTML标签和内容，提高开发速度避免语法错误。","c":"框架定义的大多数辅助方法都是扩展方法。","d":"辅助方法开发难度较大，不利于代码开发和维护。"},{"contentType":"单选题","content":"在ASP.NET MVC中，对以下代码生成的HTML代码，分析正确的是（     ）\n@Html.ActionLink(\"链接文字\",\"Upload\",new {id=123,page=5})","answer":"C","a":"<a href=\"/Upload\">链接文字</a>","b":"<a href=\"/Home/Upload\">链接文字</a>","c":"<a href=\"/Home/Upload/123?page=5\">链接文字</a>","d":"<a href=\"/Home/Upload?id=123&page=5\">链接文字</a>"},{"contentType":"多选题","content":"以下（     ）场景适合使用Web API【选两项】","answer":"AD","a":"天气预报","b":"聊天室","c":"视频直播","d":"人脸识别系统"},{"contentType":"多选题","content":"WebApi控制器相比于普通控制器的区别有哪些（     ）【选三项】","answer":"ACD","a":"父类不同，继承自ApiController而非Controller","b":"效率不同，WebApi运行效率比Cotroller控制器要快。","c":"调用方式不同，WebApi根据动词调用，而非Action。","d":"返回值不同，并不是视图或辅助对象。"},{"contentType":"单选题","content":"在地址栏输入 http://localhost:端口号/api/sysuser 地址后，默认访问的是HTTP的（     ）动词","answer":"D","a":"Put","b":"Delete","c":"Post","d":"Get"},{"contentType":"单选题","content":"在jQuery中, 如果想要删除一条数据，以下（     ）ajax请求可以完成","answer":"A","a":"$.ajax({\ntype: 'Delete',\n...\n});","b":"$.ajax({\ntype: 'Post',\n...\n});","c":"$.ajax({\ntype: 'Put',\n...\n});","d":"$.ajax({\ntype: 'Get',\n...\n});"},{"contentType":"单选题","content":"以下MVC执行流程正确的是（     ）","answer":"B","a":"浏览器请求->控制器->视图->模型->显示结果","b":"浏览器请求->控制器->模型->视图->显示结果","c":"浏览器请求->模型->控制器->视图->显示结果","d":"浏览器请求->视图->控制器->模型->显示结果"},{"contentType":"单选题","content":"在ASP.NET MVC中，根据以下代码，下列说法正确的是（     ）\npublic class MyFirstController: Controller\n{\n  public ActionResult Index()\n  {\n        return View();\n  }\n}","answer":"C","a":"其默认视图页面为：\n/View/Index.cshtml","b":"其默认视图页面为：\n/Index.cshtml","c":"其默认视图页面为：\n/Views/MyFirst/Index.cshtml","d":"其默认视图页面为：\n/Views/Action/Index.cshtml"},{"contentType":"多选题","content":"在ASP.NET MVC中，下列（     ）对象可以将数据从控制器传递到视图【选三项】","answer":"ABC","a":"ViewData","b":"ViewBag","c":"TempData","d":"Request"},{"contentType":"单选题","content":"ASP.NET MVC所有的HtmlHelper扩展方法所在命名空间为（     ）","answer":"D","a":"System.Web.Html","b":"System.Web.Mvc.Control","c":"System.Web.Mvc.Helper","d":"System.Web.Mvc.Html"},{"contentType":"多选题","content":"在ASP.NET MVC中，Html.ActionLink 下列语法正确的是（     ）【选两项】","answer":"AD","a":"@Html.ActionLink(\"链接文字\",\"ActionName\")","b":"@Html.ActionLink(\"链接文字\",\"ControllerName\")","c":"@Html.ActionLink(\"链接文字\",\"ControllerName\", new { id=123,page=5})","d":"@Html.ActionLink(\"链接文字\",\"ActionName\", new { id=123,page=5})"},{"contentType":"单选题","content":"在ASP.NET MVC中，下列（     ）辅助方法可以输出<input type=\"text\">标签","answer":"B","a":"Html.Text()","b":"Html.TextBox()","c":"Html.TextArea()","d":"Html.Box()"},{"contentType":"多选题","content":"在jQuery中, 以下代码写法的意义在于（     ）\n$(function() {\n      $(\"form\").bind(\"submit\", checkForm);\n});【选两项】","answer":"AC","a":"在自定义函数checkForm中，“return false;”表示如果验证出现错误，就终止表单提交.","b":"在表单提交时进行服务器校验，增强代码的安全性。","c":"在表单成功提交至控制器方法之前，不会占用服务器任何资源。","d":"在自定义函数checkForm中，为了保证表单提交，都必须要return true。"},{"contentType":"单选题","content":"在ASP.NET MVC中，关于模型注解验证下列说法错误的是（     ）","answer":"C","a":"[Required(ErrorMessage = \"商品标题不能为空\")]  表示不允许属性值为空。","b":"[StringLength(50,ErrorMessage =\"商品标题过长\")] 表示约束了属性值的最大长度是50。","c":"[Display(Name = \"年龄\")] 表示视图显示为英文且含义为年龄。","d":"[Range(1, 100,ErrorMessage =\"数量在1~100之间\")] 表示数量在1到100之间，包括1和100。"},{"contentType":"单选题","content":"在ASP.NET MVC中，关于数据验证，下列说法错误的是（     ）","answer":"A","a":"无论何时，客户端验证都是必不可少的，而且不会失效。","b":"服务端的模型验证不可或缺，ModelState.IsValid方法将担当审查的重任，决定验证是否通过。","c":"一般程序中需要结合客户端验证和服务器端验证同时使用。","d":"服务器端验证是非常重要的一个环节，而且网络攻击无法绕过服务器端验证。"},{"contentType":"多选题","content":"jQuery验证插件给我们提供的验证功能包括（     ）【选三项】","answer":"ABC","a":"必填检查","b":"范围检查","c":"比较验证","d":"数据唯一性验证"},{"contentType":"单选题","content":"在ASP.NET MVC中，以下关于强类型HTML辅助方法说法错误的是","answer":"D","a":"通过 Lambda 表达式来引用传递到视图中的模型对象。","b":"强类型HTML辅助方法的命名规则是：HTML辅助方法名 + For。","c":"Html.TextBoxFor()可以生成标签<input type=\"text\">。","d":"Html.SelectFor()可以生成标签<select></select>。"},{"contentType":"单选题","content":"下列关于Ajax的理解正确的是（     ）","answer":"B","a":"Ajax技术称为异步无刷新，是前台页面相互调用的技术。","b":"Ajax是前台向后台请求服务器数据，而不必重载Web页面的一种技术。","c":"Ajax发送请求时会产生页面刷新。","d":"Ajax能够增加程序友好型，但是很不安全。"},{"contentType":"多选题","content":"在ASP.NET MVC中，下列关于 AjaxOptions对象说法正确的是（     ）【选两项】","answer":"AD","a":"HttpMethod 获取或设置HTTP请求方法（“GET”或“POST”）","b":"OnComplete 获取或设置数据响应之前、更新页面之后，调用的JavaScript函数。","c":"OnBegin 获取或设置更新页面之后调用的JavaScript函数的名称。","d":"InsertionMode 获取或设置指定如何将响应结果插入到目标DOM元素的模式。"},{"contentType":"单选题","content":"在ASP.NET MVC中，下列关于Ajax.BeginForm 理解错误的是（     ）","answer":"D","a":"Html.BeginForm用于创建普通的表单标签。","b":"Ajax.BeginForm方法创建的是异步表单。","c":"提交到当前页面，提交方式为Post，异步更新模块ID为UserLogOnContainer 的定义如下：\nAjax.BeginForm( new AjaxOptions{\n          UpdateTargetId = \"UserLogOnContainer\",\n          HttpMethod = \"Post\",\n          OnSuccess = \" \"})","d":"提交到指定控制器下的操作方法，提交方式为Post，异步更新模块ID为UserLogOnContainer，定义如下：\nAjax.BeginForm(\"controller\", \"action\", null, new AjaxOptions{\n           UpdateTargetId = \"UserLogOnContainer\",\n           HttpMethod = \"Post\",\n           OnSuccess = \" \"})"},{"contentType":"多选题","content":"Web API的使用场景有（     ）【选三项】","answer":"BCD","a":"需要Web Service而且需要SOAP。","b":"只想发布一些简单的Http服务，不想使用相对复杂的WCF配置。","c":"发布的服务可能会被带宽受限的设备访问。","d":"需要在已有的WCF服务基础上建立non-soap-based http服务。"},{"contentType":"单选题","content":"关于 HTTP动词 下列说法错误的是（     ）","answer":"B","a":"动词Get 一般用于获取查询资源，对应数据库中的Select操作。","b":"Get 动词非常安全，因为数据不会暴露出来。","c":"动词Post  一般用于向系统中更新数据，对应数据库中的Insert 、Update操作。","d":"动词Put 一般用于向系统中插入或更新数据（当然，其功能Post也能实现，与Post有很多相似之处），对应数据库中的Insert、Update操作。"},{"contentType":"单选题","content":"HTTP动词 与CRUD操作对应正确的是（     ）","answer":"C","a":"Post-Update;Get-Read;Put-Create;Delete-Delete;","b":"Post-Read;Get-Update;Put-Create;Delete-Delete;","c":"Post-Create;Get-Read;Put-Update;Delete-Delete;","d":"Post-Update;Get-Create;Put-Read;Delete-Delete;"},{"contentType":"单选题","content":"以下（     ）过滤器不是ASP.NET MVC提供的过滤器","answer":"D","a":"Authorization","b":"Exception","c":"Action","d":"Login"},{"contentType":"多选题","content":"以下关于测试理解正确的是（     ）【选三项】","answer":"ACD","a":"测试通常分为人工测试和自动化测试。","b":"使用自动化测试最为常见的是接口测试。","c":"单元测试的目标是检验被测试单元的实际逻辑，如果单元测试不通过，则说明代码中存在Bug。","d":"[TestClass]和[TestMethod]两个特性，用于标注此处为测试代码。"},{"contentType":"单选题","content":"在ASP.NET MVC中，如果定义了一个可供网址直接访问Action,其名称是:Add(int First,int Second),那么URL访问形式为（     ）","answer":"A","a":"http://localhost:2180/Home/Add?First=1&Second=2","b":"http://localhost:2180/Home/Add(1,2)","c":"http://localhost:2180/Home/Add(First,Second)?First=1&Second=2","d":"以上说法都不对"},{"contentType":"单选题","content":"在ASP.NET MVC中，[HttpPost]特性的含义是（     ）","answer":"C","a":"页面跳转","b":"不带参数访问","c":"支持提交（HTTP POST）","d":"仅仅是同名方法进行区分的方式"},{"contentType":"单选题","content":"在ASP.NET MVC中，Session默认有效期是（     ）时间","answer":"C","a":"5分钟","b":"10分钟","c":"20分钟","d":"30分钟"},{"contentType":"单选题","content":"下列不是ASP.NET MVC的组成部分的是（     ）","answer":"D","a":"Model","b":"Controller","c":"View","d":"BLL"},{"contentType":"单选题","content":"下列不是ASP.NET MVC优点的是（     ）","answer":"D","a":"结构清晰","b":"易于维护","c":"有利于工程管理软件","d":"占用资源少"},{"contentType":"单选题","content":"ASP.NET MVC是一个（     ）","answer":"C","a":"设计思想","b":"类","c":"框架","d":"设计模式"},{"contentType":"单选题","content":"关于MVC下列说法错误的是（     ）","answer":"A","a":"ASP.NET MVC中View默认放在Views目录下面，也可以是其他目录","b":"ASP.NET MVC中Model必须放在Models目录下面","c":"ASP.NET MVC中脚本文件必须放在Scripts目录下面","d":"ASP.NET MVC中Controller默认必须放在Controllers目录下面"},{"contentType":"多选题","content":"ASP.NET MVC与webform相比有（     ）优势【选三项】","answer":"ACD","a":"强类型view实现，更安全，更高效。","b":"使Web程序对单元测试的支持更困难","c":"没有服务器表单控件，可以更方便的控制应用程序的行为","d":"通过把项目分成Model、View和Controller，使得复杂项目更加容易维护，减少项目之间的耦合。"},{"contentType":"多选题","content":"在ASP.NET MVC中，下列（     ）不属于MVC的结果类型【选两项】","answer":"CD","a":"ViewResult","b":"PartialViewResult","c":"JqueryResult","d":"HTMLResult"},{"contentType":"多选题","content":"在ASP.NET MVC中，下列（     ）属于MVC过滤器的是【选三项】","answer":"ABD","a":"ActionFilter","b":"ResultFilter","c":"LoginFilter","d":"ExceptionFilter"},{"contentType":"多选题","content":"在ASP.NET MVC中，关于MVC中的传递方式说法正确的是（     ）【选三项】","answer":"ABC","a":"ViewData适合传递单个数据，需要类型转换","b":"ViewBag适合传递单个数据，不需要类型转换","c":"TempData主要用于跨多个动作方法传递数据","d":"View()+Model不适合传递模型数据，不需要类型转换"},{"contentType":"多选题","content":"在ASP.NET MVC中，DefaultModelBinder类可以通过下列（     ）途径获取绑定的值【选两项】","answer":"AD","a":"Request.Form","b":"Request.Url","c":"Response.QueryString","d":"Request.Files"},{"contentType":"多选题","content":"在ASP.NET MVC中，使用模型绑定可以获取基本类型数据，下列说法正确的是（     ）【选三项】","answer":"ABC","a":"int?类型，这种类型称为“可空 int类型”。","b":"内容为“空数据”时，将无法正确实现int类型转换","c":"设置可空类型可以解决内容为空的异常问题","d":"设定默认参数值无法解决内容为空的异常问题"},{"contentType":"多选题","content":"在ASP.NET MVC中，关于表单的说法正确的是（     ）【选三项】","answer":"ABD","a":"如果没有form标签，Internet将变成一个枯燥文档的只读存档库。","b":"action用以告知Web浏览器信息发往哪里","c":"action值指定的是一个URL，只可以是相对的","d":"action值指定的URL，可以是相对的，也可以是绝对的。"},{"contentType":"多选题","content":"在ASP.NET MVC中，关于表单的提交方式，下列说法正确的是（     ）【选三项】","answer":"ABD","a":"method可以告知浏览器是使用HTTP POST还是使用HTTP GET","b":"Post方式对提交的数据量无限制","c":"Post方式对提交的数据量的限制是4KB","d":"Post提交方式相当安全"},{"contentType":"单选题","content":"在ASP.NET MVC中，下列关于扩展方法说法错误的是（     ）","answer":"D","a":"扩展方法是一种极其美妙的构建方式","b":"C#的扩展方法只有在它的名称空间范围内，才能被调用","c":"ASP.NET MVC所有的HtmlHelper扩展方法都在System.Web.Mvc.Html名称空间中","d":"内置的扩展方法不可以删除"},{"contentType":"单选题","content":"在ASP.NET MVC中，关于使用HTML辅助方法生成表单标签以下说法正确的是（     ）","answer":"B","a":"Html.CheckBox()  输出<form>标签","b":"Html.DropDownList() 输出<select>标签","c":"Html.RadioButton()输出<input type=\"text\">标签","d":"Html.Hidden()输出<select>标签"},{"contentType":"单选题","content":"在ASP.NET MVC中，下列关于扩展方法说法正确的是（     ）","answer":"A","a":"作用是在不修改原有类的前提下为其添加新方法","b":"包含扩展方法的类不一定是静态类","c":"扩展方法不能实现为静态方法","d":"扩展方法的类不能对客户端代码可见"},{"contentType":"单选题","content":"在ASP.NET MVC中，以下不属于MVC表单验证的是（     ）","answer":"D","a":"必填检查","b":"范围检查","c":"比较验证","d":"符号验证"},{"contentType":"单选题","content":"在ASP.NET MVC中，关于表单验证，以下说法错误的是（     ）","answer":"D","a":"如果验证出现错误，会终止表单提交","b":"一旦验证未通过，程序将不会把数据提交到控制器方法中去","c":"在表单成功提交至控制器方法之前，不会占用服务器任何资源","d":"表单验证是mvc程序不能缺少的步骤"},{"contentType":"单选题","content":"在ASP.NET MVC中，关于jQuery插件验证下面说法正确的是（     ）","answer":"A","a":"使用jQuery完成客户端验证虽然简单，但代码量偏多，编写起来效率低下。","b":"jQuery的验证插件叫做Validator","c":"jQuery的验证插件并没有得到广泛认可","d":"使用jQuery插件验证无须引入使用jQuery脚本文件"},{"contentType":"单选题","content":"在ASP.NET MVC中，关于客户端验证与服务器端验证，以下说法错误的是（     ）","answer":"B","a":"客户端验证不能替代服务端验证","b":"浏览器禁用JavaScript，客户端验证也可以发挥作用","c":"客户端验证和服务器端验证相辅相成，结合运用服务于Web网页","d":"ModelState.IsValid方法将决定验证是否通过"},{"contentType":"单选题","content":"在ASP.NET MVC中，以下关于强类型的说明正确的是（     ）","answer":"A","a":"强类型是指变量在定义时已经明确指定其类型","b":"object类型属于强类型","c":"默认情况下，视图中的Model属性不可以由视图代码直接访问","d":"不可以通过明确指定Model的具体类型，而使用“强类型”数据"},{"contentType":"单选题","content":"在ASP.NET MVC中，强类型辅助方法Html.ListBoxFor()输出的标签是（     ）","answer":"D","a":"输出<textarea/>标签","b":"输出<select>标签","c":"输出<input type=\"checkbox\">标签","d":"输出<select multiple />标签"},{"contentType":"单选题","content":"在ASP.NET MVC中，Html.DisplayTextFor()的作用是（     ）","answer":"C","a":"根据提供的数据类型生成相应<input>标签（模板型方法）","b":"根据提供的数据类型输出相应显示内容（模板型方法）","c":"显示数据模型的文字资料","d":"显示数据模型输入验证失败时的错误信息"},{"contentType":"单选题","content":"以下关于ajax的说法错误的是（    ）","answer":"D","a":"Ajax是Asynchronous JavaScript and XML（异步JavaScript与XML）的缩写","b":"Ajax支持的核心来自于jQuery","c":"ASP.NET MVC 5框架中包含了对Ajax的支持","d":"Ajax是刷新页面完成数据更新。"},{"contentType":"单选题","content":"Ajax技术的核心对象是（     ）对象","answer":"B","a":"JavaScrip","b":"XMLHttpRequest","c":"jQuery Validate","d":"XML"},{"contentType":"单选题","content":"Ajax中获取或设置页面更新失败时调用的JavaScript函数是（     ）","answer":"B","a":"OnComplete","b":"OnFailure","c":"OnFail","d":"OnSuccess"},{"contentType":"单选题","content":"以下关于Web API的发展历程的说法错误的是（     ）","answer":"A","a":"出现的时间在2010年代早期","b":"作用是为了更好的连接各种电子产品共享一套系统数据","c":"逐渐成为Web Server重要的一个分支","d":"移动端和服务端的交互，主流的方式还是通过Http协议的形式来进行"},{"contentType":"单选题","content":"以下（     ）情况下可以考虑使用Web API","answer":"A","a":"发布的服务可能会被带宽受限的设备访问","b":"不使用开源框架的项目","c":"想使用相对复杂的WCF配置","d":"需要Web Service与SOAP"},{"contentType":"单选题","content":"以下不属于Web API的主要功能的是（     ）","answer":"C","a":"支持基于Http verb(Get, Post, Put, Delete)的CRUD(create, retrieve, update, delete)操作。","b":"请求的回复格式支持JSON，XML，并且可以扩展添加其他格式","c":"原生支持OData但不支持Self-host或者IIS host","d":"支持大多数MVC功能"},{"contentType":"单选题","content":"不属于HTTP/1.1协议中8个主要的HTTP动词的是（     ）","answer":"D","a":"Options","b":"Head","c":"Trace","d":"Force"},{"contentType":"单选题","content":"关于HTTP动词Get下面说法不正确的是（     ）","answer":"B","a":"很安全，因为其只查询而不修改数据","b":"按HTTP/1.1规定，有标头，也有文本","c":"一般用于获取查询资源，对应数据库中的Select操作","d":"使用Get动词获取URI资源的具像"},{"contentType":"单选题","content":"关于HTTP动词put下面说法不正确的是（     ）","answer":"A","a":"很安全，因为自带验证机制","b":"对应数据库中的Insert、Update操作","c":"Put动词用来完整更新或替换一个现有的资源","d":"请求的是一个资源的具像"},{"contentType":"单选题","content":" 在ASP.NET MVC中，关于Web API控制器与普通的控制器的区别，下面说法正确的是（     ）","answer":"B","a":"普通控制器返回原始对象","b":"Web API控制器继承System.Web.Http.ApiController","c":"普通控制器根据HTTP动词调度操作","d":"Web API控制器返回视图和其他操作辅助对象"},{"contentType":"单选题","content":" 在ASP.NET MVC中，以下不属于MVC支持的过滤器的是（     ）","answer":"D","a":"Authorization（授权）","b":"Action（行为）","c":"Result（结果）","d":"Error（错误）"},{"contentType":"单选题","content":" 在ASP.NET MVC中， 关于URL的说法不正确的是（     ）","answer":"D","a":"域名易于记忆和拼写","b":"简短、易输入","c":"可以反映出站点的结构","d":"可以经常发生变化"},{"contentType":"单选题","content":"在ASP.NET MVC中， 以下关于测试的说法错误的是（     ）","answer":"B","a":"测试通常分为人工测试和自动化测试","b":"测试可以找到所有问题","c":"自动化测试是通过测试软件执行特定的测试工作","d":"自动化测试最为常见的是单元测试"},{"contentType":"单选题","content":"在ASP.NET MVC中， 关于部署网站以下说法不正确的是（     ）","answer":"C","a":"对于不太熟悉IIS的新手来说，部署网站是一件非常困难且危险的事","b":"可使用Visual Studio快速度发布到远程IIS服务器上","c":"将目录设置成Everyone可读写是安全的操作","d":"乱设权限都是非常危险的部署设置"},{"contentType":"单选题","content":"在ASP.NET MVC中， 关于部署网站的过程，以下说法错误的是（     ）","answer":"D","a":"服务URL若要安装到本地，则直接输入localhost即可","b":"当“服务URL”输入的是本机地址（localhost），用户名字段不需要输入","c":"当“服务URL”输入的是本机地址（localhost），密码字段不需要输入","d":"发布到IIS站点后的网址，每次发布成功，Visua Studio都会自动开启浏览器，并自动输入该网址。此字段必须输入"},{"contentType":"单选题","content":"WebApi中用于删除数据的方法是（     ）","answer":"A","a":"Delete()","b":"Get()","c":"Put()","d":"Post()"},{"contentType":"单选题","content":"在ASP.NET MVC中，程序员喜欢将ViewData叫做ViewData对象，其实从底层定义角度来说，称呼其为（     ）更加确切","answer":"D","a":"“ViewData类型”","b":"“ViewData集合”","c":"“ViewData方法”","d":"“ViewData属性”"},{"contentType":"单选题","content":"在ASP.NET MVC中，dynamic类型的变量都会编译为（     ）类型的变量","answer":"C","a":"string","b":"int","c":"object","d":"date"},{"contentType":"单选题","content":"在jQuery中，使用AJAX实现WEB  API调用查询数据的方法是（     ）","answer":"B","a":"$.JSON()","b":"$.getJSON()","c":"$.get","d":"$.getJSON"},{"contentType":"单选题","content":"在ASP.NET MVC中，因为（     ）类型的内容可以存储任意数据，所以可以把整个Model数据放入ViewData对象或ViewBag对象中传递至View视图页","answer":"C","a":"View","b":"Data","c":"ViewDataDictionary","d":"DataDictionary"},{"contentType":"单选题","content":"在ASP.NET MVC中，当需要从视图传递简单的数据至控制器中时，可以使用（     ）来完成","answer":"C","a":"Type对象","b":"Response对象","c":"Request对象","d":"Object对象"},{"contentType":"单选题","content":"在jQuery中，$.AJAX中设置路径的属性是（     ）","answer":"A","a":"url","b":"dataurl","c":"imageurl","d":"session"},{"contentType":"单选题","content":"在ASP.NET MVC中，使用Ajax辅助方法必须先引入（     ）","answer":"A","a":"jQuery.unobtrusive-ajax.js","b":"jQuery.un.js","c":"unobtrusive-ajax.js","d":"ajax.js"},{"contentType":"单选题","content":"在ASP.NET MVC中，@Html.DropDownList绑定数据正确的是（     ）","answer":"C","a":"@Html.DropDownList(\"绑定字段\"，new[]{“学生”，\"白领\"，“CEO”})","b":"@Html.DropDownList(new SelectList(new[]{“学生”，\"白领\"，“CEO”}))","c":"@Html.DropDownList(\"绑定字段\"，new SelectList(new[]{“学生”，\"白领\"，“CEO”}))","d":"@Html.DropDownList(\"绑定字段\"，new SelectList())"},{"contentType":"多选题","content":"在ASP.NET MVC中，测试项目需要引用（     ）和（     ）【选两项】","answer":"AC","a":"ASP.NET MVC框架","b":"System.Data","c":"Controller类的名称空间","d":"System.IO"},{"contentType":"单选题","content":"在ASP.NET MVC中，AjaxOptions对象的属性 UpdateTargetId 的作用是（     ）","answer":"A","a":"更新的标签ID","b":"更改的标签ID","c":"绑定的数据","d":"绑定的路径"},{"contentType":"单选题","content":"在ASP.NET MVC中，访问WebAPI控制器时，默认需要添加上（     ）目录，用以和普通控制器的区分","answer":"A","a":"api","b":"user","c":"to","d":"image"},{"contentType":"单选题","content":"在ASP.NET MVC中，ViewData使用正确的是（     ）","answer":"D","a":"ViewData[name] =小明","b":"ViewData.name =小明","c":"ViewData.\"name\" =小明","d":"ViewData[\"name\"] =\"小明\""},{"contentType":"单选题","content":"在ASP.NET MVC中，强制类型是（     ）","answer":"A","a":"指变量在定义的时候明确指定类型","b":"指变量在定义的时候明确指定对象","c":"指变量在定义的时候明确指定数组","d":"指变量在定义的时候明确指定集合"},{"contentType":"单选题","content":"在ASP.NET MVC中，Html.TextBoxFor()方法是（     ）方法的强类型版本","answer":"C","a":"Html.Text()","b":"text.text","c":"Html.TextBox()","d":"input"},{"contentType":"单选题","content":"在ASP.NET MVC中，form标签的enctype属性值必须为（     ），否则浏览器只会发送文件名而不是文件对象本身","answer":"C","a":"“multipart/form-json”","b":"“multipart/form-text”","c":"“multipart/form-data”","d":"“multipart/form-table”"},{"contentType":"单选题","content":"在ASP.NET MVC中，“隐式模型绑定”，由默认模型绑定器（     ）类自动实现","answer":"A","a":"DefaultModelBinder","b":"DefaultDataBinder","c":"DefaultTableBinder","d":"DefaultViewBinder"},{"contentType":"单选题","content":"在ASP.NET MVC中，测试项目中测试类的特性是（     ）","answer":"A","a":"[TestClass]","b":"[Class]","c":"[TopClass]","d":"[Method]"},{"contentType":"单选题","content":"在ASP.NET MVC中，HTML辅助方法封装在（     ）类中，同时提供多个重载版本，以适应不同开发需求","answer":"A","a":"HtmlHepler","b":"HtmlTable","c":"HtmlData","d":"HtmlInt"},{"contentType":"单选题","content":"在ASP.NET MVC中，每一个Razor视图都继承了它们基类的（     ）属性","answer":"D","a":"title","b":"name","c":"id","d":"html"},{"contentType":"单选题","content":"在ASP.NET MVC中，Html.TextArea() 输出（     ）标签","answer":"A","a":"输出<textarea/>标签","b":"输出<input type=\"checkbox\">标签","c":"输出<input type=\"radio\">标签","d":"输出<input type=”hidden”/>标签"},{"contentType":"单选题","content":"在ASP.NET MVC中，使用HTML辅助方法 （     ）可以直接引用分部视图","answer":"A","a":"Html.Partial()","b":"Html.Password()","c":"Html.Ajax","d":"Html.Form"},{"contentType":"单选题","content":"在ASP.NET MVC中，以下（     ）是必填验证注解","answer":"B","a":"Required(Message=\"商品标题不能为空\")","b":"Required(ErrorMessage=\"商品标题不能为空\")","c":"Req(ErrorMessage=\"商品标题不能为空\")","d":"Required(Error=\"商品标题不能为空\")"},{"contentType":"单选题","content":"在ASP.NET MVC中，使用强类型生成的视图页面表单元素默认都是（     ），如果需要更改成单选、下拉及文本域等，就需要手动修改","answer":"C","a":"下拉框","b":"单选框","c":"文本框","d":"复选框"},{"contentType":"单选题","content":"在ASP.NET MVC中，以下属于Ajax辅助方法的是（     ）","answer":"B","a":"@ActionLink","b":"@Ajax.ActionLink","c":"@Html.ActionLink","d":"@Form.ActionLink"},{"contentType":"单选题","content":"在ASP.NET MVC中，分部视图类似于Web Forms中的（     ）","answer":"A","a":"“用户控件”","b":"“Page页面”","c":"“Table控件”","d":"“Text控件”"},{"contentType":"单选题","content":"在ASP.NET MVC中，Assert.AreEqual方法的意思是（     ）","answer":"D","a":"使用不同运算符验证指定的两个数据是否相等","b":"使用不同运算符验证指定的两个数据是否不同","c":"使用相等运算符验证指定的两个控件是否相同","d":"使用相等运算符验证指定的两个数据是否相等"},{"contentType":"多选题","content":"HTTP/1.1协议中保包含的HTTP动词有（     ）【选两项】","answer":"BD","a":"Login","b":"Get","c":"Error","d":"Post"},{"contentType":"多选题","content":"Web API控制器的特点包括（     ）【选三项】","answer":"ABC","a":"继承System.Web.Http.ApiController","b":"返回原始对象","c":"根据HTTP动词调度操作","d":"继承System.Web.Mvc.Controller"},{"contentType":"多选题","content":"关于ASP.NET MVC约定，以下（     ）是正确的【选两项】","answer":"AB","a":"控制器：必须与Controller结尾命名","b":"视图：必须放在Views文件夹下面，并且要和控制器同名的子目录中创建","c":"模型：必须与Controller结尾命名","d":"视图：必须放在根目录下"},{"contentType":"多选题","content":"在ASP.NET MVC中，创建分部视图的三个步骤是（     ）【选三项】","answer":"BCD","a":"在控制器目录中右键创建视图","b":"右键点击/Views/Shared目录，选择“添加”-“MVC 5分布页(Razor)”","c":"设定“视图名称”为“_top”，并选中“创建为分部视图”","d":"在新建的_top.cshtml中输入页面内容。"},{"contentType":"多选题","content":"在ASP.NET MVC中，常见的表单验证有（     ）【选三项】","answer":"ACD","a":"必填验证","b":"唯一验证","c":"比较验证","d":"格式验证"},{"contentType":"多选题","content":"MVC优点有（     ）【选两项】","answer":"AC","a":"使得复杂项目更加容易维护","b":"可以更方便的操作数据库信息","c":"可以提供丰富的url重写。","d":"不利于团队开发"},{"contentType":"单选题","content":"在ASP.NET MVC中，控制器使用模型绑定接收文件的类是（     ）","answer":"B","a":"PostedFileBase","b":"HttpPostedFileBase","c":"HttpPosted","d":"FileBase"},{"contentType":"单选题","content":"在ASP.NET MVC中，要上传文件的表单数据创建正确的是（     ）","answer":"B","a":"<form action=\"/Home/Upload\" method=\"post\" >\n<text>选择上传文件：</text><input name=\"file\" type=\"file\" id=\"file\" />\n<br /><br />\n<input type=\"submit\" name=\"submit1\" value=\"上传\" />\n</form>","b":"<form action=\"/Home/Upload\" method=\"post\" enctype=\"multipart/form-data\">\n<text>选择上传文件：</text><input name=\"file\" type=\"file\" id=\"file\" />\n<br /><br />\n<input type=\"submit\" name=\"submit1\" value=\"上传\" />\n</form>","c":"<form  enctype=\"multipart/form-data\">\n<text>选择上传文件：</text><input name=\"file\" type=\"file\" id=\"file\" />\n<br /><br />\n<input type=\"submit\" name=\"submit1\" value=\"上传\" />\n</form>","d":"<form action=\"/Home/Upload\" method=\"post\" enctype=\"multipart/form-data\">\n<text>选择上传文件：</text><input  type=\"file\"/>\n<br /><br />\n<input type=\"submit\" name=\"submit1\" value=\"上传\" />\n</form>"},{"contentType":"多选题","content":"在ASP.NET MVC中，不是ActrionResult的派生类有（     ）【选两项】","answer":"CD","a":"ViewResult","b":"EmptyResult","c":"StringResult","d":"HtmlResult"},{"contentType":"多选题","content":"在ASP.NET MVC中，FileResult派生类包括（     ）【选三项】","answer":"ABC","a":"FileCountResult","b":"FilePathResult","c":"FileStreamResult","d":"ContentResult"},{"contentType":"单选题","content":"在ASP.NET MVC中，“StudentService”一般属于三层中（     ）的命名规范","answer":"C","a":"显示层","b":"业务逻辑层","c":"数据访问层","d":"模型层"},{"contentType":"单选题","content":".NET三层架构中的三层通常指（     ）","answer":"A","a":"模型层、数据访问层、显示层","b":"通用层、业务逻辑层、显示层","c":"显示层、业务逻辑层、数据访问层","d":"显示层、数据访问层、通用层"},{"contentType":"单选题","content":"在ASP.NET MVC中，下列模型数据注解中用于验证属性值必须匹配正则表达式的是（     ）","answer":"C","a":"Required","b":"Range","c":"RegularExpression","d":"Compare"},{"contentType":"多选题","content":"在ASP.NET MVC中，MVC缺点有（     ）【选三项】","answer":"ABC","a":"增加了系统结构和实现的复杂性","b":"视图与控制器间的过于紧密的连接","c":"视图对模型数据的低效率访问","d":"对单元测试的支持更加出色"},{"contentType":"单选题","content":"ASP.NET MVC 应用程序不包含的默认文件或者目录有（     ）","answer":"C","a":"App_Start","b":"App_Data","c":"www","d":"Views"},{"contentType":"多选题","content":"在ASP.NET MVC中，关于以下的代码说法正确的是（     ）\n[HttpPost]\n[ValidateAntiForgeryToken]\npublic ActionResult Edit(Movie movie)\n{\n    if (ModelState.IsValid)\n    {\n       db.Entry(movie).State = EntityState.Modified;\n       db.SaveChanges（     ）;\n       return RedirectToAction(\"Index\");\n    }\n    return View(movie);\n}【选两项】","answer":"AD","a":"HttpPost特性指定只有POST请求才能调用这个Edit方法。","b":"HttpGet必须指定。","c":"ValidateAntiForgeryToken 这个特性用来允许伪造的请求","d":"D.ValidateAntiForgeryToken和视图（Views\\Movies\\Edit.cshtml）中的@Html.AntiForgeryToken() 是成对出现的"},{"contentType":"单选题","content":"在ASP.NET MVC项目中默认（    ）文件提供全局可用代码，包括应用程序的事件处理程序以及会话事件、方法和静态变量，也被称为应用程序文件","answer":"C","a":"Web.config","b":"Properties","c":"Global.asax","d":"packages.config"},{"contentType":"单选题","content":"在ASP.NET MVC的_Layout.cshtml中，使用（     ）实现占位","answer":"A","a":"RenderBody","b":"RenderPage","c":"RenderSection","d":"PageData"},{"contentType":"多选题","content":"在ASP.NET MVC中，模型绑定机制省略了常见的手动传值和类型转换的步骤，那么手动传值有（     ）类型【选两项】","answer":"AB","a":"Request.Form","b":"Request.QueryString","c":"Session","d":"以上都不是"},{"contentType":"多选题","content":"在ASP.NET MVC中，关于辅助方法Html.ActionLink，常见的使用方法有（     ）【选三项】","answer":"ABC","a":"A.Html.ActionLink(\"链接文字\",\"ActionName\")","b":"B.Html.AcionLink(\"链接文字\",\"actionName\",\"控制器\")","c":"C.Html.AcionLink(\"链接文字\",\"actionName\",\"控制器\",new{id=123})","d":"D.以上都不是"},{"contentType":"单选题","content":"ASP.NET MVC中，关于Views 文件夹描述错误的是（     ）","answer":"C","a":"Views 文件夹存储的是与应用程序显示（用户界面）相关的文件（HTML 文件）","b":"Views 文件夹中包含每个控制器对应的一个文件夹。","c":"Views 文件夹存储的文件可能扩展名只能是aspx","d":"Shared 文件夹用于存储控制器间分享的视图（母版页和布局页）。"},{"contentType":"单选题","content":"在ASP.NET MVC中，可以使用Html辅助方法生成表单标签，与<input type=\"radio\">对应的辅助方法是（     ）","answer":"B","a":"A.html.CheckBox()","b":"B.html.RadioButton()","c":"C.Html.DropDownList()","d":"D.Html.TestBox()"},{"contentType":"单选题","content":"在ASP.NET MVC中，模型注解验证实现验证数值范围为10-20的是（    ）","answer":"B","a":"StringLength(10,20)","b":"Range(10,20)","c":"RegularExpression","d":"Compare(\"10\")"},{"contentType":"单选题","content":"在ASP.NET MVC中，模型注解验证实现显示报错信息“商品名字不能为空”的写法是（     ）","answer":"D","a":"Error=\"商品名字不能为空\"","b":"Message=\"商品名字不能为空\"","c":"Display=\"商品名字不能为空\"","d":"ErrorMessage=\"商品名字不能为空\""},{"contentType":"多选题","content":"在ASP.NET MVC中，BeginFormd的常用形式如下：Html.BeginForm(actionName,controllerName,method,htmlAttributes){}，以下说法正确的有（     ）【选两项】","answer":"CD","a":"actionName：控制器的名称，System.String。","b":"controllerName：操作方法的名称，System.String。","c":"method：用于处理窗体的 HTTP 方法（GET 或 POST），System.Web.Mvc.FormMethod。","d":"htmlAttributes：一个对象，其中包含要为该元素设置的 HTML 特性，System.Object。"},{"contentType":"单选题","content":"在ASP.NET MVC中，BeginForm添加样式的写法正确的是","answer":"C","a":"Html.BeginForm(\"actionName\",\"controllerName\",FormMethod.POST,new{class=\"className\"})","b":"Html.BeginForm(\"actionName\",\"controllerName\",FormMethod.POST,new{@style=\"className\"})","c":"Html.BeginForm(\"actionName\",\"controllerName\",FormMethod.POST,new{@class=\"className\"})","d":"以上都对"},{"contentType":"单选题","content":"在ASP.NET MVC中，将软件开发过程分割为3个单元，不包括（     ）","answer":"D","a":"视图","b":"模型","c":"控制器","d":"业务层"},{"contentType":"多选题","content":"在ASP.NET MVC中，强类型使用的语法正确的是（     ）【选三项】","answer":"ABC","a":"@model 模型对象（集合）","b":"@model  Demo.Models.Product","c":"@model IEnumerable<Demo.Models.Product>","d":"以上都不对"},{"contentType":"单选题","content":"在ASP.NET MVC中，使用Ajax.BeginForm实现数据的异步刷新，使用新的数据替换原来的数据信息，以下设置正确的是（     ）","answer":"C","a":"InsertionMode=InsertionMode.InsertBefore","b":"InsertionMode=InsertionMode.InsertAfter","c":"InsertionMode=InsertionMode.Replace","d":"InsertionMode=InsertionMode.Update"},{"contentType":"单选题","content":"在ASP.NET MVC中，HTTP的（     ）动词用来完整更新或替换一个现有的资源，也可以用用户端指定的URL来建立一个新的资源","answer":"B","a":"post","b":"put","c":"get","d":"delete"},{"contentType":"多选题","content":"Web API控制器和普通控制器的区别有（     ）【选三项】","answer":"BCD","a":"Web API控制器继承System.Web.Mvc.Controller","b":"Web API控制器继承System.Web.Http.ApiController","c":"控制器中的方法返回原始对象","d":"默认根据HTTP动词调度操作"},{"contentType":"单选题","content":"ASP.NET MVC支持的过滤器类型有4种，其中（     ）用于限制执行控制器或控制器的某个操作方法","answer":"A","a":"Authorization","b":"Exception","c":"Action","d":"Result"},{"contentType":"单选题","content":"关于ASP.NET和ASP.NET MVC的关系，描述错误的是（     ）","answer":"D","a":"ASP.NET MVC依赖于HttpHandler，关于请求是怎么进入控制器的，其实就是用到了HttpHandler","b":"Session、Cookie、Cache和Application这些ASP.NET的对象保存机制在MVC中依然是需要用到的","c":"HttpContext、Request、Response、Server对象在MVC中仍然可以使用，在Controller中通过智能感知的形式很容易得到这些对象","d":"ASP.NET 是在核心ASP.NET MVC基础之上构建的"},{"contentType":"单选题","content":"在ASP.NET MVC中，显示视图的方法有多种，以下描述错误的是（     ）","answer":"B","a":"View在action中返回的是一个视图。","b":"只能使用View，如 return view（）","c":"Partial view, 它是在action中返回一部分视图。","d":"Redirect to action.它是用来重定向到不同的action里面，它可以在一个controller里面也可以在不同的controller里面"},{"contentType":"单选题","content":"在ASP.NET MVC中，新建项目的“App_Start\\RoutConfig.cs”文件中，（    ）方法注册了默认的路由配置","answer":"A","a":"RegisterRoutes","b":"Application_Start","c":"EnrollRoutes","d":"WriteRoutes"},{"contentType":"单选题","content":"在ASP.NET MVC中，（   ）目录包含需要随应用程序一起部署的各种非编码资源这些资源包括图像和CSS样式表文件等","answer":"A","a":"Content","b":"Script","c":"App_Start","d":"Filters"},{"contentType":"单选题","content":"在ASP.NET MVC中，关于<%# %> 和 <%  %> 的描述正确的是（     ）","answer":"A","a":"<%# %>表示绑定的数据源","b":"<% %>表示绑定的数据源","c":"<% %>是错误的用法","d":"<%# %>是错误的用法"},{"contentType":"单选题","content":"在ASP.NET MVC中，如果要使用JQuery的validate插件验证表单， 以下（     ）文件不需要导入","answer":"D","a":"JQuery-1.8.3.min.js","b":"JQuery.validate.js","c":"jQuery.metadata.js","d":"jQuery.message_cn.js"},{"contentType":"单选题","content":"在ASP.NET MVC中，以下强类型HTML辅助方法，不支持视图模板的是（     ）","answer":"B","a":"Html.DisplayFor()","b":"Html.ListBox()","c":"Html.EditorFor()","d":"以上都不支持"},{"contentType":"单选题","content":"在ASP.NET MVC中，假设controller中的action方法，仅仅需要返回一个字符串文本，关于这个情况描述错误的是（     ）","answer":"B","a":"可以使用return Content()","b":"必须使用return Content()","c":"可以使用return View()","d":"可以使用ViewBag传递需要传递的字符转"}]