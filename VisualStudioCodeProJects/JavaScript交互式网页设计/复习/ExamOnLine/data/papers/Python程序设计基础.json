[{"contentType":"单选题","content":"在Python语言中语句块的标记是","answer":"C","a":"分号","b":"逗号","c":"缩进","d":"/"},{"contentType":"多选题","content":"在Python中，以下哪些字符串是正确的【选两项】","answer":"BD","a":"‘abc”ab”","b":"‘abc”ab’","c":"“abc”ab”","d":"“abc\\”ab”"},{"contentType":"单选题","content":"在Python中程序的运行方式","answer":"B","a":"编译执行","b":"解释执行","c":"直接执行","d":"边编译边执行"},{"contentType":"多选题","content":"在Python中，下列选项中不符合python变量命名规则的是【选两项】","answer":"AC","a":"TempStr%","b":"abc3","c":"3abc","d":"_a"},{"contentType":"单选题","content":"在Python中使用注释时，下列描述错误的是","answer":"D","a":"Python语言有两种注释方式:单行注释和多行注释","b":"Python语言的单行注释以#开头","c":"Python语言的多行注释以'''(三个单引号）开头和结尾","d":"Python语言的单行注释以单引号‘开头"},{"contentType":"单选题","content":"在Python中，利用print（     ）格式化输出，能够控制浮点数的小数点后两位输出的是","answer":"B","a":"{.2}","b":"{:.2f}","c":"{:.2]","d":"{.2f}"},{"contentType":"单选题","content":"在 Python函数中，用于获取用户输入的是","answer":"A","a":"input()","b":"print()","c":"eval()","d":"get()"},{"contentType":"单选题","content":"在Python中，关于python变量的描述错误的是","answer":"B","a":"Python变量不需要类型声明","b":"Python变量可以先声明再赋值，也可以同时声明和赋值","c":"可以使用等号“=”来给变量赋值","d":"Python变量的声明和赋值必须是一起的，不能单独分开"},{"contentType":"单选题","content":"在Python中，下面代码的输出结果是x= 12.34\n  print(type(x))","answer":"A","a":"<class 'float'>","b":"<class 'complex'>","c":"<class 'bool'>","d":"<class 'int'>"},{"contentType":"多选题","content":"在Python中，关于位运算符的符号的描述正确的是【选两项】","answer":"AB","a":"\"&\"按位与运算符","b":"\"|\"按位或运算符","c":"\"~\"按位异或运算符","d":"\"^\"按位取反运算符"},{"contentType":"单选题","content":"在Python中，下列数据中不属于列表的是","answer":"A","a":"{23，45，56，78}","b":"[23，45，5.6，7.8]","c":"[23，45，\"Info\", 'a']","d":"[\"A\"，\"B\"，\"C\"，\"D\"]"},{"contentType":"单选题","content":"在Python中，下列数据中属于元组的是","answer":"B","a":-198,"b":"(\"192.168.10.1\",3306,\"root\",\"root123\")","c":"{198，\"Python\"，18.5，-5.6}","d":"[198,\"Python\"，18.5，-5.6]"},{"contentType":"单选题","content":"在Python中，声明变量并赋值正确的是","answer":"C","a":"var a = 3","b":"int a = 3","c":"a = 3","d":"integer = 3"},{"contentType":"单选题","content":"在Python中，以下选项中可访问字符串s从右侧向左第三个字符的是","answer":"C","a":"s[3]","b":"s[:-3]","c":"s[-3]","d":"s[0:-3]"},{"contentType":"单选题","content":"在Python中，关于Python浮点数描述错误的是","answer":"C","a":"浮点数类型表示带有小数的类型","b":"浮点数类型与数学中实数的概念一致","c":"小数部分不可以为0","d":"Python语言要求所有浮点数必须带有小数部分"},{"contentType":"单选题","content":"在Python中，关于Python声明变量的规则错误的是","answer":"D","a":"不能用数字开头","b":"不能是python的关键字","c":"让变量名尽量有意义些","d":"不能带有下划线等特殊符号"},{"contentType":"单选题","content":"在Python中，“ab”+”c”*2 运行结果是","answer":"C","a":"abc2","b":"abcabc","c":"abcc","d":"ababcc"},{"contentType":"单选题","content":"在Python中，下面代码的输出结果是print ( 0.1+0.2==0.3 )","answer":"C","a":false,"b":true,"c":false,"d":true},{"contentType":"单选题","content":"在Python中，下面关键字中，不属于分支结构的是","answer":"B","a":"elif","b":"elseif","c":"if","d":"else"},{"contentType":"单选题","content":"在Python中，以下选项中，输出结果为False的是","answer":"B","a":"5 is 5","b":"False !=0","c":"5 is not 4","d":"5 != 4"},{"contentType":"单选题","content":"在Python中，下面代码的输出结果是\na = b = c=123，a、b、c三个变量的值分别为","answer":"D","a":"0 0 123","b":"出错","c":"1 1 123","d":"123   123   123"},{"contentType":"单选题","content":"在Python中，如果x= 1那么x*= 3+5**2运算之后x的结果是多少","answer":"B","a":"29","b":"28","c":"13","d":"14"},{"contentType":"单选题","content":"在Python中，关于Python 的分支结构，以下选项中描述错误的是","answer":"D","a":"Python 中 if-elif-else 语句描述多分支结构","b":"分支结构使用if 保留字","c":"Python 中 if-else 语句用来形成二分支结构","d":"分支结构可以向已经执行过的语句部分跳转"},{"contentType":"多选题","content":"在Python中，关于continue语句的说法中，以下选项中正确的是【选两项】","answer":"AB","a":"continue语句只能用于循环语句中","b":"通常和条件语句一同使用，当满足一定条件时，终止本次循环，跳转至下一次循环。","c":"continue语句可以单独用在条件语句中","d":"continue 语句结束整个循环，继续执行循环语句的后续语句"},{"contentType":"单选题","content":"在Python中，以下选项中能够实现 Python循坏结构的是","answer":"C","a":"loop","b":"do...for","c":"while","d":"if"},{"contentType":"单选题","content":"在Python中，用来判断当前Python语句在分支结构中的是","answer":"D","a":"引号","b":"冒号","c":"大括号","d":"缩进"},{"contentType":"单选题","content":"在Python中，以下选项中描述正确的是","answer":"A","a":"条件24<=28<25是合法的，且输出为False","b":"条件35<=45<75是合法的，且输出为False","c":"条件24<=28<25是不合法的","d":"条件24<=28<25是合法的，且输出为True"},{"contentType":"单选题","content":"在Python中，下面代码的输出结果是\nfor i in range(1,10,2):\n print(i,end=\", \")","answer":"C","a":"=\"1","b":4,"c":",1.4","d":7},{"contentType":"多选题","content":"在Python中，以下哪一个选项是不合法的布尔表达式【选两项】","answer":"BD","a":"x in range(6)","b":"3 = a","c":"e > 5 and 4 == f","d":"(x - 6) = 5"},{"contentType":"单选题","content":"在Python中，下列表达式的值为True的是","answer":"B","a":"5+4 <= 2","b":"2<5 || 3>2","c":"2 != 2","d":"3 == 2"},{"contentType":"多选题","content":"在Python中，关于break语句的说法中，以下选项中正确的是【选三项】","answer":"ABC","a":"break作为中断处理语句，只能在while和for循环结构中。","b":"通常和条件语句一起执行。","c":"当满足一定条件时，使程序立即退出当前语句结构，转而执行该语句结构之后的语句","d":"当满足一定条件时，终止本次循环，跳转至下一次循环。"},{"contentType":"多选题","content":"在Python中，下列哪些运算符为成员运算符【选两项】","answer":"CD","a":"is","b":"is not","c":"in","d":"not in"},{"contentType":"单选题","content":"在python中赋值操作错误的是","answer":"C","a":"+=","b":"-=","c":"x=","d":"/="},{"contentType":"单选题","content":"在Python中，关于in操作符，描述不正确的是","answer":"D","a":"in操作符用来在指定的序列中找到某一个值，如果找到返回True，否则返回False","b":"in操作符所应用的序列可以是列表、元组或者字典","c":"判断指定序列中找不到某一个值，则使用not in，它刚好和in相反","d":"如果在序列中查找不到这个值，会将这个值加入到当前序列中"},{"contentType":"单选题","content":"在Python中，以下哪一个不是python中的逻辑运算符","answer":"B","a":"and","b":"in","c":"or","d":"not"},{"contentType":"多选题","content":"在Python中，下列属于python算术运算符的是【选两项】","answer":"AC","a":"**","b":"++","c":"//","d":"--"},{"contentType":"单选题","content":"在循环中不会出现的关键字是哪一个","answer":"C","a":"for","b":"while","c":"do while","d":"in"},{"contentType":"多选题","content":"在Python中，python中以下说法正确的是：【选两项】","answer":"AC","a":"如果子类重写了init方法,那么在实例化对象的时候，默认调用子类构造方法","b":"如果子类重写了init方法,那么在实例化对象的时候，默认调用父类构造方法","c":"当子类重写init方法，在实例化对象的时候，调用父类的init方法的方式：super().__init__()","d":"当子类重写init方法，在实例化对象的时候，调用父类的init方法的方式：init__()"},{"contentType":"多选题","content":"在Python中，定义一个People类，其中要有类的初始化函数(带参数name)                               # Person类\nclass Person(object):\n    def __init__(self, name):\n        self.name = name     将name改成私有属性的描述不正确的是：【选三项】","answer":"BCD","a":"self.__name = name","b":"self._name = name","c":"__self.__name = name","d":"null"},{"contentType":"多选题","content":"在Python中，python中关于导入模块或模块中的函数以下说法正确的是：【选两项】","answer":"AB","a":"使用”import 模块名”方式导入模块。","b":"使用”from 模块名 import 函数名1”方式导入模块中的函数。","c":"使用“import 模块名  函数名1”方式导入模块或模块中的函数。","d":"使用”import 函数名”方式导入函数。"},{"contentType":"单选题","content":"在Python中，关于Python的构造方法以下说法错误的是：","answer":"D","a":"构造方法在创建对象时用于对成员变量进行初始化","b":"在一个类中有且只能有一个构造方法。","c":"构造方法的名称为__init__。","d":"在一个类中有多个构造方法，这就是方法的重载。"},{"contentType":"单选题","content":"在Python中，关于Python类中方法和函数，正确的是","answer":"A","a":"类中方法的定义和函数的定义类似，同样以def关键词开头，后接函数标识符名称和圆括号()。类中的方法必须有个附加参数self，参数self指向当前对象。","b":"类中方法的定义和函数的定义类似，同样以def—关键词开头，后接函数标识符名称和[]。类中的方法必须有个附加参数_self，参数self不指向当前对象。","c":"类中方法的定义和函数的定义类似，同样以def—关键词开头，后接函数标识符名称和[]。类中的方法必须有个附加参数self，参数self指向当前对象。","d":"类中方法的定义和函数的定义类似，同样以def关键词开头，后接函数标识符名称和圆括号()。类中的方法必须有个附加参数self，参数self不指向当前对象。"},{"contentType":"单选题","content":"在Python中类和面向对象的描述，理解不正确的是","answer":"B","a":"在Python中，所有数据类型都可以视为对象，当然也可以自定义对象。","b":"在Python中，OOP把数据类型和对象作为程序的基本单元","c":"Python的面向对象的设计思想是抽象出Class，根据Class创建Instance","d":"OOP把对象作为程序的基本单元，一个对象包含了数据和操作数据的函数。"},{"contentType":"单选题","content":"在Python中，Python中类的定义正确的是","answer":"C","a":"class Phone:\n    name = \"\"\n    call(self, name)\n        print(name, \"打电话\")","b":"class Phone:\n    name = \"\"\n   call(self, name)\n        print(name, \"打电话\")","c":"class Phone:\n    name = \"\"\n    def call(self, name):\n        print(name, \"打电话\")","d":"class Phone\n    name = \"\"\n    def call(self, name):\n        print(name, \"打电话\")"},{"contentType":"单选题","content":"在Python中，看代码,说结果：                                \nclass Singer:\n    name = \"\"\n    area = \"\"\n\n    def __init__(self, name, area):\n        self.name = name\n        self.area = area\n\nsinger1 = Singer(\"陈奕迅\", \"香港\")\nprint(\"歌手：%s \\t 地区：%s\"%(singer1.name, singer1.area))\nsinger2 = Singer(\"张杰\", \"中国\")\nprint(\"歌手：%s \\t 地区：%s\"%(singer2.name, singer2.area))","answer":"D","a":"不能运行","b":"歌手：陈奕迅 地区：香港              歌手：张杰 地区：中国","c":"歌手：张杰 地区：中国                歌手：陈奕迅 地区：香港","d":"歌手：陈奕迅    地区：香港              歌手：张杰      地区：中国"},{"contentType":"单选题","content":"在Python中，python中的继承，理解不正确的是：","answer":"D","a":"通过继承原有类派生出子类，进而可以构造出更为复杂的子类。","b":"子类既有新定义的行为特征，又继承了原有类的行为特征","c":"Python程序也有继承的关系，只要满足is-a的关系都可以用继承来表示。","d":"Python程序也有继承的关系，只要满足have-a的关系都可以用继承来表示。"},{"contentType":"单选题","content":"关于Python中的继承，以下说法最正确的是：","answer":"D","a":"实现继承的类被称为子类。","b":"如果一个类继承另外一个类，则需要在类定义的第一行中类名的后面加小括号，小括号中传入父类的类名。","c":"被继承的类被称为父类，也被称为基类或超类","d":"以上都正确"},{"contentType":"单选题","content":"在Python中，阅读代码，选择结果：                      \nclass Person:\n    \"人的类\"\n    name = \"\"\n    age = 0\n    def eat(self):\n        print(self.name,\"正在吃饭\")\n\nclass Student（     ）:\n    \"学生类\"\n    def study(self):\n        print(self.name, \"正在学习\")\nper1 = Person（     ）\nper1.name = \"张三\"\nper1.eat（     ）","answer":"B","a":"张三  正在吃饭           小明  正在学习","b":"张三  正在吃饭","c":"无语法错误，但不能输出结果","d":"代码非法，不能解释"},{"contentType":"单选题","content":"在Python中，阅读代码，选择结果：                      class Person:\n    \"人的类\"\n    name = \"\"\n    age = 0\n    def eat(self):\n        print(self.name,\"正在吃饭\")\n\nclass Student（     ）\n    \"学生类\"\n    def study(self):\n        print(self.name, \"正在学习\")\nper1 = Person（     ）\nper1.name = \"张三\"\nper1.eat","answer":"D","a":"张三  正在吃饭           小明  正在学习","b":"张三  正在吃饭","c":"无语法错误，但不能输出结果","d":"代码非法，不能解释"},{"contentType":"单选题","content":"在Python中，可以采用“模块”的方式来组织代码,以下描述不正确的是：","answer":"C","a":"一个.py文件就称之为一个模块（Module）。模块的名字就是文件的名字。","b":"Python中也可以使用“包”来管理各种模块文件。可使用工具创建包或在文件夹中创建”__init__.py”文件产生包。","c":"使用模块将相同功能的函数分别放到不同的文件里。","d":"使用模块将不同功能的函数分别放到不同的文件里。"},{"contentType":"单选题","content":"在Python中，可以采用“模块”的方式来组织代码,以下描述正确的是：","answer":"B","a":"使用模块可能导致函数名和变量名冲突。","b":"相同名字的函数和变量完全可以分别存在不同的模块中。","c":"相同名字的函数和变量完全可以存在相同同的模块中。","d":"不同名字的函数和变量必须分别存在不同的模块中。"},{"contentType":"单选题","content":"在Python中，def getRandomNum（     ）: \n    return int(random.uniform(0, 1000))，阅读代码以下描述不正确的是：","answer":"C","a":"模块功能是想获取随机数","b":"缺少导入random模块的代码","c":"生成的随机数的范围是[0,1000]","d":"生成的随机数的范围是[0,1000)"},{"contentType":"单选题","content":"在Python中，import calUtils as cal\nnum = cal.calMax(34, 56)\nprint(\"34和56的最大值为\",num) 阅读代码以下描述不正确的是：","answer":"A","a":"import calUtils as cal此句是导入模块calUtils和cal","b":"import calUtils as cal此句给calUtils创建别名cal","c":"结果为：\"34和56的最大值为\"56","d":"num = cal.calMax(34, 56)也可以写成num = calUtils.calMax(34, 56)不影响结果"},{"contentType":"单选题","content":"在Python中，emp1 = Employee(\"张小明\", 2500) \nprint(\"员工姓名为：\", emp1.name)\nprint(\"员工工资为：\", emp1.salary)\nemp1.displayEmployee（     ）   \nemp2 = Employee(\"\", 2200) \nemp2.name = \"王小燕\"     \nprint(\"员工姓名为：\", emp2.name)\nemp2.displayEmployee（     ），阅读代码，选择描述错误的","answer":"C","a":"emp1 = Employee(\"张小明\", 2500)  是在创建Employee员工对象","b":"emp1.displayEmployee()   是在调用类中的displayEmployee方法","c":"emp2 = Employee(\"\", 2200)  此处创建Employee员工对象代码有误","d":"emp2 = Employee(\"\", 2200) \nemp2.name = \"王小燕\"       \nprint(\"员工姓名为：\", emp2.name)的输出结果为：“员工姓名为：王小燕”"},{"contentType":"单选题","content":"在Python中，关于Python语言的特点，以下选项描述正确的是","answer":"A","a":"Python语言是解释型语言","b":"Python语言不支持面向对象","c":"Python语言是编译型语言","d":"Python语言是非跨平台语言"},{"contentType":"单选题","content":"在Python中，关于 import 引用，以下选项中描述错误的是","answer":"D","a":"import 保留字用于导入模块或者模块中的对象","b":"使用 import turtle 引入turtle 库","c":"使用 import turtle as t 引入 turtle 库，取别名为 t","d":"可以使用 from turtle import setup 引入 turtle 库"},{"contentType":"单选题","content":"在Python中，python中类名的命名规则中不包括：","answer":"C","a":"要遵循标识符的命名规范","b":"尽量使用驼峰命名法","c":"不区分大小写","d":"命名时应做到“见名知意”"},{"contentType":"单选题","content":"在Python中，class abc:\n    def __init__(self,age):\n        self.age=age\n    def __add__(self,obj):\n        return self.age+obj.age\na1=abc(18)\na2=abc(20)\nprint(a1+a2)阅读代码，选择执行结果：","answer":"A","a":"38","b":"1820","c":"2018","d":"没有结果"},{"contentType":"单选题","content":"在Python中，构造方法是类的一个特殊方法，Python 中它的名称为：","answer":"C","a":"与类同名","b":"_construct","c":"__init__","d":"init"},{"contentType":"单选题","content":"在Python中，python面向对象中super的作用描述不正确的是：","answer":"B","a":"super在面向对象继承类中代指父类，书写方法super(类名,self).属性或者方法或super().属性或者方法","b":"super机制里可以保证子类仅被执行一次，执行的顺序遵循MRO，广度优先查询方法","c":"super方法在类的多继承时可以简化代码，避免代码冗余","d":"super方法可以增加类之间调用的灵活性，当父类名发生变化时不必修改"},{"contentType":"单选题","content":"在Python中，面向对象中的特殊成员以及应用场景描述正确的是：","answer":"B","a":"__del__ 析构方法，对应着一个对象的删除之后执行的内容","b":"__del__ 析构方法，对应着一个对象的删除之前执行的内容","c":"__repr__：和 repr() %r不相关，但在没有__str__方法时，__repr__可以完全取代__str__。","d":"__repr__：和 repr() %r都是息息相关的，在没有__str__方法时，__repr__不可以完全取代__str__。"},{"contentType":"单选题","content":"在Python中，面向对象中的特殊成员以及应用场景描述不正确的是：","answer":"D","a":"__hash__:判断hash值是否相等的时候依赖__hash__方法","b":"set的去重机制其实就是根据__hash__和__eq__方法实现的","c":"__str__：和str() print() %s 都是息息相关的，返回值一定是字符串类型","d":"__str__：和str() print() %s 都是息息相关的，返回值不一定是字符串类型"},{"contentType":"单选题","content":"在Python中，面向对象中的特殊成员以及应用场景描述不正确的是：","answer":"D","a":"__call__：对象的构造方法，对象加上()，可以触发这个类的__call__方法","b":"__len__：内置函数的len函数是依赖类中的__len__方法","c":"__eq__：判断值是否相等的时候依赖__eq__方法","d":"__call__：对象的构造方法，可以直接触发这个类的__call__方法"},{"contentType":"单选题","content":"在Python中，OS模块返回指定目录下的所有文件和目录名的函数是","answer":"B","a":"os.remove()","b":"os.listdir()","c":"os.path.isfile()","d":"os.getcwd()"},{"contentType":"单选题","content":"在Python中，os.getcwd（     ）函数的作用是","answer":"A","a":"获取当前工作目录，即当前Python脚本工作的目录路径","b":"用来删除一个文件","c":"获取文件名","d":"获取路径名"},{"contentType":"单选题","content":"在Python中，OS模块获取文件大小的函数是","answer":"C","a":"os.path.basename()","b":"os.mkdir(\"test\")","c":"os.path.getsize(filename)","d":"os.exit()"},{"contentType":"单选题","content":"在Python中，os.mkdir(\"test\")函数的作用是","answer":"D","a":"复制test目录","b":"查询test目录","c":"删除test目录","d":"创建test目录"},{"contentType":"单选题","content":"在Python中，os.exit（     ）函数的作用是","answer":"A","a":"结束当前进程","b":"结束所有进程","c":"退出程序","d":"创建新的进程"},{"contentType":"单选题","content":"在Python中，下面哪个函数用来删除一个文件夹","answer":"B","a":"os.mkdir(\"test\")","b":"os.remove()","c":"os.exit()","d":"os.path.isdir()"},{"contentType":"单选题","content":"在Python中，判断给出的路径是否是一个文件应该使用的函数是","answer":"C","a":"os.chmod(file)","b":"os.path.isdir()","c":"os.path.isfile()","d":"os.mkdir(\"test\")"},{"contentType":"单选题","content":"在Python中，判断给出的路径是否是一个目录应该使用的函数是","answer":"B","a":"os.chmod(file)","b":"os.path.isdir()","c":"os.path.isfile()","d":"os.mkdir(\"test\")"},{"contentType":"单选题","content":"在Python中，文件读取必须先使用Python内置的什么函数打开一个文件，创建一个file对象","answer":"D","a":"read()","b":"write()","c":"make()","d":"open()"},{"contentType":"单选题","content":"在Python中，用于将Python对象编码成JSON字符串的方法是","answer":"A","a":"json.dumps()","b":"json.read()","c":"json.wirte()","d":"json.change()"},{"contentType":"单选题","content":"在Python中，用于将JSON字符串转换成Python对象的方法是","answer":"B","a":"json.dumps()","b":"json.loads()","c":"json.change()","d":"json.wirte()"},{"contentType":"单选题","content":"在Python中，Python的XML的解析方式中速度快、消耗内存少，像轻量级的DOM的是","answer":"D","a":"SAX","b":"DOM","c":"Ajax","d":"ElementTree"},{"contentType":"单选题","content":"在Python中，关于CSV文件特征说法错误的是","answer":"D","a":"纯文本","b":"由记录组成","c":"每条记录被分隔符分隔为字段","d":"是一种使用{}和[]组成的文件格式"},{"contentType":"单选题","content":"在Python中Excel解析，读写操作分别需要安装的模块是","answer":"B","a":"读使用xlwt模块，写使用xlrd模块","b":"写使用xlwt模块，读使用xlrd模块","c":"读使用read模块，写使用write模块","d":"读使用write模块，写使用read模块"},{"contentType":"单选题","content":"在Python中，Python程序使用自带的哪个模块操作目录","answer":"A","a":"OS模块","b":"IO模块","c":"file模块","d":"dir模块"},{"contentType":"单选题","content":"在Python中，以下JSON数据格式正确的是","answer":"C","a":"{[\"name\":\"json\", \"age\":10],[\"name\":\"html\", \"age\":15]}","b":"[{ \"name\":\"json\";\"age\":10};{\"name\":\"html\";\"age\":15}]","c":"[{ \"name\":\"json\", \"age\":10},{\"name\":\"html\", \"age\":15}]","d":"{[\"name\":\"json\";\"age\":10];[\"name\":\"html\"; \"age\":15]}"},{"contentType":"单选题","content":"在Python中，以下xml数据格式正确的是","answer":"D","a":"<student id=\"no1\"><name>Tom</student></name>","b":"<student><name>Tom</name></student id=\"no1\">","c":"<student id=\"no1\"><name id=\"no1\">Tom</student></name>","d":"<student id=\"no1\"><name>Tom</name></student>"},{"contentType":"单选题","content":"在Python中，利用SAX解析XML文档,说法错误的是","answer":"B","a":"包含解析器和事件处理器两个部分","b":"不需要先引入任何函数或模块","c":"要先引入xml.sax中的parse函数","d":"要先引入xml.sax.handler中的ContentHandler"},{"contentType":"单选题","content":"在Python中，SAX方式解析XML文档的步骤中，第一步是","answer":"A","a":"先定义一个类MovieHandler继承xml.sax.ContentHandler类。重写父类的三个函数。","b":"直接使用解析器对象parser中的parse()函数解析xml文档即可","c":"先使用解析器对象的setFeature()函数关闭命名空间","d":"先使用xml.sax.make_parser()函数创建一个新的解析器对象并返回"},{"contentType":"单选题","content":"在Python中，利用DOM方式解析XML文档,说法正确的是","answer":"B","a":"DOM方式将XML数据在内存中解析成为字符串","b":"DOM方式将XML数据在内存中解析成一棵树，通过对树的操作来操作XML。","c":"DOM方式将XML数据在内存中解析成为对象","d":"DOM方式将XML数据在内存中解析成为二进制数据"},{"contentType":"单选题","content":"在Python中，利用DOM方式解析XML文档,说法错误的是","answer":"C","a":"可以读取","b":"可以修改","c":"只能读取，不能修改","d":"使用xml.dom.minidom模块来解析xml文件"},{"contentType":"单选题","content":"在Python中，CSV文件典型的分隔符不包括","answer":"D","a":"逗号","b":"分号","c":"制表符","d":"换行"},{"contentType":"单选题","content":"在Python中，Python程序使用CSV模块reader（     ）函数读取CSV文件，关于其参数说法错误的是","answer":"A","a":"mode制定读取方式","b":"csvfile指支持迭代（Iterator）的对象","c":"dialect为可选参数，指编码风格","d":"fmtparam为可选参数，表示格式化参数"},{"contentType":"单选题","content":"在Python中，关于try-finally语句说法正确的是","answer":"B","a":"触发异常时执行finally中的代码","b":"无论是否异常都会执行finally中的代码","c":"触发异常时不执行finally中的代码","d":"必须使用finally语句处理异常"},{"contentType":"单选题","content":"在Python中，Python程序中关于异常说法错误的是","answer":"C","a":"异常会影响程序的正常执行","b":"异常是Python对象，表示一个错误","c":"不可以自己出发异常","d":"需要捕获处理它，否则程序会终止执行"},{"contentType":"单选题","content":"在Python程序中，使用什么语句来捕捉异常","answer":"A","a":"try/except","b":"try/catch","c":"try/watch","d":"try/get"},{"contentType":"单选题","content":"在Python程序中，关于异常捕捉说法正确的是","answer":"B","a":"except后面必须带异常类型","b":"except后面可以不带任何异常类型","c":"except后面带异常类型才能捕捉所有异常","d":"except后面不带任何异常类型也可以识别出具体的异常信息"},{"contentType":"单选题","content":"在Python中，Python程序中的异常分类说法错误的是","answer":"C","a":"Python程序中的异常通常包括自定义异常和系统内建的异常。","b":"系统内建的异常都在exceptions模块中，可以使用dir(exceptions)函数列出模块的内容。","c":"自定义异常需要创建一个新的异常类,无需直接或间接的继承任何类。","d":"自定义异常需要创建一个新的异常类,继承自Exception类"},{"contentType":"单选题","content":"在Python中，Python程序常见的异常描述不正确的是","answer":"D","a":"IOError输入/输出异常","b":"ImportError无法引入模块或者包","c":"IndexError下标索引超出序列边界","d":"AttributeError语句失败"},{"contentType":"单选题","content":"在Python中，Python程序NameError是指哪一类异常","answer":"A","a":"使用一个还未被赋予对象的变量","b":"Python代码非法，代码不能解释","c":"传入对象类型与要求的不符","d":"试图访问字典里不存在的键"},{"contentType":"单选题","content":"在Python中，Python程序IndentationError是指哪一类异常","answer":"B","a":"assert（断言）语句失败","b":"语法错误，代码没有正确对齐","c":"Ctrl+C被按下","d":"Python代码非法，代码不能解释"},{"contentType":"单选题","content":"在Python中，OS模块删除多个目录的函数是","answer":"C","a":"os.remove()","b":"os.makedirs()","c":"os.removedirs()","d":"os.mkdir()"},{"contentType":"多选题","content":"在Python中，open函数的参数有以下哪几个【选三项】","answer":"ABC","a":"file_name","b":"access_mode","c":"buffering","d":"check"},{"contentType":"单选题","content":"在Python中，下列不属于file对象的相关属性有","answer":"A","a":"file.getas","b":"file.mode","c":"file.name","d":"file.softspace"},{"contentType":"多选题","content":"在Python中，access_mode决定了打开文件的模式，以下模式可以进行文件读写的有【选两项】","answer":"BD","a":"r","b":"r+","c":"w","d":"w+"},{"contentType":"多选题","content":"在Python中，关于file对象的read（     ）函数说法正确的是【选两项】","answer":"BC","a":"可以不打开文件直接读取文件内容","b":"可以从打开的文件中读取一个字符串","c":"读取的字符串可以是二进制数据","d":"以上都正确"},{"contentType":"多选题","content":"在Python中，关于file对象的write（     ）函数说法正确的是【选两项】","answer":"AB","a":"可以写入字符串到打开的文件","b":"可以写入二进制数据到打开的文件","c":"可以不打开文件而直接写入","d":"不可以将二进制数据写入到文件"},{"contentType":"多选题","content":"在Python中，Python解析XML的方式有【选三项】","answer":"ABC","a":"SAX","b":"DOM","c":"ElementTree","d":"ajax"},{"contentType":"多选题","content":"在Python中，Python解析XML的方式中关于ElementTree说法正确的有【选三项】","answer":"ABD","a":"具有方便的API","b":"速度快，消耗内存少","c":"支持全部Xpath表达式","d":"支持部分Xpath表达式"},{"contentType":"单选题","content":"在Python中，Python中常见的异常不包括","answer":"A","a":"ClassNotFoundError","b":"IOError","c":"ImportError","d":"IndexError"},{"contentType":"单选题","content":"在Python中，Python标准数据库接口为（     ）？","answer":"B","a":"mysql-connector","b":"Python DB-API","c":"MySQLDb","d":"pymysql"},{"contentType":"单选题","content":"在Python中，pymysql中获取数据库连接的函数是哪个？","answer":"C","a":"connection()","b":"conn()","c":"connect()","d":"getConn()"},{"contentType":"单选题","content":"在Python中，pymysql中获取游标对象的方法是哪个？","answer":"D","a":"begin()","b":"commit()","c":"execute()","d":"cursor()"},{"contentType":"单选题","content":"在Python中，pymysql中数据库连接对象进行数据提交的方法是什么？","answer":"A","a":"commit()","b":"cursor()","c":"close()","d":"connect()"},{"contentType":"单选题","content":"在Python中，pymysql中批量添加需要调用什么方法？","answer":"B","a":"execute()","b":"executemany()","c":"addmany()","d":"manyexecute()"},{"contentType":"单选题","content":"在Python中，下面命令能够正确安装pymysql的是（     ）？","answer":"B","a":"install pymysql","b":"pip install pymysql","c":"pip  pymysql","d":"pip install mysql"},{"contentType":"单选题","content":"在Python中，一个事务是一个不可分割的工作单位，事务中包括的诸操作要么都做，要么都不做说的是事务的哪个特性？","answer":"D","a":"持久性","b":"隔离性","c":"一致性","d":"原子性"},{"contentType":"单选题","content":"在Python中，事务必须是使数据库从一个一致性状态变到另一个一致性状态说的是事务的哪个特性？","answer":"C","a":"持久性","b":"隔离性","c":"一致性","d":"原子性"},{"contentType":"单选题","content":"在Python中，一个事务的执行不能被其他事务干扰，并发执行的各个事务不互相干扰说的是事务的哪个特性？","answer":"B","a":"持久性","b":"隔离性","c":"一致性","d":"原子性"},{"contentType":"单选题","content":"在Python中，指一个事务一旦提交，它对数据库中数据的改变就应该是永久性的。接下来的其他操作或故障不应该对其有任何影响说的是事务的哪个特性？","answer":"A","a":"持久性","b":"隔离性","c":"一致性","d":"原子性"},{"contentType":"单选题","content":"在Python中，关于Python数据库接口说法正确的","answer":"B","a":"只需要下载一个DB API模块就可以访问不同的数据库","b":"支持常用的MySQL、Microsoft SQL Server、Oracle数据库","c":"不支持mSQL、 SQLite和Sybase数据库","d":"DB-API定义了一系列的对象和数据库存取方式。使用它连接各数据库后，必须用不同的方式操作各数据库。"},{"contentType":"单选题","content":"在Python中，Python DB-API使用流程（①引入API模块。②执行SQL语句和存储过程。③获取与数据库的连接。④关闭数据库连接)顺序正确的是","answer":"D","a":"①②③④","b":"①②④③","c":"①④②③","d":"①③②④"},{"contentType":"单选题","content":"在Python中，pymysql的安装说法错误的是?","answer":"D","a":"与其他第三方库的安装相同","b":"可以使用Pycharm工具安装","c":"可以使用命令行的方式进行安装","d":"需要独特的方式进行安装"},{"contentType":"单选题","content":"在Python中，使用命令安装pymysql的指令是?","answer":"C","a":"pip get pymysql","b":"pip list pymysql","c":"pip install pymysql","d":"pip uninstall pymysql"},{"contentType":"单选题","content":"在Python中，pymysql.connect（     ）方法不包含的参数是","answer":"A","a":"method=‘get’","b":"host='<数据库IP地址>'","c":"user='<用户名>'","d":"passwd='<密码>'"},{"contentType":"单选题","content":"在Python中，关于pymysql执行SQL语句的步骤说法错误的是","answer":"B","a":"execute()函数执行SQL语句，返回影响的行数","b":"使用完毕后要先关闭连接，在关闭游标","c":"不提交将无法保存新建或者修改的数据","d":"使用数据库连接对象中的cursor()函数获取游标对象"},{"contentType":"单选题","content":"在Python中，关于cursor.fetchmany(3)  语句说法正确的是","answer":"D","a":"随机获取3行数据","b":"获取所有结果中的前3行数据","c":"获取所有结果中后三行数据","d":"获取剩余结果的前3行数据"},{"contentType":"单选题","content":"在Python中，关于execute（     ）说法正确的是","answer":"C","a":"只能用来执行删、改语句","b":"不能用来一次插入多条记录","c":"可以用来执行插入语句","d":"只能用来执行增、改语句"},{"contentType":"单选题","content":"在Python中，关于对数据库操作进行封装的说法错误的是","answer":"D","a":"封装后不需要每次都编写打开数据库连接的代码","b":"可以重复使用封装的对象或方法","c":"使用with简化连接过程","d":"使用with必须显示的包含一个关闭的逻辑"},{"contentType":"单选题","content":"在Python中，关于关键字yield说法错误的是","answer":"B","a":"yield是生成的意思","b":"yield的作用于return完全相同","c":"yield返回的是一个生成器，主要可以迭代。","d":"yield是一个表达式，是有返回值的"},{"contentType":"单选题","content":"在Python中，contextlib可以加强with语句，关于contextlib说法正确的是","answer":"A","a":"它是通过Generator装饰器实现的","b":"它是通过__enter__()实现的","c":"它是通过__exit__()实现的","d":"contextlib中的contextmanager作为装饰器来提供一种针对对象级别的上下文管理机制。"},{"contentType":"单选题","content":"在Python中，（     ）语句隐藏了一个包含了关闭的逻辑，类似try…catch","answer":"B","a":"where","b":"with","c":"yield","d":"contextlib"},{"contentType":"单选题","content":"在Python中，下列不属于游标对象的方法的是？","answer":"C","a":"fetchone()","b":"execute()","c":"fetch()","d":"fetchall()"},{"contentType":"单选题","content":"在Python中，关于游标对象的execute（     ）方法的返回值，说法正确的是？","answer":"D","a":"返回结果集","b":"返回元组","c":"返回字典","d":"返回影响行数"},{"contentType":"多选题","content":"在Python中，Python DB API 2.0 的事务提供的方法有？【选两项】","answer":"AC","a":"commit()","b":"connect()","c":"rollback()","d":"close()"},{"contentType":"单选题","content":"在Python中，effect_row=cursor.executemany(\"insert into product(productname, price) values(%s,%s)\", [('mi6',2399),( 'meizu pro7',2999), ('vivo x9s',2499)])\nprint(effect_row)\n代码正确执行的结果是（     ）？","answer":"C","a":"0","b":"2","c":"1","d":"None"},{"contentType":"单选题","content":"在Python中，pymsql默认的游标对象执行fetchone（     ）函数，返回值类型是什么？","answer":"B","a":"列表类型","b":"元组类型","c":"字典类型","d":"字符串类型"},{"contentType":"单选题","content":"在Python中，下列不属于事务特性的是？","answer":"C","a":"原子性","b":"隔离性","c":"操作性","d":"持久性"},{"contentType":"多选题","content":"在Python中，下面支持Python对MySQL数据库操作的第三方库有哪些【选三项】","answer":"ABC","a":"pymysql","b":"mysql connector","c":"MySQLDb","d":"Python DB-API"},{"contentType":"多选题","content":"在Python中，下列方法中是pymysql中的游标对象的方法的有？【选三项】","answer":"ABD","a":"fetchone()","b":"fetchmany(size)","c":"fetch()","d":"fetchall()"},{"contentType":"单选题","content":"在Python中，pymysql连接数据库获取数据库连接时，端口号错误的堆栈信息是？","answer":"D","a":"Unknown database 'test'","b":"Access denied for user 'root'@'localhost' (using password: YES)","c":"NoneType' object has no attribute 'encoding'","d":"Can't connect to MySQL server on 'localhost' ([WinError 10061]"},{"contentType":"单选题","content":"在Python中，pymysql连接数据库获取数据库连接时，密码错误的堆栈信息是？","answer":"B","a":"Unknown database 'test'","b":"Access denied for user 'root'@'localhost' (using password: YES)","c":"NoneType' object has no attribute 'encoding'","d":"Can't connect to MySQL server on 'localhost' ([WinError 10061]"},{"contentType":"单选题","content":"在Python中，pymysql连接数据库获取数据库连接时，数据库名不正确的堆栈信息是？","answer":"A","a":"Unknown database 'test'","b":"Access denied for user 'root'@'localhost' (using password: YES)","c":"NoneType' object has no attribute 'encoding'","d":"Can't connect to MySQL server on 'localhost' ([WinError 10061]"},{"contentType":"单选题","content":"在Python中，使用pymysql的游标对象调用存储过程正确的是？","answer":"C","a":"cursor.callproc(p1)","b":"cursor.callproc('p1',22,33)","c":"cursor.callproc('p1',args=(22,3))","d":"cursor.callproc('p1',(22,3))"},{"contentType":"多选题","content":"在Python中，查询EMPLOYEE表中salary（工资）字段大于1000的所有数据的sql正确的是？【选两项】","answer":"AD","a":"sql = \"SELECT * FROM EMPLOYEE WHERE INCOME > %s\" % (1000)","b":"sql = \"SELECT * FROM EMPLOYEE WHERE INCOME > \",1000","c":"sql = \"SELECT * FROM EMPLOYEE WHERE INCOME > s%\",1000","d":"sql = \"SELECT * FROM EMPLOYEE WHERE INCOME > 1000\""},{"contentType":"单选题","content":"在Python中，下面代码输出结果是（     ）\ndef createGenerator（     ）:\n    for i in range(3): \n        yield i*i\n\ngenerator = createGenerator（     ） \nfor j in generator:\n    print(j,end=\" \")","answer":"B","a":"0","b":"0 1 4","c":"0 1 2 3","d":"0 1 2"},{"contentType":"单选题","content":"在Python中，假设数据库的地址127.0.0.1，用户名是root，密码是root，数据库是mydb，下面代码的输出结果是（     ）\nconn = pymysql.connect(host='127.0.0.1',\n        port=\"3306\", user='root', passwd='root', db='mydb', charset='utf-8')\nprint(conn)","answer":"A","a":"执行报错","b":"<pymysql.connections.Connection object at 0x000001BC360D3F88>","c":"None","d":"Null"},{"contentType":"多选题","content":"在Python中，pymysql连接数据库进行封装的好处是？【选三项】","answer":"ABD","a":"减少代码量","b":"提高可维护性","c":"可以减少代码错误","d":"安全"},{"contentType":"多选题","content":"在Python中，使用Flask框架模板有哪些好处？（     ）【选三项】","answer":"ABC","a":"视图函数只负责业务逻辑和数据处理","b":"模板可以获取视图函数的数据结构进行展示","c":"代码结构清晰，耦合度低","d":"代码结构清晰，耦合度高"},{"contentType":"单选题","content":"下列不属于Python中Flask框架特点的是？","answer":"D","a":"内置开发服务器和调试器","b":"与Python单元测试功能无缝衔接","c":"使用Jinja2模板","d":"端口号固定为5000，且无法修改"},{"contentType":"多选题","content":"在Python中，Python网络框架可以省去开发者处理网络应用底层的（     ）【选三项】","answer":"ABD","a":"协议","b":"线程","c":"逻辑","d":"进程"},{"contentType":"单选题","content":"在Python中，Flask内部自带的WSGI服务器的默认端口是？（     ）","answer":"D","a":"80","b":"21","c":"8000","d":"5000"},{"contentType":"单选题","content":"在Python中，使用Flask创建模板是，要保证项目下有（     ）文件夹","answer":"C","a":"sources","b":"contents","c":"templates","d":"scripts"},{"contentType":"单选题","content":"在Python中，在使用Flask框架的静态路由时，可以使用（     ）方法，注册不同的路由？","answer":"C","a":"cursor()","b":"run()","c":"route()","d":"以上都不正确"},{"contentType":"单选题","content":"在Python中，下列不属于Tornado特点的是？","answer":"B","a":"完备的Web框架","b":"图片自动识别技术","c":"提供高效HTTPClient","d":"提供高效的内部HTTP服务器"},{"contentType":"单选题","content":"在Python中，网络框架Django是（     ）","answer":"B","a":"支持快速建站的框架","b":"企业级开发框架","c":"高并发处理框架","d":"以上全都不是"}]