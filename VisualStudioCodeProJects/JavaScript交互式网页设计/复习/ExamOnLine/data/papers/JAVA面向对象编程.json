[{"contentType":"单选题","content":"在JAVA中，类和对象之间关系是（     ）","answer":"C","a":"联接关系","b":"包含关系","c":"抽象与具体的关系","d":"类是对象的具体化","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在JAVA中，类是具有相同（     ）的集合，是对对象的抽象描述","answer":"A","a":"属性和方法","b":"变量和方法","c":"变量和数据","d":"对象和属性","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在JAVA中，下列类声明正确的是（     ）","answer":"D","a":"public void H1｛…｝","b":"public class Move()｛…｝","c":"public class void number{…}","d":"public class Car｛…｝","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在JAVA中，定义类的头部时，不可能用到的关键字是（     ）","answer":"B","a":"class","b":"void","c":"extends","d":"public","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在JAVA中，关于方法功能描述错误的是（     ）","answer":"D","a":"使程序结构清晰","b":"实现代码模块化重用","c":"方法是类功能的封装","d":"重复代码","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在JAVA中，关于方法形参描述正确的是（     ）","answer":"A","a":"可以没有形参","b":"至少有一个形参","c":"必须定义多个形参","d":"形参只能是基本变量类型","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在JAVA中，在定义方法时在最后一个形参的类型后增加“...”，相关描述错误（     ）","answer":"C","a":"可变参数接受的对象是一个数组","b":"“...”表示可变参数","c":"“...”表示省略号","d":"“...”只能出现在参数列表的最后","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在JAVA中，利用方法中的（     ）语句可为调用方法返回一个值","answer":"A","a":"return","b":"back","c":"end","d":"以上答案都不对","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"多选题","content":"在JAVA中，以下关于return语句使用描述错误的有（     ）【选三项】","answer":"ABC","a":"不能用来返回对象","b":"只可以返回数值","c":"方法中都必须包含return语句","d":"一个方法可以有多个return语句","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在JAVA中，void的含义描述正确的是（     ）","answer":"C","a":"方法体为空","b":"方法体没有意义","c":"方法没有返回值","d":"定义方法时必须使用","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在JAVA中，main（     ）方法的返回类型是（     ）","answer":"B","a":"boolean","b":"void","c":"int","d":"static","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在JAVA中，以下方法声明正确的是（     ）","answer":"C","a":"public class methodName(){…}","b":"public void int methodName(){…}","c":"public void methodName(){…}","d":"public methodName{…}","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在JAVA中，下列方法定义不正确的是（     ）","answer":"C","a":"float x(int a,int b){return a-b;}","b":"int x(int a,int b){return a-b;}","c":"int x(double a,int b){return a*b;}","d":"double x(double a,int b){return a*b;}","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"多选题","content":"在JAVA中，以下关于构造方法特点理解正确的选项有（     ）【选三项】","answer":"ABC","a":"构造方法主要用于对象创建时初始化对象","b":"构造方法没有返回值，也不能用void来修饰","c":"构造方法的命名必须和类名完全相同","d":"一个Java类只能有一个构造方法","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在JAVA中，下面关于构造方法描述不正确的是（     ）","answer":"B","a":"当无其他构造方法时，系统提供默认的构造方法","b":"同一个类的多个构造方法的名称可以不同","c":"构造方法可以重载","d":"构造方法可以设置参数","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在JAVA中，存在类A，以下构造方法的声明，其中正确的是（     ）","answer":"B","a":"void A(int x){…}","b":"public A(int x){…}","c":"public a(int x){…}","d":"static A(int x){…}","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在JAVA中，double i，double j为类X中成员，以下X类的声明的构造方法中不正确的是（     ）","answer":"A","a":"double X(double k){i=k;return i;}","b":"X(){i=6;j=8;}","c":"X(double m,double n){i=m;j=n;}","d":"X(double k){i=k;}","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在JAVA中，对于任意一个类，用户所能定义的构造方法的个数至多为（     ）","answer":"D","a":"0个","b":"1个","c":"2个","d":"任意个","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在JAVA中，构造方法何时被调用（     ）","answer":"B","a":"类定义时","b":"创建对象时","c":"调用对象方法时","d":"使用对象的变量时","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在JAVA中，以下（     ）是专门用于创建对象的关键字","answer":"A","a":"new","b":"double","c":"int","d":"class","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在JAVA中，方法调用时，位于方法名之后圆括号的变量被称为（     ）","answer":"B","a":"变元","b":"参数","c":"语句","d":"声明","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在JAVA中，关于面向对象的说法正确的是（     ）","answer":"A","a":"类可以让我们用程序模拟现实世界中的实体","b":"有多少个实体就要创建多少个类","c":"对象的行为和属性被封装在类中，外界通过调用类的方法来获得，但是要知道类的内部是如何实现","d":"现实世界中的某些实体不能用类来描述","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"多选题","content":"在JAVA中，一条return语句将给调用程序返回（     ）个值【选两项】","answer":"AB","a":"0","b":"1","c":"2","d":"任意","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"多选题","content":"在JAVA中，下列关于成员变量描述正确的有（     ）【选三项】","answer":"ACD","a":"成员变量定义在类中，但在所有方法之外","b":"成员变量只能类的内部访问","c":"随着对象的创建而存在，随着对象的消失而消失","d":"对象初始化后成员变量没赋值会有默认的初始值","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，变量可以分为全局变量和（     ）变量","answer":"C","a":"静态","b":"实列","c":"局部","d":"普通","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"多选题","content":"在JAVA中，下列关于局部变量描述正确的有（     ）【选三项】","answer":"ACD","a":"局部变量在代码块中，或者方法的声明上","b":"局部变量可以在多个方法中访问","c":"随着方法的调用执行完代码块后局部变量会消失","d":"局部变量使用前需要赋值","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在JAVA中，下列关于成员变量与局部变量的说法不正确的是（     ）","answer":"D","a":"局部变量的作用域仅限于定义它的方法","b":"成员变量的作用域在整个类内部都是可见的","c":"创建对象时Java会给成员变量一个初始值","d":"创建对象时Java会给局部变量赋予初始值","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在JAVA中，关于this关键字描述正确的是（     ）","answer":"A","a":"this代表类自身对象的引用","b":"this不能在构造方法中使用","c":"this不能在普通方法中使用","d":"this可以在静态方法中使用","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在JAVA中，关于super关键字的说法正确的是（     ）","answer":"A","a":"super关键字是在子类对象内部指代其父类对象的引用","b":"super关键字不仅可以指代子类的直接父类，还可以指代父类的父类","c":"子类通过super关键字只能调用父类的方法，而不能调用父类的属性","d":"子类通过super关键字只能调用父类的属性，而不能调用父类的方法","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在JAVA中，下列不属于Java的访问修饰符的是（     ）","answer":"C","a":"private","b":"public","c":"friendly","d":"protected","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在JAVA中，定义抽象类的关键字是（     ）","answer":"C","a":"static","b":"final","c":"abstract","d":"interface","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在JAVA中，关于抽象类，下列说法错误的是（     ）","answer":"C","a":"抽象类中可以存在普通方法和抽象方法","b":"抽象类中可以存在属性","c":"抽象类中可以实例化","d":"一个非抽象类继承抽象类必须实现抽象类中的所有抽象方法","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在JAVA中，关于访问修饰符访问权限由小到大描述正确的是（     ）","answer":"C","a":"private->protected->default->public","b":"private->protected->public->public","c":"private->default->protected->public","d":"default->private->protected->public","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，下列关于static关键字的使用描述错误的是（     ）","answer":"B","a":"static可以用来修饰类的成员方法","b":"static不可以用来修饰类的成员变量","c":"static不能修饰局部变量","d":"静态方法都可以通过类名直接访问","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"多选题","content":"在JAVA中，下列关于静态代码块的描述中，正确的是（     ）【选三项】","answer":"ABC","a":"静态代码块指的是被static关键字修饰的代码块","b":"静态代码块随着类的加载而加载","c":"使用静态代码块可以实现类的初始化","d":"每次创建对象时，类中的静态代码块都会被执行一次","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在JAVA中，类的（     ）成员只能被该类的成员访问，而不能被非该类的成员访问","answer":"B","a":"public","b":"private","c":"protected","d":"abstract","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在JAVA中，下列关于封装的说法错误的是（     ）","answer":"D","a":"封装可以将属性私有化，提供公有的方法访问私有属性","b":"属性的访问方法包括setter方法和getter方法","c":"setter方法用于赋值、getter方法用于取值","d":"类的属性必须进行封装，否则无法通过编译","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"多选题","content":"在Java中，关于包以下描述正确的是（     ）【选两项】","answer":"BC","a":"要使用System 类必须import java.lang.System","b":"要使用System 类不需要import java.lang.System","c":"要使用Scanner类必须import java.util.Scanner","d":"要使用Scanner类不需要import java.util.Scanner","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，关于包的导入的关键字是（     ）","answer":"A","a":"import","b":"class","c":"implements","d":"extends","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中,下列关于继承说法错误的是（     ）","answer":"D","a":"继承可以描述类与类之间的关系","b":"继承实现了代码的重用","c":"具有继承关系的子类和父类层次结构更加清晰","d":"子类中可以重写父类中的所有方法","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，以下关于继承的说法错误的是（     ）","answer":"D","a":"继承可以描述类与类之间的关系","b":"继承实现了代码的重用","c":"具有继承关系的子类和父类层次结构更加清晰","d":"子类中可以重写父类中的所有方法","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，如果类C是类B的子类，类B是类A的子类，以下描述正确的是（     ）","answer":"A","a":"C可以继承了B中的成员，同样也可以继承了A中的成员","b":"C只继承了B中的成员","c":"C只继承了A中的成员","d":"C不能继承A或B中的成员","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"多选题","content":"在Java 中，下列关于类的继承的实现描述，正确的有（     ）【选两项】","answer":"BC","a":"一个类可以继承多个父类","b":"一个类可以具有多个子类","c":"子类除了可以继承来自于父类方法，还可以定义自己的方法","d":"以上描述都不正确","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，实现继承所使用的关键字是（     ）","answer":"C","a":"implements","b":"import","c":"extends","d":"abstract","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，以下关于方法重载的描述正确的是（     ）","answer":"A","a":"重载的各方法必须方法名称相同","b":"重载的各方法必须参数数量不同","c":"重载的各方法必须参数类型不同","d":"重载的各方法必须有相同的返回值","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，以下关于方法重写的描述正确的是（     ）","answer":"C","a":"重写方法的方法名可以不同","b":"重写方法的参数可以不同","c":"重写方法的访问修饰符可以不同","d":"重写方法的返回值可以不同","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，以下关于方法重载和方法重写描述正确的是（     ）","answer":"D","a":"方法重载和方法的重写实现的功能相同","b":"方法重载出现在父子关系中，方法重写是在同一类中","c":"方法重载的返回值类型必须一致，参数项必须不同","d":"方法重写的返回值类型必须相同","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，假设类A是类B的父类，下列声明对象x的语句中不正确的是（     ）","answer":"D","a":"A x=new A()","b":"A x=new B()","c":"B x=new B();","d":"B x=new A();","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"多选题","content":"在Java中，面向对象的三大特性为（     ）【选三项】","answer":"ABC","a":"封装","b":"继承","c":"多态","d":"抽象","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，以下关于abstract关键字说法正确的是（     ）","answer":"D","a":"abstract只能修饰类","b":"abstract只能修饰方法","c":"抽象类中必须有abstract方法","d":"abstract方法所在的类一定是抽象类","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，以下关于抽象类与抽象方法描述错误的是（     ）","answer":"B","a":"抽象类不能被实例化","b":"抽象类不能被继承","c":"抽象方法不能与final、private和static复合使用","d":"抽象方法可以与public、protected复合使用","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"多选题","content":"在Java中，以下关于final关键字的使用描述正确的有（     ）【选两项】","answer":"BC","a":"final关键字可以用于修饰类，则该类只能被一个子类继承","b":"final关键字可以用于修饰变量，该变量的值无法修改","c":"final关键字可以用于修饰方法，则该方法不能在子类中重写","d":"final关键字可以用于修饰方法，则该方法所在的类不能被继承","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在JAVA中，以下关于被final修饰的对象，说法错误的是（     ）","answer":"D","a":"final修饰的成员变量一旦赋初始值就不能被改变","b":"final修饰的类不能被继承","c":"final修饰的方法可以被继承","d":"final修饰的方法可以被重写","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，定义接口的关键字是（     ）","answer":"B","a":"class","b":"interface","c":"method","d":"object","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"多选题","content":"在Java中，以下关于接口对象的说法中正确的是（     ）【选两项】","answer":"AB","a":"接口对象只能等于实现该接口的类的对象","b":"接口只能被类实现，不能用来声明对象","c":"接口对象可以通过当前接口用关键词new创建","d":"接口对象可以等于任何类的对象","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，下列关于接口的说法不正确的是（     ）","answer":"C","a":"接口中只能定义公有的、静态的常量","b":"接口中的方法只能是公有的抽象方法","c":"用于定义接口的关键字是implements","d":"接口只能继承多个接口，接口不能继承类，也不能实现其他接口","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，实现接口的关键字是（     ）","answer":"C","a":"extends","b":"interface","c":"implements","d":"import","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，以下可以用来修饰interface的是（     ）","answer":"B","a":"private","b":"public","c":"protected","d":"static","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，以下关于抽象类与接口描述错误的是 （     ）","answer":"D","a":"一个类只能继承一个抽象类，但是可以实现多个接口","b":"在抽象类中可以没有抽象方法","c":"接口中只能包含抽象方法，而抽象类则可以包含普通方法","d":"抽象类只能被其他类继承，不可以实现接口","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，关于抽象类和接口的使用以下说法错误的是（     ）","answer":"C","a":"抽象类不能被实例化","b":"实现接口的关键字implements","c":"如果一个类实现了接口的所有方法，则该类一定是抽像类","d":"接口不可以实例化对象","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，关于面向接口编程的描述错误的是（     ）","answer":"D","a":"降低程序的耦合性","b":"易于系统的扩展","c":"易于系统的维护","d":"以上描述均不正确","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，以下代码执行的结果是（     ）\npublic class Demo {\n\tpublic int add(int a,int b){\n\t\ttry{\n\t\t\treturn a+b;\n\t\t}catch(Exception e){\n\t\t\tSystem.out.println(\"catch语句块\");\n\t\t}finally{\n\t\t\tSystem.out.println(\"finally语句块\");\n\t\t}\n  \t\treturn 0;\n\t}\n\tpublic static void main(String args[]){\n\t\tDemo demo = new Demo（     ）;\n\t\tSystem.out.println(\"和是:\\t\"+demo.add(9,34));\n\t}\n}","answer":"B","a":"和是:43","b":"finally语句块\n和是:43\n","c":"和是:43\nfinally语句块\n","d":"catch语句块\nfinally语句块\n和是:43","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，所有错误和异常的父类是（     ）","answer":"A","a":"Throwable类","b":"Error类","c":"Exception类","d":"ThrowableError","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，以下（     ）是表示空指针异常","answer":"B","a":"java.lang.ClassNotFoundException","b":"java.lang.NullPointerException","c":"java.lang.NumberFormatException","d":"java.lang.IndexOutOfBoundsException","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，以下（     ）是表示数学运算异常","answer":"D","a":"java.lang.ClassCastException","b":"java.lang.FileNotFoundException","c":"java.lang.NoSuchMethodException","d":"java.lang.ArithmeticException","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，java.lang.NoClassDefFoundException是（     ）异常","answer":"B","a":"内存不足错误","b":"未找到类定义错误","c":"实例化异常","d":"文件未找到异常","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，给定如下所示的Java代码，则运行时，会产生（     ）类型的异常\nString s = null;\ns.concat(\"abc\");","answer":"B","a":"ArithmeticException","b":"NullPointerException","c":"IOException","d":"ClassNotFoundException","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，IndexOutOfBoundsException是（     ）异常","answer":"A","a":"数组索引越界异常","b":"对象转换异常","c":"操作错误异常","d":"实例化异常","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，能单独和finally语句一起使用的块是（     ）","answer":"A","a":"try","b":"catch","c":"throw","d":"throws","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，关于异常处理的描述错误的是（     ）","answer":"B","a":"Java的异常处理机制可以保障程序具有良好的容错性，使程序健壮性更高","b":"异常处理使程序具有更高的执行效率","c":"在Java中可以使用“try-catch”语句处理异常","d":"方法声明时可以使用throws关键字声明抛出异常","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，以下关于使用try-catch-finally处理异常描述错误的是（     ）","answer":"D","a":"try-catch捕获异常可以使用finally回收资源","b":"try语句不能独立存在，其后至少要有一个catch语句块或finally语句块","c":"finally语句块不是必须存在的，可以根据需求决定是否添加","d":"如果try代码块没有出现异常，finally语句块不会被执行","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，（     ）是所有类的父类","answer":"A","a":"Object","b":"Vector","c":"String","d":"KeyEvent","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"多选题","content":"在Java中，关于object类，以下描述中正确的有（     ）【选三项】","answer":"ABD","a":"object类中定义了一些重要的成员函数和变量，以方便JAVA类的使用","b":"object类是所有其他JAVA类的直接或间接父类","c":"如果一个类已经有了父类，那么这个类同时继承了object类，也就是说，这时候这个类实际上有2个父类","d":"由于JAVA中的类是单继承的，因此所有的类以object类为根形成了一棵继承树","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，下列（     ）方法不属于Object类的方法","answer":"D","a":"equals(Object obj)","b":"getClass()","c":"toString()","d":"trim()","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在JAVA中，Object类的（     ）方法判断指定对象与该对象是否相等","answer":"A","a":"equals","b":"hashCode","c":"toString","d":"getClass","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，关于java.lang.String类，以下描述正确的是（     ）","answer":"C","a":"String类不是final类故可以继承","b":"String类不是final类故不可继承","c":"String类是final类故不可继承","d":"String类final类故可以继承","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"多选题","content":"在Java中，以下关于String对象说法不正确的有（     ）【选两项】","answer":"BD","a":"String是引用数据类型","b":"代码String　s=\"123\";s=s+\"4\";出现编译出错","c":"String中的equals方法用于比较两个字符串的内容是否相同","d":"String  a=null，a.length()等于0","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，以下不属于String类的方法的是（     ）","answer":"C","a":"equals(String)","b":"trim()","c":"append()","d":"indexOf()","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，若字符串str=\"abcde\"，则str.charAt(3)的返回值是（     ）","answer":"D","a":"\"abc\"","b":"\"abcd\"","c":"‘c’","d":"‘d’","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，关于String类的concat（     ）方法描述正确的是（     ）","answer":"D","a":"concat()方法的返回值是一个boolean值","b":"concat()方法的返回值是一个int值","c":"concat()方法是用于判断两个字符串的值是否相等","d":"concat()方法是用于将一个字符串与指定字符串进行连接返回一个新的字符串","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在JAVA中，关于String类的equals方法描述错误的是（     ）","answer":"B","a":"String类的equals方法用于判断两个字符串的值是否相等","b":"String类的equals方法的返回值为一个String","c":"String类的equals方法的返回值是一个boolean","d":"String类的equals方法重写了Object的equals方法","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，String类的indexOf（     ）方法的返回值类型是（     ）","answer":"A","a":"int","b":"double","c":"float","d":"boolean","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"多选题","content":"在JAVA中，以下创建字符串数组正确的有（     ）【选两项】","answer":"BD","a":"String temp[] = new String{“a”,”b”,”c”};","b":"String temp[] = new String[]{“a”,”b”,”c”};","c":"String temp= {“a”,”b”,”c”};","d":"String[] temp = {“a”,”b”,”c”};","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"多选题","content":"在Java中，关于以下代码说法正确的有（     ）\nString[] s=new String[10];【选两项】","answer":"BD","a":"s[10]为” ”","b":"s[9]为null","c":"s[0]为未定义","d":"s.length为10","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，可通过字符串对象的（     ）方法，将String对象转换成byte数组","answer":"A","a":"getBytes()","b":"indexOf(String str)","c":"length()","d":"endsWith(String sufffix)","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在JAVA中，关于String类的equals与==描述错误的是（     ）","answer":"C","a":"==比较的是两个对象的内存地址是否相同","b":"String类重写了Object类的equals()方法","c":"由于Object类的equals()方法比较的是两个对象的内存地址是否相同，所以String类的equals()方法也是这样","d":"String类的equals方法比较的是两个字符串对象的内容是否相同","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，下列关于字符串的描叙中错误的是（     ）","answer":"B","a":"字符串本身就是一个对象","b":"String对象存储字符串的效率比StringBuffer高","c":"不可以使用StringBuffer sb=\"这里是字符串\"的方式声明并初始化StringBuffer对象sb","d":"String类提供了许多用来操作字符串的方法:连接，提取，查询等","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，关于String的用法，下列选项不正确的是（     ）","answer":"C","a":"indexOf用于查找子字符串在原始字符串中首次出现的位置","b":"charAt用于获取指定位置上的字符","c":"String  s=\"mstanford\";s.subString（1,3）的结果是sta","d":"equals方法用于比较两个字符内容是否相同，区分大小写","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，（     ）类用于算术运算操作","answer":"D","a":"Scanner","b":"Object","c":"String","d":"Math","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，Math.max(10, 8)的返回值为（     ）","answer":"B","a":"8","b":"10","c":"18","d":"2","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，Math.cbrt(27)的返回值为（     ）","answer":"A","a":"3","b":"9","c":"0","d":"27","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在JAVA中，Math.sqrt(49)的返回值为（     ）","answer":"C","a":"3","b":"50","c":"7","d":"40","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在JAVA中，Math.abs(-4.5)的返回值为（     ）","answer":"A","a":"4.5","b":"-4.5","c":"0","d":"9","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，下列选项关于Math类的说法正确的是（     ）","answer":"D","a":"Math类位于Java.util包中","b":"使用abs()方法必须先定义new Math()","c":"random()方法产生0～1之间的随机数，其中包括0和1","d":"Math类不能被实例化","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，Math.round(5.5)的返回值为（     ）","answer":"D","a":"-5.5","b":"5.5","c":"5","d":"6","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，关于Math.random（     ）描述正确的是（     ）","answer":"A","a":"返回一个0.0～1.0之间的随机数","b":"返回一个整型随机数","c":"返回一个0～100的整型随机数","d":"以上描述都不正确","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，下列选项说法正确的是（     ）","answer":"B","a":"Date类用于创建一个日期对象，但不能获取系统当前时间。","b":"SimpleDateFormat位于java.text包中","c":"SimpleDateFormat的format方法用于将字符串转换成Date对象","d":"创建一个日历对象的语法：new Calendar（）","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，下列关于Date类的描述错误的是（     ）","answer":"A","a":"在java.text包中提供了一个Date类用于表示日期和时间","b":"无参的构造方法Date() ,用来创建当前日期时间的Date对象","c":"Date类中很多方法已过时，被Calendar类中相关方法所替换","d":"构造方法Date(long date)根据指定long类型整数生成一个Date对象","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在JAVA中，下列关于Calendar类的描述错误的是（     ）","answer":"A","a":"Calendar可以通过构造方法实例化Calendar对象","b":"Calendar.getInstance()方法可以创建Calendar的子类对象处理日期和时间","c":"getTime()方法可以从Calendar对象中获取Date对象","d":"setTime(Date date)可以通过Date对象获得对应的Calendar对象","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，下列有关SimpleDateFormat类的对象使用说法错误的是（     ）","answer":"D","a":"日期格式化标记y代表年","b":"日期格式化标记M代表年份中的月","c":"日期格式化标记d代表月份中的天","d":"日期格式化标记m代表分钟中的秒数","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，下列有关集合体系描述不正确的是（     ）","answer":"B","a":"Java集合类主要由两个接口派生而出，即Collection和Map接口","b":"Collection和Map接口都是以键值对的形式存放数据","c":"Collection和Map是Java集合框架的最上层的父接口，这两个接口又包含其他的子接口和实现类","d":"Java集合主要包括三种类型：Set、List、Map","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，以下（     ）集合继承自Collection接口","answer":"C","a":"List与Map","b":"Set与Map","c":"List与Set","d":"List、Map与Set","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"多选题","content":"在Java中，下列有关集合与数组的描述正确的有（     ）【选三项】","answer":"ABC","a":"数组既可以存储基本数据类型又可以存储引用数据类型，集合只能存储引用数据类型","b":"数组长度是固定的，而集合的长度是可变的，可以根据元素的增加而增长","c":"如果元素个数是固定的推荐用数组，如果元素个数不是固定的推荐用集合","d":"集合与数组都具有下标索引","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，以下不属于List集合的是（     ）","answer":"B","a":"ArrayList","b":"HashSet","c":"LinkedList","d":"Vector","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，关于集合类Arraylist，以下说法正确的是（     ）","answer":"D","a":"这个集合元素的无序的","b":"可以通过键来获取这个集合的值","c":"可以通过addFirst()方法,在列表的首部插入元素","d":"在对这个集合的元素执行遍历操作时,效率比较高","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，（     ）接口位于集合框架的顶层。","answer":"B","a":"Map","b":"Collection","c":"Set","d":"List","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，已知获得了ArrayList类的对象 bookTypeList，则下列语句中能够实现判断列表中是否存在字符串“小说”的是（     ）","answer":"C","a":"bookTypeList.add(\"小说\");","b":"bookTypeList.get(\"小说\");","c":"bookTypeList.contains(\"小说\");","d":"bookTypeList.remove(\"小说\");","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"多选题","content":"在Java中，下面关于ArrayList和LinkedList在存储结构说法正确的有（     ）【选两项】","answer":"AD","a":"LinkedList链表结构","b":"LinkedList是基于数组结构","c":"ArrayList链表结构","d":"ArrayList 是基于数组结构","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，在ArrayList集合包含多个\"张三\"的字符串，调用remove(\"张三\")后，对该集合描述正确的是（     ）","answer":"A","a":"仅删除第一个符合条件的元素","b":"所有\"张三\"都会被删除","c":"删除集合第一个添加的元素","d":"删除集合最后一个添加的元素","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，以下关于ArrayList集合与LinkedList集合之间区别的描述错误的是（     ）","answer":"D","a":"ArrayList是基于数组结构的集合","b":"ArrayList一般通过下标访问集合中的元素","c":"LinkedList采用链表存储方式","d":"LinkedList遍历和随机访问元素的效率比较高","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，以下（     ）不属于LinkedList类的方法","answer":"A","a":"length()","b":"void addFirst(Object o)","c":"addLast(Object o)","d":"Object removeLast()","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，向HashSet集合添加元素所调用的方法是（     ）","answer":"B","a":"clear()","b":"add()","c":"remove()","d":"addAll()","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，从HashSet集合删除指定元素调用的方法是（     ）","answer":"A","a":"remove()","b":"addAll()","c":"add()","d":"clear()","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，将1,2,3,4,2,2,5,6这些数字添加至HashSet集合，可能出现的情况是（     ）","answer":"B","a":"=\"1","b":2,"c":3,"d":4,"__EMPTY":"=\"1","__EMPTY_1":2,"__EMPTY_2":3,"__EMPTY_3":4,"__EMPTY_4":5,"__EMPTY_5":"6\"","__EMPTY_6":"=\"2","__EMPTY_7":1,"__EMPTY_8":4,"__EMPTY_9":3,"__EMPTY_10":6,"__EMPTY_11":5,"__EMPTY_12":2,"__EMPTY_13":"2\"","__EMPTY_14":"=\"1","__EMPTY_15":2,"__EMPTY_16":3,"__EMPTY_17":4,"__EMPTY_18":2,"__EMPTY_19":2,"__EMPTY_20":5,"__EMPTY_21":"6\""},{"contentType":"单选题","content":"在Java中，关于HashSet集合的特点，以下选项描述错误的是（     ）","answer":"C","a":"HashSet不允许插入相同元素的对象","b":"不能保证元素的排列顺序，顺序有可能发生变化","c":"集合元素值不可以是null","d":"HashSet不是同步的，如果多个线程同时访问一个HashSet，则必须通过代码保证其同步","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，以下不属于Set集合的是（     ）","answer":"B","a":"HashSet","b":"Vector","c":"TreeSet","d":"LinkedHashSet","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，对 collection进行迭代的迭代器是（     ）","answer":"B","a":"java.text.Iterators","b":"java.util.Iterator","c":"java.text.Enumeration","d":"java.text.Iterator","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，以下关于Iterator迭代器描述错误的是（     ）","answer":"A","a":"可以使用new Iterator()创建Iterator对象","b":"Iterator.hasNext(Object o)方法，如果被迭代的集合中的元素没有遍历完成，则返回true","c":"Iterator.next()方法，返回集合中的下一个元素","d":"Iterator.remove()方法，将迭代器新返回的元素删除","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，以下对HashSet和ArrayList描述正确的是（     ）。","answer":"D","a":"ArrayList集合中的元素是无序的","b":"ArrayList不允许有重复元素","c":"HashSet集合中的元素是有序的","d":"HashSet不允许有重复元素","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，LinkedList类和ArrayList类同属于集合框架类，下列选项的方法属于LinkedList类而不属于ArrayList类的是（     ）","answer":"D","a":"add(Object o)","b":"add(int index，Object o)","c":"remove(Object o)","d":"removeLast()","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，以下实现了Map接口的类的是（     ）","answer":"B","a":"Set","b":"HashMap","c":"List","d":"Hashtable","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，以下（     ）类的对象以键-值的方式存储对象","answer":"C","a":"java.util.List","b":"java.util.ArrayList","c":"java.util.HashMap","d":"java.util.LinkedList","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，以下正确的创建Map集合的方式是（     ）","answer":"D","a":"Map m=new Map();","b":"Map m=new Map(init capacity, increment capacity);","c":"Map m=new HashSet();","d":"Map m=new HashMap();","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，Map集合可存储键-值对数据，其put（     ）方法参数是（     ）","answer":"C","a":"put(value,key)","b":"put(key,key)","c":"put(key,value)","d":"put(key,key)","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，Map集合可存储键-值对数据，其get（     ）方法参数是（     ）","answer":"C","a":"get(id)","b":"get(value)","c":"get(key)","d":"get(index)","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，HashMap集合移除所有映射关系的方法是（     ）","answer":"D","a":"get()","b":"put()","c":"remove()","d":"clear()","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，Map集合的添加数据时，若所添加的数据对应key值在集合中已存在，此时，value将（     ）","answer":"A","a":"覆盖","b":"添加","c":"执行报错","d":"什么都没有发生","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，若要获得Map集合所有的value值，应使用（     ）方法","answer":"D","a":"put()","b":"getAll()","c":"keyset()","d":"values()","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"多选题","content":"在Java中，关于HashMap类的描述，以下说法正确的有（     ）【选三项】","answer":"ACD","a":"HashMap使用键/值的形式保存数据","b":"HashMap能够保证其中元素的顺序","c":"HashMap允许将null用作键","d":"HashMap允许将null用作值","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，下列不是List集合的遍历方式 （     ）","answer":"D","a":"Iterator迭代器实现 ","b":"for in循环实现","c":"get()和size()方法结合实现  ","d":"get()和length()方法结合实现","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，集合类包括ArrayList、LinkedList、HashMap等，下列关于集合类描述错误的是（     ）","answer":"C","a":"ArrayList和LinkedList均实现了List接口","b":"ArrayList的访问速度比LinkedList快","c":"添加和删除元素时，ArrayList的表现更佳","d":"HashMap实现Map接口，它允许任何类型的键和值对象，并允许将null用作键或值","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，关于内部类描述错误的是（     ）","answer":"C","a":"内部类提供了更好的封装，可以将内部类隐藏在外部类内","b":"内部类成员可以直接访问外部类的私有数据","c":"外部类能访问内部类的实现细节，如内部类的成员变量","d":"匿名内部类适用于创建仅需要一次使用的类","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，以下对泛型描述错误的是（     ）\n","answer":"D","a":"泛型可以解决数据安全性问题","b":"泛型是指建立对象时不指定类中属性的具体类型，而是在声明及实例化对象时由外部指定类型\t","c":"泛型定义包括泛型类定义和泛型对象定义两部分","d":" 以上说法都不正确","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，使用catch(Exception e)进行异常处理的好处是（     ）","answer":"B","a":"只会捕获个别类型的异常","b":"捕获try块中产生的所有类型的异常","c":"忽略一些异常","d":"执行一些程序","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，以下方法中声明能够被加入到Child类中，并编译正确的是（     ）\npublic class Parent {\n　　public int addValue( int a, int b) { return a+b; }\n}\nclass Child extends Parent {\n}\n","answer":"B","a":"int addValue( int a, int b ){// do something...}","b":"public void addValue ()  {// do something...}","c":"public void addValue( int b, int a ){// do something...}","d":"public int addValue( int a, int b )throws Exception {\n      // do something...\n}\n","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，以下关于非静态内部类的方法描述正确的是（     ）","answer":"C","a":"能被访问修饰符修饰，能被static修饰","b":"不能被访问修饰符修饰，不能被static修饰","c":"能被访问修饰符修饰，不能被static修饰","d":"不能被访问修饰符修饰，能被static修饰","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，以下关于匿名内部类的特点错误的是（     ）","answer":"D","a":"匿名内部类没有构造方法","b":"如果匿名内部类需要访问外部类的局部变量，则必须使用final修饰符修饰外部类的局部变量，否则系统将报错","c":"匿名内部类不能是抽象类","d":"匿名内部类不能实现接口","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在JAVA中，有以下代码 new Runnable（     ）{public void run（     ）{//重写该方法}};该类属于（     ）","answer":"B","a":"成员内部类","b":"匿名内部类","c":"局部内部类","d":"静态内部类","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"多选题","content":"在Java中，以下属于内部类的有（     ）【选三项】","answer":"ABC","a":"成员内部类","b":"局部内部类","c":"匿名内部类","d":"标准内部类","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"多选题","content":"在Java中，关于泛型的说法正确的是（     ）【选三项】","answer":"ABC","a":"泛型是JDK1.5出现的新特性","b":"泛型是一种安全机制","c":"使用泛型避免了强制类型转换","d":"泛型就是Object类型","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，下列关于泛型的说法，错误的是（     ）","answer":"B","a":"泛型是一种参数化类型","b":"可以取代继承机制","c":"避免了运行时进行类型转换可能的潜在性错误","d":"增强了程序的灵活性和安全性","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"多选题","content":"在Java中，以下语句正确的有（     ）【选两项】","answer":"AB","a":"List<String> list=new ArrayList<String>( );","b":"List<Integer> list=new ArrayList<>( );","c":"已知cat是Animal类的子类，则List<Animal> list=new ArrayList<Cat>();","d":"List<0bject> list=new ArrayList<Integer>( );","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，以下有关JDBC的描述选项正确的是（     ）","answer":"D","a":"JDBC是一种被设计成通用的数据库访问技术，JDBC技术不光可以应用在Java程序中，还可用在C++这样的程序中","b":"JDBC技术是SUN公司设计出来专门用在连接Oracle数据库的技术，连接其他数据库只能采用微软的ODBC解决方案","c":"微软的ODBC和SUN公司的JDBC解决方案都能实现跨平台使用，只是JDBC的性能要高于ODBC","d":"JDBC只是个抽象的调用规范，底层程序实际上要依赖于每种数据库的驱动文件","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，JDBC数据访问相关的类和接口定义在（     ）包中","answer":"A","a":"java.sql","b":"java.awt","c":"java.lang","d":"javax.swing","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，下列有关JDBC常用API相关描述错误的是（     ）","answer":"D","a":"java.sql.DriverManager管理JDBC驱动程序，使用它可以获取Connection对象","b":"java.sql.Connection建立与特定数据库的连接（会话）","c":"java.sql.Statement用于向数据库发送SQL语句","d":"java.sql.ResultSet提供了更为安全的预处理SQL功能，有效防止SQL注入","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，在使用JDBC操作数据库时，以下不会用到的接口和类的是（     ）","answer":"A","a":"System","b":"Class","c":"Connection","d":"ResultSet","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，下列关于Statement接口执行sql语句说法错误的是（     ）","answer":"C","a":"可用于执行insert、update或者delete语句","b":"对于CREATE TABLE 或 DROP TABLE等不操作行的语句，executeUpdate()的返回值总为零","c":"对于delete语句的效果是删除表中的一行或者多行，executeUpdate返回值是0或者1","d":"UPDATE语句的效果是修改表中零行或多行中的一列或多列。executeUpdate的返回值是一个整数，指示受影响的行数","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，下列获取数据库连接正确的是（     ）","answer":"A","a":"Connection conn=DriverManager.getConnection(URL,USER,PASSWORD);","b":"JDBCConnection conn=DriverManager.getConnection(URL,USER,PASSWORD);","c":"Connection conn=new Connection(URL,USER,PASSWORD);","d":"Connection conn=Driver.getConnection(URL,USER,PASSWORD);","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"多选题","content":"在Java中，使用JDBC执行如下SQL语句：SELECT name, rank, serialNo FROM employee， 在遍历结果集rs的时候能得到第一列数据的代码有（     ）【选两项】","answer":"CD","a":"rs.getString(0);","b":"rs.getString(\"rank\");","c":"rs.getString(1)","d":"rs.getString(“name”);","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"多选题","content":"在Java中，以下关于JDBC相关接口的描述正确的有（     ）【选两项】","answer":"AC","a":"Statement的executeQuery()方法会返回一个结果集ResultSet","b":"Statement的executeUpdate()方法会返回是否更新成功的boolean值","c":"ResultSet中的next()方法会使结果集中的下一行成为当前行","d":"以上描述都正确","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，下列不属于接口的是（     ）","answer":"D","a":"Statement","b":"Connection","c":"PreparedStatement","d":"DriverManager","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，使用JDBC对数据库中的数据进行更新(update)操作，需要调用的Statement对象的（     ）方法","answer":"B","a":"Update()","b":"executeUpdate()","c":"executeQuery()","d":"以上都不是","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，使用JDBC对数据库中的数据进行查询(select)操作，需要调用的是Statement对象的（     ）方法","answer":"C","a":"Query()","b":"executeUpdate()","c":"executeQuery()","d":"以上都不是","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"多选题","content":"在Java中，如果数据库中某个字段为numeric类型，可通过ResultSet的（     ）方法获取【选两项】","answer":"BC","a":"getNumeric()","b":"getDouble()","c":"getFloat()","d":"以上都不是","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"多选题","content":"在Java中，以下关于JDBC相关接口的描述正确的有（     ）【选两项】","answer":"AD","a":"PreparedStatement继承自Statement","b":"Statement继承自PreparedStatement","c":"ResultSet继承自Statement","d":"CallableStatement继承自PreparedStatement","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，有关Connection描述错误的是（     ）","answer":"D","a":"Connection是Java程序与数据库建立的连接对象，这个对象只能用来连接数据库，不能执行SQL语句","b":"JDBC的数据库事务控制要靠Connection对象完成","c":"Connection对象使用完毕后要及时关闭，否则会对数据库造成负担","d":"只有MySQL和Oracle数据库的JDBC程序需要创建Connection对象，其他数据库的JDBC程序不用创建Connection对象就可以执行数据库操作","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，关于MySQL数据库连接字符串正确的是（     ）","answer":"C","a":"jdbc:mysql://localhost/company","b":"jdbc:mysql://localhost:3306:company","c":"jdbc:mysql://localhost:3306/company","d":"jdbc:mysql://localhost/3306/company","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，关于Connection conn=DriverManager.getConnection(URL,USER,PASSWORD)描述错误的是（     ）","answer":"D","a":"URL表示连接数据库的路径","b":"USER表示登录数据库的账号","c":"PASSWORD表示登录数据库的密码","d":"conn表示执行数据库SQL语句的执行对象","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，Statement接口的作用是（     ）","answer":"B","a":"数据库连接","b":"向数据库发布的SQL命令","c":"结果集","d":"数据库元数据","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，对预编译的SQL语句UPDATE emp SET ename=?,job=?,salary=? WHERE empno=?的第三个问号赋值正确的是（     ）","answer":"B","a":"pst.setInt(\"3\",2000);","b":"pst.setInt(3,2000);","c":"pst.setFloat(\"salary\",2000);","d":"pst.setString(\"salary\",\"2000\");","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，使用Connection 的（     ）方法可以获取PreparedStatement接口对象","answer":"B","a":"createPrepareStatement()","b":"prepareStatement()","c":"createPreparedStatement()","d":"preparedStatement()","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，使用JDBC执行如下查询语句：SELECT COUNT(*) FROM Emp，如果员工表中没有任何数据， 那么ResultSet中将会（     ）","answer":"B","a":"null","b":"有数据","c":"不为null，但是没有数据","d":"以上都选项都不对","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，下列用于表示执行预编译的SQL语句的Java类是（     ）","answer":"B","a":"Statement","b":"PreparedStatement","c":"Connection","d":"ResultSet","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，以下选项关于PreparedStatement的说法错误的是（     ）","answer":"C","a":"PreparedStatement继承了Statement","b":"PreparedStatement可以有效的防止SQL注入","c":"PreparedStatement只能执行带问号占位符的预编译SQL，不能执行SQL语句","d":"PreparedStatement可以存储预编译的SQL语句，从而提升执行效率","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，根据用户在文本框txtName中输入的姓名对Student表进行查询，以下SQL语句定义正确的是（     ）","answer":"B","a":"String sql=\"Select * from Student where Sname=\"+txtName.getText();","b":"String sql=\"Select * from Student where Sname='\"+txtName.getText()+\"'\";","c":"String sql=\"Select * from Student where Sname like \"+txtName.getText();","d":"String sql=\"Select * from Student where Sname like '\"+txtName.getText()+\"'\";","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，使用JDBC时，对于多次调用同一条SQL语句的情况，使用（     ）通常会提高效率。","answer":"C","a":"Statement","b":"CallableStatement","c":"PreparedStatement","d":"ParementStatement","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，使用JDBC进行开发的步骤顺序描述正确的是（     ）","answer":"A","a":"加载驱动->获得连接->创建Statement对象->执行SQL语句->处理结果","b":"获得连接->加载驱动->创建Statement对象->执行SQL语句->处理结果","c":"加载驱动->获得连接->执行SQL语句->创建Statement对象->处理结果","d":"加载驱动->创建Statement对象->获得连接->执行SQL语句->处理结果","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，下列（     ）做法可以得到Connection对象和Statement对象。","answer":"C","a":"使用Class的getConnection方法可以得到Connection对象，使用Connection对象的createStatement方法可以得到Statement对象","b":"使用Class.getConnection方法可以得到Connection对象，使用DriverManager的createStatement方法可以获得Statement对象","c":"使用DriverManager的getConnection方法可以得到Connection对象，使用Connection对象的createStatement方法可以获得Statement对象","d":"使用DriverManager的getConnection方法可以得到Connection对象，使用Statement对象的createStatement方法可以获得Statement对象","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"多选题","content":"在Java中，以下关于Swing的描述，说法正确的是（     ）【选三项】","answer":"ABD","a":"Swing是在AWT的基础上构建的一套新的图形界面系统","b":"Swing是一个为Java设计的GUI工具包","c":"Swing由C语言实现，不再依赖于本地平台的GUI，因此可以在所有操作系统平台上都保持相同的界面外观","d":"Swing组件位于javax.swing包","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"},{"contentType":"单选题","content":"在Java中，以下关于JFrame窗口容器描述错误的是（     ）","answer":"B","a":"在Swing GUI中，JFrame是一个顶层容器，可以存放其他组件","b":"只能够调用JFrame类的构造方法，而不能通过继承的方式实现窗体类","c":"JFrame类构造方法创建的窗体是不可见的，需要开发人员通过硬编码的方式，设置窗体的可见性","d":"JFrame类构造方法创建的窗体默认的大小为0 x 0像素，默认的坐标是(0,0)，因此在开发中需要设置窗体的大小","__EMPTY":"null","__EMPTY_1":"null","__EMPTY_2":"null","__EMPTY_3":"null","__EMPTY_4":"null","__EMPTY_5":"null","__EMPTY_6":"null","__EMPTY_7":"null","__EMPTY_8":"null","__EMPTY_9":"null","__EMPTY_10":"null","__EMPTY_11":"null","__EMPTY_12":"null","__EMPTY_13":"null","__EMPTY_14":"null","__EMPTY_15":"null","__EMPTY_16":"null","__EMPTY_17":"null","__EMPTY_18":"null","__EMPTY_19":"null","__EMPTY_20":"null","__EMPTY_21":"null"}]