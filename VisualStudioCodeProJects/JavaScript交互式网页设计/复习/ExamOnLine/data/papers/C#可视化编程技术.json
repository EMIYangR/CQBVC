[{"contentType":"单选题","content":"在C#中，ADO.NET中，（     ）方法执行SQL语句，并返回受SQL语句影响或检索的行数","answer":"A","a":"ExecuteNonQuery","b":"ExecuteReader","c":"ExecuteQuery","d":"ExecuteScalar","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"多选题","content":"在C#中，ADO.net中，SqlCommand对象的ExecuteNonQuery（     ）方法适用于如下（     ）操作【选三项】","answer":"BCD","a":"查询","b":"添加","c":"修改","d":"删除","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，ADO.Net中，判断DataTable对象有多少条数据，以下写法正确的是（     ）","answer":"A","a":"table.rows.count","b":"table.rows.size","c":"table.rows.length","d":"table.rows","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，ADO.NET中，使用（     ）对象可以建立应用程序与数据库连接","answer":"C","a":"DataSet","b":"DataReader","c":"Connection","d":"Command","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"多选题","content":"在C#中，Ado.net中，数据适配器SqlDataAdapter的作用有两个，分别是哪两个（     ）【选两项】","answer":"AC","a":"填充数据集","b":"查询数据集","c":"更新数据集","d":"删除数据集","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，ADO.NET中，要向DataTable对象中添加一列，以下C#代码语法正确的是（     ）","answer":"B","a":"DataTable myTable = new DataTable(\"Months\");\nmyTable.Columns.Add(\"Month\", string);","b":"DataTable myTable = new DataTable(\"Months\");\nmyTable.Columns.Add(\"Month\", typeof(string));","c":"DataTable myTable = new DataTable(\"Months\");\nmyTable.Columns.Add(\"string\",Month);","d":"DataTable myTable = new DataTable(\"Months\");\nmyTable.Columns.Add(string ,\"Month\");","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，ADO.NET中的Command对象允许向数据库传递请求，以便检索和操作数据库中的对象，下列（     ）方法不是Command对象的方法","answer":"B","a":"ExecuteNonQuery","b":"Execute","c":"ExecuteReader","d":"ExecuteScalar","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，ADO.NET中用于建立Connection对象和数据集之间的桥梁的对象是(     )","answer":"D","a":"DataTable对象","b":"Command对象","c":"DataSet对象","d":"DataAdapter对象","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"多选题","content":"在C#中，C#窗体应用程序中，ComboBox控件添加选项的方式有如下哪几种方式（     ）【选两项】","answer":"AC","a":"通过控件设计界面直接添加","b":"通过控件样式进行添加","c":"通过代码进行添加","d":"通过注册事件进行添加","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#窗体应用程序中，获取CheckBox控件选中状态的属性是（     ）","answer":"C","a":"selected","b":"check","c":"checked","d":"selectedValue","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#窗体应用中，去除目标窗体MainForm的边框，使用如下哪个属性进行设置（     ）","answer":"A","a":"FormBorderStyle","b":"BorderStyle","c":"FormStyle","d":"Style","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，用try…catch机制处理程序中出现的（     ）错误","answer":"B","a":"编译","b":"运行","c":"逻辑","d":"语法","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，ToLower（     ）方法作用是（     ）","answer":"A","a":"获得字符串小写的形式","b":"获得字符串大写的形式","c":"截取字符串","d":"分割字符串","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，ToUpper（     ）方法作用是（     ）","answer":"B","a":"获得字符串小写的形式","b":"获得字符串大写的形式","c":"截取字符串","d":"没有该方法","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，CheckBox是指（     ）控件","answer":"C","a":"按钮","b":"单选按钮","c":"复选框","d":"状态栏","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，DataAdapter对象的（     ）方法用于将DataSet 中数据提交到数据库","answer":"C","a":"UpdateCommand","b":"Fill","c":"Update","d":"InsertCommand","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，DataAdapter对象使用与（     ）属性关联的Command对象将DataSet修改的数据保存入数据源","answer":"C","a":"SelectCommand","b":"InsertCommand","c":"UpdateCommand","d":"DeleteCommand","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，DataGridView 的（     ）属性，用于将 DataSet 中的数据显示在控件上","answer":"A","a":"DataSource","b":"DataSet","c":"DataBinding","d":"DataBind","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，DataSet 对象包含（     ）对象的集合","answer":"A","a":"DataTable","b":"DataColumn","c":"DataRow","d":"DataView","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，DataTable dt=new DataTable（     ）;\nDt.Columns.Add(“编号”,typeof(System.Int16));\nDt.Columns.Add(“成绩”,typeof(System.Int16));\nfor(int i=1;i<=3;i++){\nDataRow dr=dt.NewRow（     ）;\nDr[0]=i;\nDt.Rows.Add(dr);\n}\nConsole.WriteLine(dt.Rows.Count);","answer":"A","a":"3","b":"4","c":"5","d":"6","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"多选题","content":"在C#中，ListView具有多种显示视图，包括（     ）【选三项】","answer":"ABC","a":"List","b":"Details","c":"SmallIcon","d":"MaxLargeIcon","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，ListView控件的显示视图由（     ）属性设置","answer":"B","a":"ShowMenu","b":"View","c":"Details","d":"List","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，MessageBox.Show（     ）方法的返回值类型是（     ）","answer":"B","a":"MessageBoxResult","b":"DialogResult","c":"int","d":"void","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"多选题","content":"在C#中，NotifyIcon控件常用的属性有哪些（     ）？【选两项】","answer":"AB","a":"Icon","b":"Name","c":"String","d":"Close","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"多选题","content":"在C#中，PictureBox常用属性有（     ）【选三项】","answer":"ABC","a":"Image","b":"ImageLocation","c":"SizeMode","d":"None","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，SqlCommand对象执行SQL中聚合函数返回首行首列的方法是(     )","answer":"B","a":"ExecuteReader方法","b":"ExecuteScalar方法","c":"ExecuteNonquery方法","d":"ToString方法","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，SqlCommand对象中用于要设置执行的SQL语句或者存储过程的属性是(     )","answer":"B","a":"Connection属性","b":"CommandText属性","c":"CommandType属性","d":"Parameters属性","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，SqlConnection对象中用于连接SqlServer数据库的字符串属性的是(     )","answer":"C","a":"DataSource属性","b":"ServerVersion属性","c":"ConnectionString属性","d":"State属性","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，SqlDataAdaprer对象用于向数据源更新数据的方法是(     )","answer":"A","a":"Update方法","b":"Fill方法","c":"Delete方法","d":"Remove方法","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，SqlDataReader对象用于前进到下一条记录的方法是(     )","answer":"D","a":"GetData方法","b":"NextResult方法","c":"GetChar方法","d":"Read方法","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"多选题","content":"在C#中，String类的（     ）方法可以删除空格【选三项】","answer":"ACD","a":"Trim（）","b":"EndWith（）","c":"Replace（）","d":"Remove（）","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，string类的SubString(int a,int b)方法，能够截取字符串该方法的a和b两个参数，分别表示（     ）","answer":"C","a":"开始截取的索引，结束截取的索引","b":"结束截取的索引，开始截取的索引","c":"开始截取的索引，截取的字符数量","d":"开始截取的索引，重复字符的数量","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，要创建多文档应用程序，需要将窗体的（     ）属性设置为true","answer":"D","a":"DrawGrid","b":"Enabled","c":"ShowInTasker","d":"IsMdiContainer","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在Winform中，决定控件上文字的字形，字体，大小，颜色及效果的属性是（     ）","answer":"D","a":"Text","b":"Caption","c":"Name","d":"Font","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，为了使 ListView 控件右键单击时能够显示一个上下文菜单，必须设置其（     ）属性。","answer":"C","a":"ShowMenu","b":"MenuStrip","c":"ContextMenuStrip","d":"Menu","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"多选题","content":"在C#中，要使用适配器对象获取 MyTable 表中所有数据，假设 con 是可用的连接对象，则正确的方式为（     ）【选三项】","answer":"ABC","a":"SqlDataAdapter da = SqlDataAdapter(\"SELECT * FROM MyTable\", con);\t\nDataSet ds = new DataSet();\nda.Fill(ds);","b":"SqlCommand cmd = new (\"SELECT * FROM MyTable\", con);\nSqlDataAdapter da = SqlDataAdapter(cmd);\t\nDataSet ds = new DataSet();\nda.Fill(ds);","c":"SqlCommand cmd = new (\"SELECT * FROM MyTable\", con);\nSqlDataAdapter da = SqlDataAdapter(cmd);\t\nDataSet ds = new DataSet();\nda.Fill(ds, \"MyTable\");","d":"SqlDataAdapter da = SqlDataAdapter(\"SELECT * FROM MyTable\", con);\t\nDataSet ds = new DataSet();\nda.Fill(ds.Tables[\"MyTable\"]);","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"多选题","content":"在C#中，.Net Framework 数据提供程序包含的对象有（     ）【选三项】","answer":"ABC","a":"Connection","b":"Command","c":"DataReader","d":"Data","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，WinForms窗体的后缀名是(     )","answer":"A","a":"cs","b":"aspx","c":"form","d":"xml","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，WinForms的窗体中有一个名为mnmMenu的主菜单,下列代码(     )能正确删除文件选项，该选项为第一个菜单项。","answer":"B","a":"this.mnmMenu.Items.Remove(\"文件\");","b":"this.mnmMenu.Items.RemoveAt(0);","c":"this.mnmMenu.Items.RemoveAt(1);","d":"this.mnmMenu.Items.RemoveAt(\"文件\");","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，WinForm窗体程序总是从（     ）位置开始运行","answer":"D","a":"Form1类","b":"MainForm类","c":"Programe类","d":"Main()函数","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，WinForm窗体中，为了禁用一个名为btnOpen的Button 控件，下列做法正确的是（     ）。","answer":"B","a":"btnOpen.Enable=true","b":"btnOpen.Enable=false","c":"btnOpen.Visible=true","d":"btnOpen.Visible=false","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，WinForm中，如果复选框控件的 Checked属性值设置为 True，则表示（     ）","answer":"B","a":"该复选框不被选中","b":"该复选框被选中","c":"不显示该复选框的文本信息","d":"显示该复选框的文本信息","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，WinForm中，如果希望光标定位在需要输入的文本框内，则需要调用该文本框控件类的（     ）方法","answer":"C","a":"Cut（）","b":"Copy（）","c":"Focus（）","d":"Hide（）","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，WinForm中，为了防止用户无意关闭窗体，需要在（     ）事件中编写代码，提示用户是否关闭窗体","answer":"B","a":"Closed","b":"Closing","c":"BeforeClose","d":"Load","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，WinForm中，想使窗体运行后出现在电脑屏幕的正中央，则使用如下（     ）属性的（     ）值进行设置","answer":"B","a":"StartPosition  Manual","b":"StartPosition  CenterScreen","c":"StartPosition  CenterParent","d":"Position  CenterParent","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"多选题","content":"在C#中，WinForm中为PictureBox控件指定图像，可以通过如下哪些属性设置（     ）【选两项】","answer":"AC","a":"Image属性","b":"Src属性","c":"ImageLocation属性","d":"URL属性","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，按钮控件Button，设置（     ）属性，则用户每次按“Enter”键相当于“单击”该按钮","answer":"A","a":"AcceptButton","b":"Click","c":"Text","d":"TabIndex","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，按钮控件Button，设置（     ）属性，则用户每次按“ESC”键相当于“单击”该按钮","answer":"B","a":"Delete","b":"CancelButton","c":"Close","d":"Open","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，窗体的MouseMove是（     ）事件","answer":"C","a":"鼠标单击","b":"鼠标双击","c":"鼠标移动","d":"键盘按下","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，窗体对象的（     ）属性可以更改标题？","answer":"B","a":"Id","b":"Text","c":"Name","d":"Ttile","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，单选按钮指的是（     ）控件","answer":"B","a":"Button","b":"RadioButton","c":"CheckBox","d":"ComboBox","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，当窗体首次显示出来之前，会触发（     ）事件","answer":"A","a":"Load","b":"Show","c":"ShowDialog","d":"Click","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，当执行Sql语句“delete from tb_student”时，需要使用SqlCommand对象的（     ）方法执行？","answer":"A","a":"ExecuteNonQuery（）","b":"ExecuteScalar（）","c":"ExecuteReader（）","d":"ExecuteXmlReader（）","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，当执行Sql语句“select count(id) from tb_student”时，需要使用SqlCommand对象的（     ）方法执行？","answer":"D","a":"ExecuteNonQuery（）","b":"ExecutQuery（）","c":"ExecuteReader（）","d":"ExecuteScalar（）","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，定时器控件Timer的（     ）属性用于指定代码执行的间隔时间","answer":"A","a":"Interval","b":"Enable","c":"Visiable","d":"Run","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，复选框控件ChekBox，选中状态发生变化时，将触发（     ）事件","answer":"C","a":"Click","b":"Select","c":"CheckedChange","d":"Check","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，工具条和状态条按钮和标签的（     ）属性，用于设置图形和文本的显示方式","answer":"A","a":"DisplayStyle","b":"Image","c":"Text","d":"ImageText","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，关键字（     ），可以捕捉可能引发异常","answer":"A","a":"catch","b":"try","c":"finally","d":"throw","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"多选题","content":"在C#中，关于C#类和对象的说法，下列正确的有（     ）【选两项】","answer":"BD","a":"类是现实事物的客观存在","b":"类是现实事物的抽象存在","c":"类就是对象，对象就是类","d":"类是对象的高度概括，对象是类的具体实现","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"多选题","content":"在C#中，关于C#中静态方法与实例方法的区别，下列说法正确的有（     ）【选两项】","answer":"BC","a":"在静态方法中，可以直接访问非静态成员","b":"在静态方法中，不可以直接访问非静态成员","c":"在实例方法中，可以直接调用静态方法","d":"在实例方法中，不可以直接调用静态方法","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，关于catch代码块，说法正确的是（     ）","answer":"C","a":"包含有可能引发异常的语句块","b":"无论是否发生异常，catch块总是会被执行","c":"异常处理程序位于catch代码块中","d":"一般不与try配合使用，而是单独使用","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#窗体应用程序中，关于Appplication.Exit（     ） 和 Form.Close（     ）下列说法正确的是（     ）","answer":"C","a":"两者都可以关闭整个应用程序","b":"两者都不能关闭应用程序","c":"前者关闭应用程序，后者关闭窗体","d":"前者关闭窗体，后者关闭应用程序","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，TreeView控件（     ）属性是用于设置控件名称的？","answer":"A","a":"Name","b":"Text","c":"Node","d":"以上都不对","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，TreeView控件用于显示具有层次结构的数据，它由层叠的（     ）构成","answer":"A","a":"Node(节点)","b":"Tree(树)","c":"content(内容)","d":"Tag","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，Windows窗体应用中，我们可使用（     ）控件实现下拉选项框的功能","answer":"B","a":"TextBox","b":"ComboBox","c":"ListView","d":"Label","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"多选题","content":"在C#中，Windows窗体应用中，要想分别使TextBox处于不可见状态和不可编辑状态，应分别使用如下哪两个（     ）属性进行设置【选两项】","answer":"BD","a":"Locked","b":"Visiable","c":"Enabled","d":"ReadOnly","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，WinForms窗体程序中，(     )是主程序文件。","answer":"D","a":"properties.cs","b":"form.cs","c":"form.designer.cs","d":"program.cs","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，请分析如下c#代码片段，选择正确的输出结果（     ）\nstring str = \"today is Monday\";\nint index = str.IndexOf(\"s\");\nstring s1 = str.SubString(2,3);\nstring s2 = str.SubString(2);\nConsole.WriteLine(index+\",\"+s1+\",\"+s2);","answer":"C","a":"8,oday,Monday","b":"7,day,Monday","c":"7,day,day is Monday","d":"8,oday,day is Monday","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，如果要将窗体设置为透明的，则（     ）","answer":"B","a":"要将formboderstyle属性设置为none","b":"要将opacity属性设置为小于100%","c":"要将locked 属性设置为true","d":"要将 enabled属性设置为true","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，若将数据库中的数据填充到数据集，应调用SqlDataAdapter的（\t \t）方法。","answer":"C","a":"Open","b":"Close","c":"Fill","d":"Update","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，若要使TextBox中的文字不能被修改，应对（     ）属性进行设置。","answer":"D","a":"Locked","b":"Visible","c":"Disabled","d":"ReadOnly","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，设现有数据库连接对象 con，要在该数据库连接中执行 SQL 语句计算 Student 表中的记录数量，现有代码：\nSqlCommand cmd = new SqlCommand（     ）;\ncmd.CommandText = \"SELECT count(ID) FROM Student\";\ncmd.Connection = con;\n____________________;\t// 执行 SQL 语句\n空白处应该填入（     ）代码。","answer":"C","a":"cmd.ExecuteNonQuery()","b":"cmd.ExecuteReader()","c":"cmd.ExecuteScalar()","d":"cmd.Execute()","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，设有 ListView 控件名为 objListView，向其中第一行添加 ListViewSubItem 的代码正确的是（     ）","answer":"D","a":"objListView.Items[0].ListViewSubItems.Add(\"Hello Kitty\");","b":"objListView.SubItems[0].Add(\"Hello Kitty\");","c":"objListView[0].SubItems.Add(\"Hello Kitty\");","d":"objListView.Items[0].SubItems.Add(\"Hello Kitty\");","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，设有 ListView 控件名为 objListView，要获取其选中的 ListViewItem 的文本，代码正确的是（     ）","answer":"D","a":"string str = objListView.Text;","b":"string str = objListView.SelectedItem.Text;","c":"string str = objListView.Items[0].Text;","d":"string str = objListView.SelectedItems[0].Text;","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，设置窗体的（     ）属性可以更改窗体图标","answer":"A","a":"Icon","b":"Enable","c":"Visiable","d":"Text","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，设置密码不可见，需要把TextBox的（     ）属性值设置为*","answer":"B","a":"Password","b":"PasswordChar","c":"Text","d":"Name","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，图片框控件的（     ）属性获取或设置其显示的图像","answer":"A","a":"Image","b":"Picture","c":"Text","d":"Show","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，下列不属于容器控件的是（     ）","answer":"D","a":"Form","b":"GroupBox","c":"Panel","d":"ComboBox","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"多选题","content":"在C#中，下列关于C#的异常处理的说法，正确的有（     ）【选三项】","answer":"BCD","a":"try块必须跟catch块组合使用","b":"一个try块可以跟随多个catch块","c":"使用throw语句既可引发系统异常，也可以引发由开发人员创建的自定义异常","d":"在try … catch … finally块中，即便开发人员编写强制逻辑代码，也不能跳出finally块的执行","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，下列关于DataSet 的说法错误的是（     ）","answer":"D","a":"在DataSet中可以包含多个DataTable","b":"DataSet可以简单地理解为一个临时数据库","c":"DataSet实际是从数据源中检索到的数据在内存中的缓存","d":"在与数据库断开连接后，DataSet中的数据会消失","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，下列关于Windows基本控件的说法，错误的是(   )","answer":"D","a":"可以将常用控件按功能划分为文本类控件，选择类控件和分组类控件等","b":"Winform中的菜单有两种，分别为下拉式菜单和弹出式菜单","c":"工具栏通常位于菜单栏下方，由许多命令按钮组成，每个按钮上都有一个代表功能的小图标","d":"状态栏通常用于显示应用程序的系统信息，它只能显示文本","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，下列关于Windows窗体的说法，错误的是（     ）","answer":"C","a":"Windows窗体是对象","b":"窗体类是Form","c":"Windows应用程序中只能有一个窗体","d":"可以通过设置窗体的属性，个性化地展示窗体","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，下列关于窗体事件的描述，不正确的是（     ）","answer":"C","a":"窗体自带了丰富的事件，开发人员仅需在其中编写逻辑代码即可实现相应的功能","b":"窗体加载时会触发窗体的Load事件","c":"在窗体被关闭时，会触发窗体的FormClick","d":"在窗体被关闭时，会触发窗体的FormClosing事件","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"多选题","content":"在C#中，下列属于对象的是（     ）【选两项】","answer":"AD","a":"学号是2070的学生","b":"98路公交车","c":"iphone11","d":"清华大学","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"多选题","content":"在C#中，.net中，常用的系统命名空间有（     ）【选三项】","answer":"BCD","a":"System.String","b":"System.Windows","c":"System.IO","d":"System.Data","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，下列选项中，关于Connection对象描述错误的是（     ）","answer":"C","a":"Connection对象用于连接数据库","b":"在应用程序和数据库之间建立了一条数据传输通道。","c":"数据库连接对象建议使用static 关键字修饰","d":"只有创建并打开连接，应用程序才能操作数据库中的数据","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"多选题","content":"在C#中，ConnectionState对象的枚举值包括（     ）【选三项】","answer":"ABC","a":"Executing","b":"Fetching","c":"Connecting","d":"Error","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，ExecuteNonQuery（     ）方法的返回值类型是（     ）","answer":"A","a":"int","b":"bool","c":"Object","d":"List","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"多选题","content":"在C#中，下列选项中，关于DataReader对象的描述，正确的是（     ）【选三项】","answer":"ABD","a":"DataReader是一个只读只进的数据读取器","b":"在读取过程中，必须保持连接打开状态","c":"DataReader对象可以对数据库中的数据进行增、删、改、查和执行聚合函数等操作","d":"每次只能读取一行数据","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，如果判断一个或者多个连续字符在目标字符串中是否存在，使用Stirng类的（     ）方法","answer":"B","a":"Split()","b":"IndexOf()","c":"Join()","d":"SubString()","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，string str=\"china,hubei,shiyan,hgzy\";\nConsole.WriteLine(str.Split(':').Length);\n该代码执行的结果是（     ）","answer":"D","a":"4","b":"3","c":"5","d":"1","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，int num1=10,num2=22,num3=44;\nConsole.WriteLine(\"{1},{2},{0}\",num1,num2,num3);\n程序的运行结果是（     ）","answer":"C","a":"程序运行出错","b":"=\"10","c":22,"d":"44\"","__EMPTY":22,"__EMPTY_1":"10\""},{"contentType":"单选题","content":"在C#中，关于static关键字，下列说法错误的是（     ）","answer":"A","a":"创建对象时初始化","b":"只能访问静态成员","c":"使用类名进行访问","d":"静态属性和方法被类的所有对象共享","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"多选题","content":"在C#中，关于实例字段，下列描述正确的是（     ）【选两项】","answer":"BC","a":"加载类的过程中,完成实例字段的内存分配","b":"对象名.字段名来访问实例字段","c":"实例字段修改后,不会影响其他对象的字段值","d":"所有对象共享该实例字段的内存空间，均可对其访问","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"多选题","content":"在C#中，常见的异常处理结构有（     ）【选三项】","answer":"ACD","a":"try…finally","b":"catch…finally","c":"try…catch","d":"try…catch…finally","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，try{\n//代码块1\nreturn 0;\n}\ncatch(Exception e){\n//代码块2\n}finally{\n//代码块3\n}\n如果程序没有捕捉到异常，上面代码中的执行结果是（     ）","answer":"A","a":"先执行代码块3，后执行return语句","b":"程序报错","c":"return0语句不执行","d":"先执行return语句，后执行代码块3","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，FormatException是（     ）","answer":"B","a":"算术异常","b":"参数格式错误异常","c":"非法参数异常","d":"数组下标越界异常","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"多选题","content":"在C#中，关于DataGridView控件的属性描述正确的有（     ）【选两项】","answer":"BC","a":"Rows获取总条数","b":"DataSource 获取数据源","c":"Name 获取控件的名称","d":"Columns 获取总列的名称","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，关于SqlCommand命令对象编写正确的是（     ）","answer":"A","a":"SqlCommand cmm = new SqlCommand(sql语句，Connection对象);","b":"SqlCommand cmm = new SqlCommand(Connection对象，sql语句);","c":"SqlCommand cmm = new SqlCommand(sql语句);","d":"SqlCommand cmm = new SqlCommand(Connection对象);","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，关于数据库连接字符串代码正确的是（     ）","answer":"A","a":"private static string DBConnectString = \"server=.;database=FreshLiveDB;uid=sa;pwd=123;\";","b":"private static string DBConnectString = \"server=.;database=FreshLiveDB;id=sa;pwd=123;\";","c":"private static string DBConnectString = \"server=.;database=FreshLiveDB;id=sa;password=123;\";","d":"private static string DBConnectString = \"server=.;database=FreshLiveDB;name=sa;pwd=123;\";","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，控制窗体是否可见，可以使用WindowsState属性，以下是WindowsState属性值的是（     ）","answer":"A","a":"Normal","b":"Min","c":"Max","d":"以上都不是","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，控制窗体显示位置，可以使用Startposition属性，以下是Startposition属性值的是（     ）","answer":"D","a":"None","b":"Top","c":"Left","d":"Manual","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，要设置一个窗体为MDI窗体的子窗体，必须设置其（     ）属性","answer":"B","a":"IsMdiParent","b":"MdiParent","c":"IsMdiContainer","d":"MDIContainer","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，要使图片框充满整个窗体，必须设置（     ）属性","answer":"B","a":"Anchor","b":"Dock","c":"Fill","d":"Full","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，要使文本框能够显示多行，必须设置其（     ）属性","answer":"A","a":"Multiline","b":"Dock","c":"Size","d":"Position","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，已知在WinForms窗体中有一个Timer控件，Interval属性设为4分钟，当控件记时1分钟后，调用了控件的Stop方法，再过一分钟，重新调用控件的Start方法，则自该次调用Start方法后，第一次发出控件的Tick事件的间隔是（     ）分钟","answer":"C","a":"2","b":"3","c":"4","d":"5","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，已知在WinForm窗体中有一个Timer控件，要设置 3 秒执行一次，则Interval属性应  设置为（     ）","answer":"D","a":"3","b":"30","c":"300","d":"3000","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，以下不是ImageList常用属性的是（     ）","answer":"D","a":"Images","b":"ImageSize","c":"ColorDepth","d":"length","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，以下不是RadioButton控件常用的属性是（     ）","answer":"D","a":"Text","b":"Checked","c":"Name","d":"Length","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，以下不属于DataGridView常用的属性是（     ）","answer":"D","a":"Name","b":"DataSouce","c":"Rows","d":"Count","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，以下代码输出结果是（     ）\nstring str = \"aaa@qq.com\";\n      string[] result = str.Split('@');\n    Console.WriteLine(result[0]);","answer":"A","a":"aaa","b":"qq.com","c":"qq","d":"代码编写有误，不能运行","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，以下代码输出结果是（     ）\nstring str = \"abcd\";\n            int result = str.LastIndexOf(\"d\");\n   Console.WriteLine(result);","answer":"B","a":"4","b":"3","c":"0","d":"代码编写有误，不能运行","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，以下代码输出结果是（     ）\nstring str=\"abcd\";\nint result=str.IndexOf(\"a\");\nConsole.WriteLine(result);","answer":"B","a":"-1","b":"0","c":"1","d":"代码编写有误，不能运行","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，下列关于窗体事件的描述，不正确的是（     ）","answer":"D","a":"窗体的显示有两种方式，分别为非模式窗体和模式窗体","b":"调用窗体对象Show（）方法，以非模式窗体显示","c":"调用窗体对象的ShowDialog（）方法，以模式窗体显示","d":"模式窗体与非模式窗体，两种显示方式没有区别","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，下列关于窗体属性的说法，不正确的是（     ）","answer":"B","a":"可以设置窗体的Icon属性，用于更换窗体图标","b":"可以设置窗体的BackColor，用于设置窗体的背景图片","c":"可以设置窗体的FormBorderStyle属性，用于更改窗体的边框样式","d":"可以设置窗体的StartPosition属性，用于确定窗体的起始位置","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，下列关于多文档界面（MDI）应用程序的描述，不正确的是（     ）","answer":"D","a":"每个应用程序中只能有一个MDI父窗体，在父窗体中可以打开多个MDI子窗体","b":"任何MDI子窗体都只能在父窗体内部区域活动","c":"关闭任何子窗体时，对父窗体以及其他打开的子窗体均没有任何影响","d":"当关闭父窗体时，所有打开的子窗体不会关闭","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，下列关于类和对象的描述，不正确的是（     ）","answer":"D","a":"对象是类的实例","b":"实例化对象时需要使用关键字new","c":"对象是类的具体体现","d":"可以先有对象再有类","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，要设置一个窗体为MDI窗体，必须设置其（     ）属性","answer":"C","a":"IsMdiParent","b":"MdiParent","c":"IsMdiContainer","d":"MDIContainer","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，若想向数据库中插入一条记录，应使用Command对象的（     ）方法。(选1项)","answer":"D","a":"ExecuteReader()","b":"ExecuteInsert()","c":"ExecuteQuery()","d":"ExecuteNonQuery()","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#程序中,以下（     ）代码显示一个模式对话框","answer":"C","a":"Form M=new Form(); showDialog(M);","b":"Form M=new Form(); Show(M);","c":"Form M=new Form(); M.ShowDialog();","d":"Form M=new Form(); M.Show();","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，在.NET，以下（     ）事件是窗体关闭后被触发的。（选择一项）","answer":"C","a":"Unload","b":"Deactivate","c":"FormClosed","d":"Closing","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，要从数据库中读取数据填充数据集，需要使用（     ）方法。(选1项)","answer":"D","a":"Read()","b":"ExecuteReader()","c":"Update()","d":"Fill()","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"多选题","content":"在C#中，注释方法有（     ）【选两项】","answer":"AB","a":"以/*开头，以*/结尾","b":"以//开头","c":"以--开头","d":"以\"开头","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，WinForms中的（     ）控件中能包含多个图片，并提供给其他控件使用。","answer":"D","a":"文本框","b":"图片框","c":"数据表格","d":"图像列表","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，要在Winforms窗体中使用DataGridView控件来绑定并显示一张表的数据，需要设置其（     ）属性来指定数据源","answer":"D","a":"DataBind","b":"ID","c":"Style","d":"DataSource","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在.NET的控件中，Panel、GroupBox、TabControl等分组控件，有时候也被称之为（     ）","answer":"D","a":"排列控件","b":"基类控件","c":"组合控件","d":"容器控件","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在ADO.NET中,下列（     ）组件用来获得只读只进数据","answer":"C","a":"DataAdapter","b":"DataSet","c":"DataReader","d":"Command","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在.NET中,一些数据类型为引用类型,当引用类型的值为（     ）时,表明没有引用任何对象","answer":"A","a":"Null","b":"Nothing","c":"Empty","d":"0","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"多选题","content":"在C#中，以下属于Connection对象常用属性的有（     ）【选两项】","answer":"AC","a":"ConnectionString","b":"close","c":"State","d":"Open","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"多选题","content":"在C#中，以下属于Connection对象方法的是（     ）【选两项】","answer":"AB","a":"Open（）","b":"Close（）","c":"Execute（）","d":"Fetching（）","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"多选题","content":"在C#中，以下属于DataReader对象的方法是（     ）【选三项】","answer":"ABC","a":"Read（）","b":"Close（）","c":"GetName","d":"SetName","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，以下属于窗体的常用事件是（     ）","answer":"A","a":"Load","b":"Open","c":"Max","d":"Min","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"多选题","content":"在C#中，以下是ADO.Net 核心对象的有（     ）【选两项】","answer":"AB","a":"Connection","b":"Command","c":"Start","d":"Open","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，用于打开SqlConnection对象的方法是(     )","answer":"C","a":"Select方法","b":"Find方法","c":"Open方法","d":"Close方法","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，用于关闭SqlConnection对象的方法是(     )","answer":"D","a":"Select方法","b":"Find方法","c":"Open方法","d":"Close方法","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，在ADO.NET，填充DataSet的对象是（     ）","answer":"D","a":"SqlConnection","b":"SqlDataReader","c":"SqlCommand","d":"SqlDataAdapter","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在ADO.NET中，SqlConnection类所在的命名空间是（     ）。","answer":"D","a":"System","b":"System.Data","c":"System.Data.OleDb","d":"System.Data.SqlClient","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在ADO.NET中，对数据库中表的修改操作，需要使用如下（\t）对象进行","answer":"A","a":"SqlCommand","b":"SqlCommandBuilder","c":"SqlDataReader","d":"Connection","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在ADO.NET中，如果需要保存某Dataset对象中已经修改的数据，则需要使用（     ）对象，该对象可以自动生成更新用的相关命令","answer":"C","a":"SqlDataReader","b":"SqlCommand","c":"SqlCommandBuilder","d":"SqlDataAdapter","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在ADO.NET中，为访问DataTable对象从数据源提取的数据行，可使用DataTable对象的（     ）属性","answer":"A","a":"Rows","b":"Columns","c":"Constraints","d":"DataSet","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在ADO.NET中，下列能够提供与SQL Server数据库连接的对象是（     ）","answer":"B","a":"Command对象","b":"SqlConnection对象","c":"OleConnection对象","d":"以上都不正确","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C# WinForms程序中，以下不属于Label属性的一项是(  )。","answer":"D","a":"MaxLength","b":"Multiline","c":"Items","d":"ReadOnly","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C# WinForms程序中，以下关于Timer控件说法正确的是（     ）。","answer":"D","a":"有属性Start()和Stop()","b":"有方法Enabled()","c":"有事件Interval","d":"有事件Tick","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C# WinForm程序中，新建的窗体后台cs代码自动继承了（     ）类","answer":"A","a":"Form","b":"Form1","c":"Windows","d":"object","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C# WinForm程序中，以下不能绑定DataGridView数据源的是（     ）","answer":"C","a":"DataTable","b":"DataSet","c":"Index","d":"List","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#WinForm中，用于创建工具栏的控件是（     ）","answer":"B","a":"MenuStrip","b":"ToolStrip","c":"Text","d":"Button","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#WinForm中，用于创建主菜单的控件是（     ）","answer":"D","a":"Form","b":"ContextMenuStrip","c":"Label","d":"MenuStrip","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#窗体应用程序中，要显示一个信息为\"this is a test!\"，标题为\"Hello\"的消息框，正确的语句是（     ）","answer":"B","a":"MessageBox(\"this is a test!\",\"Hello\");","b":"MessageBox.Show(\"this is a test!\",\"Hello\");","c":"MessageBox(\"Hello\", \"this is a test!\");","d":"MessageBox.Show(\"Hello\", \"this is a test!\");","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#开发的Windows应用程序中，下列能够把Form窗体显示为模式窗体对话框的是(     )","answer":"D","a":"Form f=new Form();\nf.Show();\nf.Modal=true;","b":"Form f=new Form(Dialog);","c":"Form f=new Form();","d":"Form f=new Form();\nf.ShowDialog();","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#语言开发的WinForms程序中，当消息框的返回值时，可以使用（     ）类型的变量直接接收","answer":"D","a":"string","b":"int","c":"long","d":"DialogResult","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在ADO.NET中，下列关于连接对象Connection的说法错误的是（     ）","answer":"A","a":"任何.Net Formework提供程序，对应的连接对象都是Connection","b":"使用SqlServer数据时，需要使用命名空间System.Data.SqlClient下的SqlConnection类","c":"访问Access数据库时，需要使用OleDbConnection进行数据库连接","d":"创建Connection对象，需要指定连接字符串","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，下列关于ADO.NET操作数据库的原理，说法有误的是(     )","answer":"D","a":"可以将ADO.NET操作数据库的原理与抽水机抽水的原理进行类比","b":"Connection对象类似于伸入水中的进水笼头，保持与水的接触","c":"Command对象类似于抽水机，为抽水提供动力和执行方法","d":"DataReader对象类似于输水管，通过发动机将水库中的水输送至水池中进行缓存","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在ADO.NET中，DataReader对象用于从数据库中检索只读的数据，使用（     ）语句可以创建一个DataReader对象","answer":"A","a":"SqlDataReader   reader=command.ExecuteReader( )","b":"SqlDataReader   reader=command.ExecuteNonQuery()","c":"SqlDataReader   reader=new SQLDataReader()","d":"SqlDataReader   reader=command.ExecuteScalar( )","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"多选题","content":"在C#中，使用C#开发数据库应用程序，为了访问和操作数据库，ADO.Net提供了两个重要的组件（     ）【选两项】","answer":"CD","a":"Connection","b":"Command","c":"DataSet","d":".Net Framework数据提供程序","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在ADO.NET中，Command对象用于执行SQL命令，如果需要得到多行多列的查询结果，则需要使用该对象的（     ）方法","answer":"C","a":"Execute()","b":"ExecuteNonQuery()","c":"ExecuteReader()","d":"ExecuteScalar()","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，下列关于数据集DataSet的说法，错误的是（     ）","answer":"C","a":"在DataSet中可以包含多个DataTable","b":"DataSet可以简单地理解为一个临时数据库","c":"在与数据看看断开连接后，DataSet中的数据会消失","d":"DataSet是数据源中检索到的数据在内存中的缓存","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，下列（     ）对象可用于DataSet中填充数据以及将修改后的数据更新至数据库。","answer":"D","a":"Connection","b":"DataReader","c":"Command","d":"DataAdapter","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在程序中创建一个DataSet对象ds和一个SqlDataAdapter对象dap，若要将数据库中的Singer表的数据填充至ds对象的SingerList表中，则下列语句正确的是（     ）","answer":"B","a":"dap.Fill(ds)","b":"dap.Fill(ds.\"SingerList\")","c":"dap.Fill(ds.\"Singer\")","d":"dap.Fill(ds.\"Singer\",\"SingerList\")","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在Net 框架中，下列被称为根命名空间的是（     ）","answer":"A","a":"System","b":"System.IO","c":"System.Data","d":"System.Collection","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，下列关于命名空间的说法，错误的是（     ）","answer":"D","a":"定义命名空间使用关键字namespace","b":"命名空间能够对类进行分类管理，从而有效的避免了类名冲突问题","c":"导入命名空间使用关键字using","d":"当两个相互操作的类不在同一个命名空间时，可以直接访问","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，以下关于Lable控件代码描述正确的是（     ）","answer":"A","a":"this.lable.text 获取lable控件的文本值","b":"this.lable.string 获取lable控件的文本值","c":"this.lable.name 获取lable控件的文本值","d":"this.lable.text.string 获取lable控件的文本值","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，以下关于MessageBox.Show（     ）方法中4个参数，说法正确的是（     ）","answer":"A","a":"MessageBox.Show(要显示的字符串，消息框的标题，消息框按钮，消息框图标)","b":"MessageBox.Show(要显示的字符串，消息框按钮，消息框的标题，消息框图标)","c":"MessageBox.Show(消息框按钮，消息框图标，要显示的字符串，消息框的标题)","d":"以上都不对","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"多选题","content":"在C#中，以下哪些控件可以实现单选按钮的分组（     ）？【选两项】","answer":"CD","a":"MenuStrip","b":"Combobox","c":"GroupBox","d":"Panel","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，以下是TextBox控件常用事件的是（     ）","answer":"D","a":"Delete","b":"Close","c":"Open","d":"Click","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"多选题","content":"在C#中，以下属于Command对象的方法是（     ）【选三项】","answer":"ABC","a":"ExecuteNonQuery（）","b":"ExecuteReader（）","c":"ExecuteScalar（）","d":"ExecuteCount（）","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，winform窗体中有一个年龄文本框 txtAge，下列代码中，可以获得文本框中的年龄值的选项是（     ）","answer":"B","a":"int age = txtAge;","b":"int age = Convert.toInt32(txtAge.Text);","c":"txtAge.Text = 19;","d":"int age = txtAge.Text;","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，定义命名空间的关键字是（     ）","answer":"A","a":"namespace","b":"class","c":"string","d":"int","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在C#中，使用（     ）关键字来导入命名空间","answer":"B","a":"import","b":"using","c":"for","d":"foreach","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在DataSet 中，若修改某一DataRow 对象的任何一列的值，该行的DataRowState 属性的值将变为（     ）","answer":"D","a":"DataRowState.Added","b":"DataRowState.Updated","c":"DataRowState.Detached","d":"DataRowState.Modified","__EMPTY":"null","__EMPTY_1":"null"},{"contentType":"单选题","content":"在Visual Studio集成开发环境中有两类窗口，分别为浮动窗口和固定窗口，下列不属于浮动窗口的是（     ）","answer":"D","a":"工具箱","b":"属性","c":"工具栏","d":"窗体","__EMPTY":"null","__EMPTY_1":"null"}]